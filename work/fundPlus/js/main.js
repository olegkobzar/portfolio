function preloader() {	if ($('#preloader').length) {		setTimeout(function() {			$('#preloader').fadeOut('slow', function() {				$('body').removeClass('overflow-hidden').css('padding', '');			});		}, 1000);	}}$(window).on('load', preloader);function autoFooter() {    var $wrapper = $('.wrapper');    var $footer = $('.footer');    if ($wrapper.length) {        $wrapper.css('padding-bottom', $footer.outerHeight()).css('margin-bottom', -$footer.outerHeight());    }}function controller(ctrl, cb) {    var controllerWrapper = $('[data-controller="' + ctrl + '"]');    if(controllerWrapper.length) {        cb(controllerWrapper);    }}//---------------------------------------//// Подключаем набор написаных скриптов (requare/developRequare.js)//---------------------------------------//// выполняем их после того, как DOM построится $(document).ready(function() {	autoFooter();	 $.reject({  	//	header: 'Your browser is not supported here', // Header Text  	//	paragraph1: 'You are currently using an unsupported browser', // Paragraph 1  	//	paragraph2: 'Please install one of the many optional browsers below to proceed',  	//	closeMessage: 'Close this window at your own demise!' // Message below close window link  		 reject: { 			all: false,			msie: 9,			chrome: 40,			firefox: 30,			safari4: 4		}, 		display: [], // What browsers to display and their order (default set below)		browserShow: true, // Should the browser options be shown?		browserInfo: { // Settings for which browsers to display			chrome: {				// Text below the icon				text: 'Google Chrome',				// URL For icon/text link				url: 'http://www.google.com/chrome/'				// (Optional) Use "allow" to customized when to show this option				// Example: to show chrome only for IE users				// allow: { all: false, msie: true }			},			firefox: {				text: 'Mozilla Firefox',				url: 'http://www.mozilla.com/firefox/'			},			safari: {				text: 'Safari',				url: 'http://www.apple.com/safari/download/'			},			opera: {				text: 'Opera',				url: 'http://www.opera.com/download/'			},			msie: {				text: 'Microsoft Edge',				url: 'http://www.microsoft.com/'			}		},		// Pop-up Window Text		header: 'Did you know that your Internet Browser is out of date?',		paragraph1: 'Your browser is out of date, and may not be compatible with '+					'our website. A list of the most popular web browsers can be '+					'found below.',		paragraph2: 'Just click on the icons to get to the download page',		// Allow closing of window		close: true,		// Message displayed below closing link		closeMessage: 'By closing this window you acknowledge that your experience '+						'on this website may be degraded',		closeLink: 'Close This Window',		closeURL: '#',		// Allows closing of window with esc key		closeESC: true,		// Use cookies to remmember if window was closed previously?		closeCookie: false,		// Cookie settings are only used if closeCookie is true		cookieSettings: {			// Path for the cookie to be saved on			// Should be root domain in most cases			path: '/',			// Expiration Date (in seconds)			// 0 (default) means it ends with the current session			expires: 0		},		// Path where images are located		imagePath: './img/browsers/',		// Background color for overlay		overlayBgColor: '#000',		// Background transparency (0-1)		overlayOpacity: 0.8,		// Fade in time on open ('slow','medium','fast' or integer in ms)		fadeInTime: 'fast',		// Fade out time on close ('slow','medium','fast' or integer in ms)		fadeOutTime: 'fast',		// Google Analytics Link Tracking (Optional)		// Set to true to enable		// Note: Analytics tracking code must be added separately		analytics: false	}); 	//---------------------------------------//	// Подключаем скрипты компонентов страниц ( modules )	//---------------------------------------//	function spinerRun() {		if ($('.js-spiner').length) {			$('.js-spiner').spinner();		}	}	spinerRun();	var spinerPlus = $('.js-spinner-plus');	var spinerMinus = $('.js-spinner-minus');	function result() {		var totalAssets = $('.js-total-assets').val();		var average = $('.js-average').val();		var managementFee = $('.js-total-one');		var performanceFee = $('.js-total-two');		var resText = $('.js-res-text');		const perAnnum = 0.00167;		var res1 = (totalAssets * perAnnum).toFixed(0);		var res2 = (((totalAssets * (average / 100)) * 0.25) / 12).toFixed(0);		managementFee.text(res1.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ","));		performanceFee.text(res2.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ","));		if (totalAssets) {			resText.text(totalAssets.toString().replace(/\B(?=(\d{3})+(?!\d))/g, " "));		}	}	result();	spinerPlus.on('click', result);	spinerMinus.on('click', result);	var spinerPlusOne = $('.js-spinner-plus-one');	var spinerMinusOne = $('.js-spinner-minus-one');	var ulList = $(".js-list-icon");	var str = "<li class='calc__item'><div class='calc__user'><svg class='icon-user'><use xlink:href='#user'></use></svg></div><div class='calc__user-text'>50K</div></div></li>";	function iconSumm() {		const summ = 50000;		var totalAssets = $('.js-total-assets').val();		var numberIcon = Number(totalAssets / summ);		$('.js-number').text(numberIcon);		for (var i = 0; i < numberIcon; i++) {			ulList.append(str);		}	}	iconSumm();	spinerPlusOne.on('click', function() {		ulList.empty();		iconSumm();	});	spinerMinusOne.on('click',  function() {		ulList.empty();		iconSumm();	});
	controller('contacts', function (ctrlSelf) {	    var trigger = $('.js-contacts-trigger');	    var activeTrigger = $('.js-contacts-trigger.active').attr('data-country').toLowerCase();	    var input = $('.js-phone-input');	    var telSwitch = $('.js-tel-switch');	    setAddress(activeTrigger);	    setMapPosition(activeTrigger);	    trigger.on('click', function () {	        var data = $(this).attr('data-country').toLowerCase();	        $(this).addClass('active').siblings().removeClass('active');	        setAddress(data);	        setMapPosition(data);	    });	    telSwitch.on('click', function () {	        if (!$(this).hasClass('active')) {	            $(this).addClass('active').siblings().removeClass('active');	            if ($(this).hasClass('js-tel-skype')) {	                $('.skype-state').show();	                $('.phone-state').hide();	                $('.contacts__tel-code').hide();	                input.addClass('is-skype')	            } else {	                $('.skype-state').hide();	                $('.phone-state').show();	                $('.contacts__tel-code').show();	                input.removeClass('is-skype')	            }	        }	    });	    function setAddress(countryName) {	        ctrlSelf.find('.js-country-address[data-for-country="' + countryName + '"]').addClass('active')	            .siblings().removeClass('active');	    }	    function plus() {	        $('.js-code').on('focus', function () {	            $(this).val('+');	        });	        $('.js-code').on('blur', function () {	            if($(this).val().length <= 1) {	                $(this).val('');	            }	        });	        $('.js-code').on('keyup', function () {	            if(!$('.js-phone-input').hasClass('is-skype')) {	                var valFiltered = $(this).val().replace(/\+/g, '');	                var concatNum = '+' + valFiltered;	                $(this).val(concatNum)	            }	        })	    }	    plus();	    function setMapPosition(countryName) {	        ctrlSelf.find('.contacts__map-item[data-for-country="' + countryName + '"]').addClass('active')	            .siblings().removeClass('active');	    }	});	var inpCheckbox = $('.js-checked-key'),		showInpOne = $('.js-show-key'),		inpRadio = $('.js-checked-capital'),		showInpTwo = $('.js-show-capital');	function checkedInput(check, visible) {		check.click(function () {			if (check.is(':checked')) {				visible.addClass('js-inp-visible');			} else{				visible.removeClass('js-inp-visible');			}		})		$('.js-hidden').click(function() {			visible.removeClass('js-inp-visible');		})	}	checkedInput(inpCheckbox, showInpOne);	checkedInput(inpRadio, showInpTwo);
	$.widget("custom.combobox", {	    _create: function () {	        this.wrapper = $("<span>")	            .addClass("custom-combobox")	            .insertAfter(this.element);	        this.element.hide();	        this._createAutocomplete();	        this._createShowAllButton();	    },	    _createAutocomplete: function () {	        var selected = this.element.children(":selected"),	            value = selected.val() ? selected.text() : "";	        this.input = $("<input>")	            .appendTo(this.wrapper)	            .val(value)	            .attr("title", "")	            .addClass("custom-combobox-input ui-widget ui-widget-content ui-state-default ui-corner-left")	            .autocomplete({	                delay: 0,	                minLength: 0,	                source: $.proxy(this, "_source")	                // open: function() {	                //     $(".ui-menu").mCustomScrollbar();	                // },	                // close: function( event, ui ) {	                //     $(".ui-menu").mCustomScrollbar('destroy');	                // }	            })	            .tooltip({	                classes: {	                    "ui-tooltip": "ui-state-highlight"	                }	            });	        this._on(this.input, {	            autocompleteselect: function (event, ui) {	                ui.item.option.selected = true;	                this._trigger("select", event, {	                    item: ui.item.option	                });	            },	            autocompletechange: "_removeIfInvalid"	        })	    },	    _createShowAllButton: function () {	        var input = this.input,	            wasOpen = false;	        $("<a>")	            .attr("tabIndex", -1)	            .attr("title", "Show All Items")	            .appendTo(this.wrapper)	            .button({	                icons: {	                    primary: "ui-icon-triangle-1-s"	                },	                text: false	            })	            .removeClass("ui-corner-all")	            .addClass("custom-combobox-toggle ui-corner-right")	            .on("mousedown", function () {	                wasOpen = input.autocomplete("widget").is(":visible");	            })	            .on("click", function () {	                input.trigger("focus");	                // Close if already visible	                if (wasOpen) {	                    return;	                }	                // Pass empty string as value to search for, displaying all results	                input.autocomplete("search", "");	            });	    },	    _source: function (request, response) {	        var matcher = new RegExp($.ui.autocomplete.escapeRegex(request.term), "i");	        response(this.element.children("option").map(function () {	            var text = $(this).text();	            if (this.value && ( !request.term || matcher.test(text) ))	                return {	                    label: text,	                    value: text,	                    option: this	                };	        }));	    },	    _removeIfInvalid: function (event, ui) {	        // Selected an item, nothing to do	        if (ui.item) {	            return;	        }	        // Search for a match (case-insensitive)	        var value = this.input.val(),	            valueLowerCase = value.toLowerCase(),	            valid = false;	        this.element.children("option").each(function () {	            if ($(this).text().toLowerCase() === valueLowerCase) {	                this.selected = valid = true;	                return false;	            }	        });	        // Found a match, nothing to do	        if (valid) {	            return;	        }	        // Remove invalid value	        this.input	            .val("")	            .attr("title", value + " didn't match any item")	            .tooltip("open");	        this.element.val("");	        this._delay(function () {	            this.input.tooltip("close").attr("title", "");	        }, 2500);	        this.input.autocomplete("instance").term = "";	    },	    _destroy: function () {	        this.wrapper.remove();	        this.element.show();	    }	});	$("#combobox").combobox();	function name() {	    var input = $('.js-phone-input1');	    var telSwitch = $('.js-tel-switch1');	    telSwitch.on('click', function () {	        if (!$(this).hasClass('active')) {	            $(this).addClass('active').siblings().removeClass('active');	            if ($(this).hasClass('js-tel-skype')) {	                $('.skype-state').show();	                $('.phone-state').hide();	                $('.contacts__tel-code').hide();	                input.addClass('is-skype')	            } else {	                $('.skype-state').hide();	                $('.phone-state').show();	                $('.contacts__tel-code').show();	                input.removeClass('is-skype')	            }	        }	    });	    function plus() {	        $('.js-code').on('focus', function () {	            $(this).val('+');	        });	        $('.js-code').on('blur', function () {	            if ($(this).val().length <= 1) {	                $(this).val('');	            }	        });	        $('.js-code').on('keyup', function () {	            if (!$('.js-phone-input').hasClass('is-skype')) {	                var valFiltered = $(this).val().replace(/\+/g, '');	                var concatNum = '+' + valFiltered;	                $(this).val(concatNum)	            }	        })	    }	    plus();	}	name();
	;(function() {		var openForm = $('.js-open-menu');		var line = $('.js-line');		function openMenu() {			$('.js-menu').click(function(e) {				line.toggleClass('active');			    if (openForm.css('display') != 'inline-block') {			        openForm.show();			        var firstClick = true;			        $(document).bind('click.myEvent', function(e) {			            if (!firstClick && $(e.target).closest('.js-open-menu').length == 0) {			                openForm.hide();			                $(document).unbind('click.myEvent');			                line.removeClass('active');			            }			            firstClick = false;			        });			    }			    e.preventDefault();			});		}		openMenu();		function openDesktop() {			if ($(window).width() > 1006) {				openForm.removeAttr('style');				line.removeClass('active');			}		}		openDesktop();		$(window).on('resize', openDesktop);		function openLang() {			$(".js-vis-lang").click(function() {	            $(".js-list").toggle();	            $('.js-icon').toggleClass('active');	            $('.js-line-top').toggleClass('active');	        });	        $(".js-drop").click(function() {	            var text = $(this).html();	            $(".js-vis-lang").html(text);	            $(".js-list").hide();	            $('.js-icon').removeClass('active');	            $('.js-line-top').removeClass('active');	        });	        $(document).click(function (e) {			    var container = $(".js-vis-lang");			    if (container.has(e.target).length === 0){			        $('.js-icon').removeClass('active');			        $('.js-line-top').removeClass('active');			    }			});	        $(document).bind('click', function(e) {	            var $clicked = $(e.target);	            if (!$clicked.parents().hasClass("js-dropdown")) {	                $(".js-list").hide();	            }    		        });		}		openLang();	}());	;(function() {		function showDemo() {			$(window).on('load scroll',function(){ 	    	if ($(this).scrollTop() >= '800') {	    	    $('.js-demo-fixed').addClass("show");	    	}	    	else  {$('.js-demo-fixed').removeClass("show");}			});		}		showDemo();	}())	//---------------------------------------//	// Подключаем основные скрипты ( develop )	//---------------------------------------//	;(function($) { 		// autoHeight	  if ($('.js-height').length){	      $('.js-height').matchHeight({	          byRow: true,	          property: 'height',	          target: null,	          remove: false 	      });	  }	}($));});$(window).on('resize', function () {    autoFooter();});