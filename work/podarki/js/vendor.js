//---------------------------------------//// свг спрайт//---------------------------------------//;( function( window, document ){	'use strict';	var file     = './img/svg.html',		revision = 1;	if( !document.createElementNS || !document.createElementNS( 'http://www.w3.org/2000/svg', 'svg' ).createSVGRect )		return true;	var isLocalStorage = 'localStorage' in window && window[ 'localStorage' ] !== null,		request,		data,		insertIT = function()		{			document.getElementById('svg-sprite-container').insertAdjacentHTML( 'afterbegin', data );		},		insert = function()		{			if( document.body ) insertIT();			else document.addEventListener( 'DOMContentLoaded', insertIT );		};//	if( isLocalStorage && localStorage.getItem( 'inlineSVGrev' ) == revision )//	{//		data = localStorage.getItem( 'inlineSVGdata' );//		if( data )//		{//			insert();//			return true;//		}//	}	try	{		request = new XMLHttpRequest();		request.open( 'GET', file, true );		request.onload = function()		{			if( request.status >= 200 && request.status < 400 )			{				data = request.responseText;				insert();				if( isLocalStorage )				{					localStorage.setItem( 'inlineSVGdata',  data );					localStorage.setItem( 'inlineSVGrev',   revision );				}			}		}		request.send();	}	catch( e ){}}( window, document ) );//---------------------------------------//// Подключаем набор плагинов ( requare/plugins.js )//---------------------------------------////---------------------------------------//// Подключаем плагины bower//---------------------------------------///*!
 * jQuery JavaScript Library v3.3.1
 * https://jquery.com/
 *
 * Includes Sizzle.js
 * https://sizzlejs.com/
 *
 * Copyright JS Foundation and other contributors
 * Released under the MIT license
 * https://jquery.org/license
 *
 * Date: 2018-01-20T17:24Z
 */
( function( global, factory ) {
	"use strict";
	if ( typeof module === "object" && typeof module.exports === "object" ) {
		// For CommonJS and CommonJS-like environments where a proper `window`
		// is present, execute the factory and get jQuery.
		// For environments that do not have a `window` with a `document`
		// (such as Node.js), expose a factory as module.exports.
		// This accentuates the need for the creation of a real `window`.
		// e.g. var jQuery = require("jquery")(window);
		// See ticket #14549 for more info.
		module.exports = global.document ?
			factory( global, true ) :
			function( w ) {
				if ( !w.document ) {
					throw new Error( "jQuery requires a window with a document" );
				}
				return factory( w );
			};
	} else {
		factory( global );
	}
// Pass this if window is not defined yet
} )( typeof window !== "undefined" ? window : this, function( window, noGlobal ) {
// Edge <= 12 - 13+, Firefox <=18 - 45+, IE 10 - 11, Safari 5.1 - 9+, iOS 6 - 9.1
// throw exceptions when non-strict code (e.g., ASP.NET 4.5) accesses strict mode
// arguments.callee.caller (trac-13335). But as of jQuery 3.0 (2016), strict mode should be common
// enough that all such attempts are guarded in a try block.
"use strict";
var arr = [];
var document = window.document;
var getProto = Object.getPrototypeOf;
var slice = arr.slice;
var concat = arr.concat;
var push = arr.push;
var indexOf = arr.indexOf;
var class2type = {};
var toString = class2type.toString;
var hasOwn = class2type.hasOwnProperty;
var fnToString = hasOwn.toString;
var ObjectFunctionString = fnToString.call( Object );
var support = {};
var isFunction = function isFunction( obj ) {
      // Support: Chrome <=57, Firefox <=52
      // In some browsers, typeof returns "function" for HTML <object> elements
      // (i.e., `typeof document.createElement( "object" ) === "function"`).
      // We don't want to classify *any* DOM node as a function.
      return typeof obj === "function" && typeof obj.nodeType !== "number";
  };
var isWindow = function isWindow( obj ) {
		return obj != null && obj === obj.window;
	};
	var preservedScriptAttributes = {
		type: true,
		src: true,
		noModule: true
	};
	function DOMEval( code, doc, node ) {
		doc = doc || document;
		var i,
			script = doc.createElement( "script" );
		script.text = code;
		if ( node ) {
			for ( i in preservedScriptAttributes ) {
				if ( node[ i ] ) {
					script[ i ] = node[ i ];
				}
			}
		}
		doc.head.appendChild( script ).parentNode.removeChild( script );
	}
function toType( obj ) {
	if ( obj == null ) {
		return obj + "";
	}
	// Support: Android <=2.3 only (functionish RegExp)
	return typeof obj === "object" || typeof obj === "function" ?
		class2type[ toString.call( obj ) ] || "object" :
		typeof obj;
}
/* global Symbol */
// Defining this global in .eslintrc.json would create a danger of using the global
// unguarded in another place, it seems safer to define global only for this module
var
	version = "3.3.1",
	// Define a local copy of jQuery
	jQuery = function( selector, context ) {
		// The jQuery object is actually just the init constructor 'enhanced'
		// Need init if jQuery is called (just allow error to be thrown if not included)
		return new jQuery.fn.init( selector, context );
	},
	// Support: Android <=4.0 only
	// Make sure we trim BOM and NBSP
	rtrim = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g;
jQuery.fn = jQuery.prototype = {
	// The current version of jQuery being used
	jquery: version,
	constructor: jQuery,
	// The default length of a jQuery object is 0
	length: 0,
	toArray: function() {
		return slice.call( this );
	},
	// Get the Nth element in the matched element set OR
	// Get the whole matched element set as a clean array
	get: function( num ) {
		// Return all the elements in a clean array
		if ( num == null ) {
			return slice.call( this );
		}
		// Return just the one element from the set
		return num < 0 ? this[ num + this.length ] : this[ num ];
	},
	// Take an array of elements and push it onto the stack
	// (returning the new matched element set)
	pushStack: function( elems ) {
		// Build a new jQuery matched element set
		var ret = jQuery.merge( this.constructor(), elems );
		// Add the old object onto the stack (as a reference)
		ret.prevObject = this;
		// Return the newly-formed element set
		return ret;
	},
	// Execute a callback for every element in the matched set.
	each: function( callback ) {
		return jQuery.each( this, callback );
	},
	map: function( callback ) {
		return this.pushStack( jQuery.map( this, function( elem, i ) {
			return callback.call( elem, i, elem );
		} ) );
	},
	slice: function() {
		return this.pushStack( slice.apply( this, arguments ) );
	},
	first: function() {
		return this.eq( 0 );
	},
	last: function() {
		return this.eq( -1 );
	},
	eq: function( i ) {
		var len = this.length,
			j = +i + ( i < 0 ? len : 0 );
		return this.pushStack( j >= 0 && j < len ? [ this[ j ] ] : [] );
	},
	end: function() {
		return this.prevObject || this.constructor();
	},
	// For internal use only.
	// Behaves like an Array's method, not like a jQuery method.
	push: push,
	sort: arr.sort,
	splice: arr.splice
};
jQuery.extend = jQuery.fn.extend = function() {
	var options, name, src, copy, copyIsArray, clone,
		target = arguments[ 0 ] || {},
		i = 1,
		length = arguments.length,
		deep = false;
	// Handle a deep copy situation
	if ( typeof target === "boolean" ) {
		deep = target;
		// Skip the boolean and the target
		target = arguments[ i ] || {};
		i++;
	}
	// Handle case when target is a string or something (possible in deep copy)
	if ( typeof target !== "object" && !isFunction( target ) ) {
		target = {};
	}
	// Extend jQuery itself if only one argument is passed
	if ( i === length ) {
		target = this;
		i--;
	}
	for ( ; i < length; i++ ) {
		// Only deal with non-null/undefined values
		if ( ( options = arguments[ i ] ) != null ) {
			// Extend the base object
			for ( name in options ) {
				src = target[ name ];
				copy = options[ name ];
				// Prevent never-ending loop
				if ( target === copy ) {
					continue;
				}
				// Recurse if we're merging plain objects or arrays
				if ( deep && copy && ( jQuery.isPlainObject( copy ) ||
					( copyIsArray = Array.isArray( copy ) ) ) ) {
					if ( copyIsArray ) {
						copyIsArray = false;
						clone = src && Array.isArray( src ) ? src : [];
					} else {
						clone = src && jQuery.isPlainObject( src ) ? src : {};
					}
					// Never move original objects, clone them
					target[ name ] = jQuery.extend( deep, clone, copy );
				// Don't bring in undefined values
				} else if ( copy !== undefined ) {
					target[ name ] = copy;
				}
			}
		}
	}
	// Return the modified object
	return target;
};
jQuery.extend( {
	// Unique for each copy of jQuery on the page
	expando: "jQuery" + ( version + Math.random() ).replace( /\D/g, "" ),
	// Assume jQuery is ready without the ready module
	isReady: true,
	error: function( msg ) {
		throw new Error( msg );
	},
	noop: function() {},
	isPlainObject: function( obj ) {
		var proto, Ctor;
		// Detect obvious negatives
		// Use toString instead of jQuery.type to catch host objects
		if ( !obj || toString.call( obj ) !== "[object Object]" ) {
			return false;
		}
		proto = getProto( obj );
		// Objects with no prototype (e.g., `Object.create( null )`) are plain
		if ( !proto ) {
			return true;
		}
		// Objects with prototype are plain iff they were constructed by a global Object function
		Ctor = hasOwn.call( proto, "constructor" ) && proto.constructor;
		return typeof Ctor === "function" && fnToString.call( Ctor ) === ObjectFunctionString;
	},
	isEmptyObject: function( obj ) {
		/* eslint-disable no-unused-vars */
		// See https://github.com/eslint/eslint/issues/6125
		var name;
		for ( name in obj ) {
			return false;
		}
		return true;
	},
	// Evaluates a script in a global context
	globalEval: function( code ) {
		DOMEval( code );
	},
	each: function( obj, callback ) {
		var length, i = 0;
		if ( isArrayLike( obj ) ) {
			length = obj.length;
			for ( ; i < length; i++ ) {
				if ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {
					break;
				}
			}
		} else {
			for ( i in obj ) {
				if ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {
					break;
				}
			}
		}
		return obj;
	},
	// Support: Android <=4.0 only
	trim: function( text ) {
		return text == null ?
			"" :
			( text + "" ).replace( rtrim, "" );
	},
	// results is for internal usage only
	makeArray: function( arr, results ) {
		var ret = results || [];
		if ( arr != null ) {
			if ( isArrayLike( Object( arr ) ) ) {
				jQuery.merge( ret,
					typeof arr === "string" ?
					[ arr ] : arr
				);
			} else {
				push.call( ret, arr );
			}
		}
		return ret;
	},
	inArray: function( elem, arr, i ) {
		return arr == null ? -1 : indexOf.call( arr, elem, i );
	},
	// Support: Android <=4.0 only, PhantomJS 1 only
	// push.apply(_, arraylike) throws on ancient WebKit
	merge: function( first, second ) {
		var len = +second.length,
			j = 0,
			i = first.length;
		for ( ; j < len; j++ ) {
			first[ i++ ] = second[ j ];
		}
		first.length = i;
		return first;
	},
	grep: function( elems, callback, invert ) {
		var callbackInverse,
			matches = [],
			i = 0,
			length = elems.length,
			callbackExpect = !invert;
		// Go through the array, only saving the items
		// that pass the validator function
		for ( ; i < length; i++ ) {
			callbackInverse = !callback( elems[ i ], i );
			if ( callbackInverse !== callbackExpect ) {
				matches.push( elems[ i ] );
			}
		}
		return matches;
	},
	// arg is for internal usage only
	map: function( elems, callback, arg ) {
		var length, value,
			i = 0,
			ret = [];
		// Go through the array, translating each of the items to their new values
		if ( isArrayLike( elems ) ) {
			length = elems.length;
			for ( ; i < length; i++ ) {
				value = callback( elems[ i ], i, arg );
				if ( value != null ) {
					ret.push( value );
				}
			}
		// Go through every key on the object,
		} else {
			for ( i in elems ) {
				value = callback( elems[ i ], i, arg );
				if ( value != null ) {
					ret.push( value );
				}
			}
		}
		// Flatten any nested arrays
		return concat.apply( [], ret );
	},
	// A global GUID counter for objects
	guid: 1,
	// jQuery.support is not used in Core but other projects attach their
	// properties to it so it needs to exist.
	support: support
} );
if ( typeof Symbol === "function" ) {
	jQuery.fn[ Symbol.iterator ] = arr[ Symbol.iterator ];
}
// Populate the class2type map
jQuery.each( "Boolean Number String Function Array Date RegExp Object Error Symbol".split( " " ),
function( i, name ) {
	class2type[ "[object " + name + "]" ] = name.toLowerCase();
} );
function isArrayLike( obj ) {
	// Support: real iOS 8.2 only (not reproducible in simulator)
	// `in` check used to prevent JIT error (gh-2145)
	// hasOwn isn't used here due to false negatives
	// regarding Nodelist length in IE
	var length = !!obj && "length" in obj && obj.length,
		type = toType( obj );
	if ( isFunction( obj ) || isWindow( obj ) ) {
		return false;
	}
	return type === "array" || length === 0 ||
		typeof length === "number" && length > 0 && ( length - 1 ) in obj;
}
var Sizzle =
/*!
 * Sizzle CSS Selector Engine v2.3.3
 * https://sizzlejs.com/
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license
 * http://jquery.org/license
 *
 * Date: 2016-08-08
 */
(function( window ) {
var i,
	support,
	Expr,
	getText,
	isXML,
	tokenize,
	compile,
	select,
	outermostContext,
	sortInput,
	hasDuplicate,
	// Local document vars
	setDocument,
	document,
	docElem,
	documentIsHTML,
	rbuggyQSA,
	rbuggyMatches,
	matches,
	contains,
	// Instance-specific data
	expando = "sizzle" + 1 * new Date(),
	preferredDoc = window.document,
	dirruns = 0,
	done = 0,
	classCache = createCache(),
	tokenCache = createCache(),
	compilerCache = createCache(),
	sortOrder = function( a, b ) {
		if ( a === b ) {
			hasDuplicate = true;
		}
		return 0;
	},
	// Instance methods
	hasOwn = ({}).hasOwnProperty,
	arr = [],
	pop = arr.pop,
	push_native = arr.push,
	push = arr.push,
	slice = arr.slice,
	// Use a stripped-down indexOf as it's faster than native
	// https://jsperf.com/thor-indexof-vs-for/5
	indexOf = function( list, elem ) {
		var i = 0,
			len = list.length;
		for ( ; i < len; i++ ) {
			if ( list[i] === elem ) {
				return i;
			}
		}
		return -1;
	},
	booleans = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",
	// Regular expressions
	// http://www.w3.org/TR/css3-selectors/#whitespace
	whitespace = "[\\x20\\t\\r\\n\\f]",
	// http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier
	identifier = "(?:\\\\.|[\\w-]|[^\0-\\xa0])+",
	// Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors
	attributes = "\\[" + whitespace + "*(" + identifier + ")(?:" + whitespace +
		// Operator (capture 2)
		"*([*^$|!~]?=)" + whitespace +
		// "Attribute values must be CSS identifiers [capture 5] or strings [capture 3 or capture 4]"
		"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" + identifier + "))|)" + whitespace +
		"*\\]",
	pseudos = ":(" + identifier + ")(?:\\((" +
		// To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:
		// 1. quoted (capture 3; capture 4 or capture 5)
		"('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|" +
		// 2. simple (capture 6)
		"((?:\\\\.|[^\\\\()[\\]]|" + attributes + ")*)|" +
		// 3. anything else (capture 2)
		".*" +
		")\\)|)",
	// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter
	rwhitespace = new RegExp( whitespace + "+", "g" ),
	rtrim = new RegExp( "^" + whitespace + "+|((?:^|[^\\\\])(?:\\\\.)*)" + whitespace + "+$", "g" ),
	rcomma = new RegExp( "^" + whitespace + "*," + whitespace + "*" ),
	rcombinators = new RegExp( "^" + whitespace + "*([>+~]|" + whitespace + ")" + whitespace + "*" ),
	rattributeQuotes = new RegExp( "=" + whitespace + "*([^\\]'\"]*?)" + whitespace + "*\\]", "g" ),
	rpseudo = new RegExp( pseudos ),
	ridentifier = new RegExp( "^" + identifier + "$" ),
	matchExpr = {
		"ID": new RegExp( "^#(" + identifier + ")" ),
		"CLASS": new RegExp( "^\\.(" + identifier + ")" ),
		"TAG": new RegExp( "^(" + identifier + "|[*])" ),
		"ATTR": new RegExp( "^" + attributes ),
		"PSEUDO": new RegExp( "^" + pseudos ),
		"CHILD": new RegExp( "^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + whitespace +
			"*(even|odd|(([+-]|)(\\d*)n|)" + whitespace + "*(?:([+-]|)" + whitespace +
			"*(\\d+)|))" + whitespace + "*\\)|)", "i" ),
		"bool": new RegExp( "^(?:" + booleans + ")$", "i" ),
		// For use in libraries implementing .is()
		// We use this for POS matching in `select`
		"needsContext": new RegExp( "^" + whitespace + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" +
			whitespace + "*((?:-\\d)?\\d*)" + whitespace + "*\\)|)(?=[^-]|$)", "i" )
	},
	rinputs = /^(?:input|select|textarea|button)$/i,
	rheader = /^h\d$/i,
	rnative = /^[^{]+\{\s*\[native \w/,
	// Easily-parseable/retrievable ID or TAG or CLASS selectors
	rquickExpr = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,
	rsibling = /[+~]/,
	// CSS escapes
	// http://www.w3.org/TR/CSS21/syndata.html#escaped-characters
	runescape = new RegExp( "\\\\([\\da-f]{1,6}" + whitespace + "?|(" + whitespace + ")|.)", "ig" ),
	funescape = function( _, escaped, escapedWhitespace ) {
		var high = "0x" + escaped - 0x10000;
		// NaN means non-codepoint
		// Support: Firefox<24
		// Workaround erroneous numeric interpretation of +"0x"
		return high !== high || escapedWhitespace ?
			escaped :
			high < 0 ?
				// BMP codepoint
				String.fromCharCode( high + 0x10000 ) :
				// Supplemental Plane codepoint (surrogate pair)
				String.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );
	},
	// CSS string/identifier serialization
	// https://drafts.csswg.org/cssom/#common-serializing-idioms
	rcssescape = /([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,
	fcssescape = function( ch, asCodePoint ) {
		if ( asCodePoint ) {
			// U+0000 NULL becomes U+FFFD REPLACEMENT CHARACTER
			if ( ch === "\0" ) {
				return "\uFFFD";
			}
			// Control characters and (dependent upon position) numbers get escaped as code points
			return ch.slice( 0, -1 ) + "\\" + ch.charCodeAt( ch.length - 1 ).toString( 16 ) + " ";
		}
		// Other potentially-special ASCII characters get backslash-escaped
		return "\\" + ch;
	},
	// Used for iframes
	// See setDocument()
	// Removing the function wrapper causes a "Permission Denied"
	// error in IE
	unloadHandler = function() {
		setDocument();
	},
	disabledAncestor = addCombinator(
		function( elem ) {
			return elem.disabled === true && ("form" in elem || "label" in elem);
		},
		{ dir: "parentNode", next: "legend" }
	);
// Optimize for push.apply( _, NodeList )
try {
	push.apply(
		(arr = slice.call( preferredDoc.childNodes )),
		preferredDoc.childNodes
	);
	// Support: Android<4.0
	// Detect silently failing push.apply
	arr[ preferredDoc.childNodes.length ].nodeType;
} catch ( e ) {
	push = { apply: arr.length ?
		// Leverage slice if possible
		function( target, els ) {
			push_native.apply( target, slice.call(els) );
		} :
		// Support: IE<9
		// Otherwise append directly
		function( target, els ) {
			var j = target.length,
				i = 0;
			// Can't trust NodeList.length
			while ( (target[j++] = els[i++]) ) {}
			target.length = j - 1;
		}
	};
}
function Sizzle( selector, context, results, seed ) {
	var m, i, elem, nid, match, groups, newSelector,
		newContext = context && context.ownerDocument,
		// nodeType defaults to 9, since context defaults to document
		nodeType = context ? context.nodeType : 9;
	results = results || [];
	// Return early from calls with invalid selector or context
	if ( typeof selector !== "string" || !selector ||
		nodeType !== 1 && nodeType !== 9 && nodeType !== 11 ) {
		return results;
	}
	// Try to shortcut find operations (as opposed to filters) in HTML documents
	if ( !seed ) {
		if ( ( context ? context.ownerDocument || context : preferredDoc ) !== document ) {
			setDocument( context );
		}
		context = context || document;
		if ( documentIsHTML ) {
			// If the selector is sufficiently simple, try using a "get*By*" DOM method
			// (excepting DocumentFragment context, where the methods don't exist)
			if ( nodeType !== 11 && (match = rquickExpr.exec( selector )) ) {
				// ID selector
				if ( (m = match[1]) ) {
					// Document context
					if ( nodeType === 9 ) {
						if ( (elem = context.getElementById( m )) ) {
							// Support: IE, Opera, Webkit
							// TODO: identify versions
							// getElementById can match elements by name instead of ID
							if ( elem.id === m ) {
								results.push( elem );
								return results;
							}
						} else {
							return results;
						}
					// Element context
					} else {
						// Support: IE, Opera, Webkit
						// TODO: identify versions
						// getElementById can match elements by name instead of ID
						if ( newContext && (elem = newContext.getElementById( m )) &&
							contains( context, elem ) &&
							elem.id === m ) {
							results.push( elem );
							return results;
						}
					}
				// Type selector
				} else if ( match[2] ) {
					push.apply( results, context.getElementsByTagName( selector ) );
					return results;
				// Class selector
				} else if ( (m = match[3]) && support.getElementsByClassName &&
					context.getElementsByClassName ) {
					push.apply( results, context.getElementsByClassName( m ) );
					return results;
				}
			}
			// Take advantage of querySelectorAll
			if ( support.qsa &&
				!compilerCache[ selector + " " ] &&
				(!rbuggyQSA || !rbuggyQSA.test( selector )) ) {
				if ( nodeType !== 1 ) {
					newContext = context;
					newSelector = selector;
				// qSA looks outside Element context, which is not what we want
				// Thanks to Andrew Dupont for this workaround technique
				// Support: IE <=8
				// Exclude object elements
				} else if ( context.nodeName.toLowerCase() !== "object" ) {
					// Capture the context ID, setting it first if necessary
					if ( (nid = context.getAttribute( "id" )) ) {
						nid = nid.replace( rcssescape, fcssescape );
					} else {
						context.setAttribute( "id", (nid = expando) );
					}
					// Prefix every selector in the list
					groups = tokenize( selector );
					i = groups.length;
					while ( i-- ) {
						groups[i] = "#" + nid + " " + toSelector( groups[i] );
					}
					newSelector = groups.join( "," );
					// Expand context for sibling selectors
					newContext = rsibling.test( selector ) && testContext( context.parentNode ) ||
						context;
				}
				if ( newSelector ) {
					try {
						push.apply( results,
							newContext.querySelectorAll( newSelector )
						);
						return results;
					} catch ( qsaError ) {
					} finally {
						if ( nid === expando ) {
							context.removeAttribute( "id" );
						}
					}
				}
			}
		}
	}
	// All others
	return select( selector.replace( rtrim, "$1" ), context, results, seed );
}
/**
 * Create key-value caches of limited size
 * @returns {function(string, object)} Returns the Object data after storing it on itself with
 *	property name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)
 *	deleting the oldest entry
 */
function createCache() {
	var keys = [];
	function cache( key, value ) {
		// Use (key + " ") to avoid collision with native prototype properties (see Issue #157)
		if ( keys.push( key + " " ) > Expr.cacheLength ) {
			// Only keep the most recent entries
			delete cache[ keys.shift() ];
		}
		return (cache[ key + " " ] = value);
	}
	return cache;
}
/**
 * Mark a function for special use by Sizzle
 * @param {Function} fn The function to mark
 */
function markFunction( fn ) {
	fn[ expando ] = true;
	return fn;
}
/**
 * Support testing using an element
 * @param {Function} fn Passed the created element and returns a boolean result
 */
function assert( fn ) {
	var el = document.createElement("fieldset");
	try {
		return !!fn( el );
	} catch (e) {
		return false;
	} finally {
		// Remove from its parent by default
		if ( el.parentNode ) {
			el.parentNode.removeChild( el );
		}
		// release memory in IE
		el = null;
	}
}
/**
 * Adds the same handler for all of the specified attrs
 * @param {String} attrs Pipe-separated list of attributes
 * @param {Function} handler The method that will be applied
 */
function addHandle( attrs, handler ) {
	var arr = attrs.split("|"),
		i = arr.length;
	while ( i-- ) {
		Expr.attrHandle[ arr[i] ] = handler;
	}
}
/**
 * Checks document order of two siblings
 * @param {Element} a
 * @param {Element} b
 * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b
 */
function siblingCheck( a, b ) {
	var cur = b && a,
		diff = cur && a.nodeType === 1 && b.nodeType === 1 &&
			a.sourceIndex - b.sourceIndex;
	// Use IE sourceIndex if available on both nodes
	if ( diff ) {
		return diff;
	}
	// Check if b follows a
	if ( cur ) {
		while ( (cur = cur.nextSibling) ) {
			if ( cur === b ) {
				return -1;
			}
		}
	}
	return a ? 1 : -1;
}
/**
 * Returns a function to use in pseudos for input types
 * @param {String} type
 */
function createInputPseudo( type ) {
	return function( elem ) {
		var name = elem.nodeName.toLowerCase();
		return name === "input" && elem.type === type;
	};
}
/**
 * Returns a function to use in pseudos for buttons
 * @param {String} type
 */
function createButtonPseudo( type ) {
	return function( elem ) {
		var name = elem.nodeName.toLowerCase();
		return (name === "input" || name === "button") && elem.type === type;
	};
}
/**
 * Returns a function to use in pseudos for :enabled/:disabled
 * @param {Boolean} disabled true for :disabled; false for :enabled
 */
function createDisabledPseudo( disabled ) {
	// Known :disabled false positives: fieldset[disabled] > legend:nth-of-type(n+2) :can-disable
	return function( elem ) {
		// Only certain elements can match :enabled or :disabled
		// https://html.spec.whatwg.org/multipage/scripting.html#selector-enabled
		// https://html.spec.whatwg.org/multipage/scripting.html#selector-disabled
		if ( "form" in elem ) {
			// Check for inherited disabledness on relevant non-disabled elements:
			// * listed form-associated elements in a disabled fieldset
			//   https://html.spec.whatwg.org/multipage/forms.html#category-listed
			//   https://html.spec.whatwg.org/multipage/forms.html#concept-fe-disabled
			// * option elements in a disabled optgroup
			//   https://html.spec.whatwg.org/multipage/forms.html#concept-option-disabled
			// All such elements have a "form" property.
			if ( elem.parentNode && elem.disabled === false ) {
				// Option elements defer to a parent optgroup if present
				if ( "label" in elem ) {
					if ( "label" in elem.parentNode ) {
						return elem.parentNode.disabled === disabled;
					} else {
						return elem.disabled === disabled;
					}
				}
				// Support: IE 6 - 11
				// Use the isDisabled shortcut property to check for disabled fieldset ancestors
				return elem.isDisabled === disabled ||
					// Where there is no isDisabled, check manually
					/* jshint -W018 */
					elem.isDisabled !== !disabled &&
						disabledAncestor( elem ) === disabled;
			}
			return elem.disabled === disabled;
		// Try to winnow out elements that can't be disabled before trusting the disabled property.
		// Some victims get caught in our net (label, legend, menu, track), but it shouldn't
		// even exist on them, let alone have a boolean value.
		} else if ( "label" in elem ) {
			return elem.disabled === disabled;
		}
		// Remaining elements are neither :enabled nor :disabled
		return false;
	};
}
/**
 * Returns a function to use in pseudos for positionals
 * @param {Function} fn
 */
function createPositionalPseudo( fn ) {
	return markFunction(function( argument ) {
		argument = +argument;
		return markFunction(function( seed, matches ) {
			var j,
				matchIndexes = fn( [], seed.length, argument ),
				i = matchIndexes.length;
			// Match elements found at the specified indexes
			while ( i-- ) {
				if ( seed[ (j = matchIndexes[i]) ] ) {
					seed[j] = !(matches[j] = seed[j]);
				}
			}
		});
	});
}
/**
 * Checks a node for validity as a Sizzle context
 * @param {Element|Object=} context
 * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value
 */
function testContext( context ) {
	return context && typeof context.getElementsByTagName !== "undefined" && context;
}
// Expose support vars for convenience
support = Sizzle.support = {};
/**
 * Detects XML nodes
 * @param {Element|Object} elem An element or a document
 * @returns {Boolean} True iff elem is a non-HTML XML node
 */
isXML = Sizzle.isXML = function( elem ) {
	// documentElement is verified for cases where it doesn't yet exist
	// (such as loading iframes in IE - #4833)
	var documentElement = elem && (elem.ownerDocument || elem).documentElement;
	return documentElement ? documentElement.nodeName !== "HTML" : false;
};
/**
 * Sets document-related variables once based on the current document
 * @param {Element|Object} [doc] An element or document object to use to set the document
 * @returns {Object} Returns the current document
 */
setDocument = Sizzle.setDocument = function( node ) {
	var hasCompare, subWindow,
		doc = node ? node.ownerDocument || node : preferredDoc;
	// Return early if doc is invalid or already selected
	if ( doc === document || doc.nodeType !== 9 || !doc.documentElement ) {
		return document;
	}
	// Update global variables
	document = doc;
	docElem = document.documentElement;
	documentIsHTML = !isXML( document );
	// Support: IE 9-11, Edge
	// Accessing iframe documents after unload throws "permission denied" errors (jQuery #13936)
	if ( preferredDoc !== document &&
		(subWindow = document.defaultView) && subWindow.top !== subWindow ) {
		// Support: IE 11, Edge
		if ( subWindow.addEventListener ) {
			subWindow.addEventListener( "unload", unloadHandler, false );
		// Support: IE 9 - 10 only
		} else if ( subWindow.attachEvent ) {
			subWindow.attachEvent( "onunload", unloadHandler );
		}
	}
	/* Attributes
	---------------------------------------------------------------------- */
	// Support: IE<8
	// Verify that getAttribute really returns attributes and not properties
	// (excepting IE8 booleans)
	support.attributes = assert(function( el ) {
		el.className = "i";
		return !el.getAttribute("className");
	});
	/* getElement(s)By*
	---------------------------------------------------------------------- */
	// Check if getElementsByTagName("*") returns only elements
	support.getElementsByTagName = assert(function( el ) {
		el.appendChild( document.createComment("") );
		return !el.getElementsByTagName("*").length;
	});
	// Support: IE<9
	support.getElementsByClassName = rnative.test( document.getElementsByClassName );
	// Support: IE<10
	// Check if getElementById returns elements by name
	// The broken getElementById methods don't pick up programmatically-set names,
	// so use a roundabout getElementsByName test
	support.getById = assert(function( el ) {
		docElem.appendChild( el ).id = expando;
		return !document.getElementsByName || !document.getElementsByName( expando ).length;
	});
	// ID filter and find
	if ( support.getById ) {
		Expr.filter["ID"] = function( id ) {
			var attrId = id.replace( runescape, funescape );
			return function( elem ) {
				return elem.getAttribute("id") === attrId;
			};
		};
		Expr.find["ID"] = function( id, context ) {
			if ( typeof context.getElementById !== "undefined" && documentIsHTML ) {
				var elem = context.getElementById( id );
				return elem ? [ elem ] : [];
			}
		};
	} else {
		Expr.filter["ID"] =  function( id ) {
			var attrId = id.replace( runescape, funescape );
			return function( elem ) {
				var node = typeof elem.getAttributeNode !== "undefined" &&
					elem.getAttributeNode("id");
				return node && node.value === attrId;
			};
		};
		// Support: IE 6 - 7 only
		// getElementById is not reliable as a find shortcut
		Expr.find["ID"] = function( id, context ) {
			if ( typeof context.getElementById !== "undefined" && documentIsHTML ) {
				var node, i, elems,
					elem = context.getElementById( id );
				if ( elem ) {
					// Verify the id attribute
					node = elem.getAttributeNode("id");
					if ( node && node.value === id ) {
						return [ elem ];
					}
					// Fall back on getElementsByName
					elems = context.getElementsByName( id );
					i = 0;
					while ( (elem = elems[i++]) ) {
						node = elem.getAttributeNode("id");
						if ( node && node.value === id ) {
							return [ elem ];
						}
					}
				}
				return [];
			}
		};
	}
	// Tag
	Expr.find["TAG"] = support.getElementsByTagName ?
		function( tag, context ) {
			if ( typeof context.getElementsByTagName !== "undefined" ) {
				return context.getElementsByTagName( tag );
			// DocumentFragment nodes don't have gEBTN
			} else if ( support.qsa ) {
				return context.querySelectorAll( tag );
			}
		} :
		function( tag, context ) {
			var elem,
				tmp = [],
				i = 0,
				// By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too
				results = context.getElementsByTagName( tag );
			// Filter out possible comments
			if ( tag === "*" ) {
				while ( (elem = results[i++]) ) {
					if ( elem.nodeType === 1 ) {
						tmp.push( elem );
					}
				}
				return tmp;
			}
			return results;
		};
	// Class
	Expr.find["CLASS"] = support.getElementsByClassName && function( className, context ) {
		if ( typeof context.getElementsByClassName !== "undefined" && documentIsHTML ) {
			return context.getElementsByClassName( className );
		}
	};
	/* QSA/matchesSelector
	---------------------------------------------------------------------- */
	// QSA and matchesSelector support
	// matchesSelector(:active) reports false when true (IE9/Opera 11.5)
	rbuggyMatches = [];
	// qSa(:focus) reports false when true (Chrome 21)
	// We allow this because of a bug in IE8/9 that throws an error
	// whenever `document.activeElement` is accessed on an iframe
	// So, we allow :focus to pass through QSA all the time to avoid the IE error
	// See https://bugs.jquery.com/ticket/13378
	rbuggyQSA = [];
	if ( (support.qsa = rnative.test( document.querySelectorAll )) ) {
		// Build QSA regex
		// Regex strategy adopted from Diego Perini
		assert(function( el ) {
			// Select is set to empty string on purpose
			// This is to test IE's treatment of not explicitly
			// setting a boolean content attribute,
			// since its presence should be enough
			// https://bugs.jquery.com/ticket/12359
			docElem.appendChild( el ).innerHTML = "<a id='" + expando + "'></a>" +
				"<select id='" + expando + "-\r\\' msallowcapture=''>" +
				"<option selected=''></option></select>";
			// Support: IE8, Opera 11-12.16
			// Nothing should be selected when empty strings follow ^= or $= or *=
			// The test attribute must be unknown in Opera but "safe" for WinRT
			// https://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section
			if ( el.querySelectorAll("[msallowcapture^='']").length ) {
				rbuggyQSA.push( "[*^$]=" + whitespace + "*(?:''|\"\")" );
			}
			// Support: IE8
			// Boolean attributes and "value" are not treated correctly
			if ( !el.querySelectorAll("[selected]").length ) {
				rbuggyQSA.push( "\\[" + whitespace + "*(?:value|" + booleans + ")" );
			}
			// Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+
			if ( !el.querySelectorAll( "[id~=" + expando + "-]" ).length ) {
				rbuggyQSA.push("~=");
			}
			// Webkit/Opera - :checked should return selected option elements
			// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
			// IE8 throws error here and will not see later tests
			if ( !el.querySelectorAll(":checked").length ) {
				rbuggyQSA.push(":checked");
			}
			// Support: Safari 8+, iOS 8+
			// https://bugs.webkit.org/show_bug.cgi?id=136851
			// In-page `selector#id sibling-combinator selector` fails
			if ( !el.querySelectorAll( "a#" + expando + "+*" ).length ) {
				rbuggyQSA.push(".#.+[+~]");
			}
		});
		assert(function( el ) {
			el.innerHTML = "<a href='' disabled='disabled'></a>" +
				"<select disabled='disabled'><option/></select>";
			// Support: Windows 8 Native Apps
			// The type and name attributes are restricted during .innerHTML assignment
			var input = document.createElement("input");
			input.setAttribute( "type", "hidden" );
			el.appendChild( input ).setAttribute( "name", "D" );
			// Support: IE8
			// Enforce case-sensitivity of name attribute
			if ( el.querySelectorAll("[name=d]").length ) {
				rbuggyQSA.push( "name" + whitespace + "*[*^$|!~]?=" );
			}
			// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)
			// IE8 throws error here and will not see later tests
			if ( el.querySelectorAll(":enabled").length !== 2 ) {
				rbuggyQSA.push( ":enabled", ":disabled" );
			}
			// Support: IE9-11+
			// IE's :disabled selector does not pick up the children of disabled fieldsets
			docElem.appendChild( el ).disabled = true;
			if ( el.querySelectorAll(":disabled").length !== 2 ) {
				rbuggyQSA.push( ":enabled", ":disabled" );
			}
			// Opera 10-11 does not throw on post-comma invalid pseudos
			el.querySelectorAll("*,:x");
			rbuggyQSA.push(",.*:");
		});
	}
	if ( (support.matchesSelector = rnative.test( (matches = docElem.matches ||
		docElem.webkitMatchesSelector ||
		docElem.mozMatchesSelector ||
		docElem.oMatchesSelector ||
		docElem.msMatchesSelector) )) ) {
		assert(function( el ) {
			// Check to see if it's possible to do matchesSelector
			// on a disconnected node (IE 9)
			support.disconnectedMatch = matches.call( el, "*" );
			// This should fail with an exception
			// Gecko does not error, returns false instead
			matches.call( el, "[s!='']:x" );
			rbuggyMatches.push( "!=", pseudos );
		});
	}
	rbuggyQSA = rbuggyQSA.length && new RegExp( rbuggyQSA.join("|") );
	rbuggyMatches = rbuggyMatches.length && new RegExp( rbuggyMatches.join("|") );
	/* Contains
	---------------------------------------------------------------------- */
	hasCompare = rnative.test( docElem.compareDocumentPosition );
	// Element contains another
	// Purposefully self-exclusive
	// As in, an element does not contain itself
	contains = hasCompare || rnative.test( docElem.contains ) ?
		function( a, b ) {
			var adown = a.nodeType === 9 ? a.documentElement : a,
				bup = b && b.parentNode;
			return a === bup || !!( bup && bup.nodeType === 1 && (
				adown.contains ?
					adown.contains( bup ) :
					a.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16
			));
		} :
		function( a, b ) {
			if ( b ) {
				while ( (b = b.parentNode) ) {
					if ( b === a ) {
						return true;
					}
				}
			}
			return false;
		};
	/* Sorting
	---------------------------------------------------------------------- */
	// Document order sorting
	sortOrder = hasCompare ?
	function( a, b ) {
		// Flag for duplicate removal
		if ( a === b ) {
			hasDuplicate = true;
			return 0;
		}
		// Sort on method existence if only one input has compareDocumentPosition
		var compare = !a.compareDocumentPosition - !b.compareDocumentPosition;
		if ( compare ) {
			return compare;
		}
		// Calculate position if both inputs belong to the same document
		compare = ( a.ownerDocument || a ) === ( b.ownerDocument || b ) ?
			a.compareDocumentPosition( b ) :
			// Otherwise we know they are disconnected
			1;
		// Disconnected nodes
		if ( compare & 1 ||
			(!support.sortDetached && b.compareDocumentPosition( a ) === compare) ) {
			// Choose the first element that is related to our preferred document
			if ( a === document || a.ownerDocument === preferredDoc && contains(preferredDoc, a) ) {
				return -1;
			}
			if ( b === document || b.ownerDocument === preferredDoc && contains(preferredDoc, b) ) {
				return 1;
			}
			// Maintain original order
			return sortInput ?
				( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :
				0;
		}
		return compare & 4 ? -1 : 1;
	} :
	function( a, b ) {
		// Exit early if the nodes are identical
		if ( a === b ) {
			hasDuplicate = true;
			return 0;
		}
		var cur,
			i = 0,
			aup = a.parentNode,
			bup = b.parentNode,
			ap = [ a ],
			bp = [ b ];
		// Parentless nodes are either documents or disconnected
		if ( !aup || !bup ) {
			return a === document ? -1 :
				b === document ? 1 :
				aup ? -1 :
				bup ? 1 :
				sortInput ?
				( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :
				0;
		// If the nodes are siblings, we can do a quick check
		} else if ( aup === bup ) {
			return siblingCheck( a, b );
		}
		// Otherwise we need full lists of their ancestors for comparison
		cur = a;
		while ( (cur = cur.parentNode) ) {
			ap.unshift( cur );
		}
		cur = b;
		while ( (cur = cur.parentNode) ) {
			bp.unshift( cur );
		}
		// Walk down the tree looking for a discrepancy
		while ( ap[i] === bp[i] ) {
			i++;
		}
		return i ?
			// Do a sibling check if the nodes have a common ancestor
			siblingCheck( ap[i], bp[i] ) :
			// Otherwise nodes in our document sort first
			ap[i] === preferredDoc ? -1 :
			bp[i] === preferredDoc ? 1 :
			0;
	};
	return document;
};
Sizzle.matches = function( expr, elements ) {
	return Sizzle( expr, null, null, elements );
};
Sizzle.matchesSelector = function( elem, expr ) {
	// Set document vars if needed
	if ( ( elem.ownerDocument || elem ) !== document ) {
		setDocument( elem );
	}
	// Make sure that attribute selectors are quoted
	expr = expr.replace( rattributeQuotes, "='$1']" );
	if ( support.matchesSelector && documentIsHTML &&
		!compilerCache[ expr + " " ] &&
		( !rbuggyMatches || !rbuggyMatches.test( expr ) ) &&
		( !rbuggyQSA     || !rbuggyQSA.test( expr ) ) ) {
		try {
			var ret = matches.call( elem, expr );
			// IE 9's matchesSelector returns false on disconnected nodes
			if ( ret || support.disconnectedMatch ||
					// As well, disconnected nodes are said to be in a document
					// fragment in IE 9
					elem.document && elem.document.nodeType !== 11 ) {
				return ret;
			}
		} catch (e) {}
	}
	return Sizzle( expr, document, null, [ elem ] ).length > 0;
};
Sizzle.contains = function( context, elem ) {
	// Set document vars if needed
	if ( ( context.ownerDocument || context ) !== document ) {
		setDocument( context );
	}
	return contains( context, elem );
};
Sizzle.attr = function( elem, name ) {
	// Set document vars if needed
	if ( ( elem.ownerDocument || elem ) !== document ) {
		setDocument( elem );
	}
	var fn = Expr.attrHandle[ name.toLowerCase() ],
		// Don't get fooled by Object.prototype properties (jQuery #13807)
		val = fn && hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?
			fn( elem, name, !documentIsHTML ) :
			undefined;
	return val !== undefined ?
		val :
		support.attributes || !documentIsHTML ?
			elem.getAttribute( name ) :
			(val = elem.getAttributeNode(name)) && val.specified ?
				val.value :
				null;
};
Sizzle.escape = function( sel ) {
	return (sel + "").replace( rcssescape, fcssescape );
};
Sizzle.error = function( msg ) {
	throw new Error( "Syntax error, unrecognized expression: " + msg );
};
/**
 * Document sorting and removing duplicates
 * @param {ArrayLike} results
 */
Sizzle.uniqueSort = function( results ) {
	var elem,
		duplicates = [],
		j = 0,
		i = 0;
	// Unless we *know* we can detect duplicates, assume their presence
	hasDuplicate = !support.detectDuplicates;
	sortInput = !support.sortStable && results.slice( 0 );
	results.sort( sortOrder );
	if ( hasDuplicate ) {
		while ( (elem = results[i++]) ) {
			if ( elem === results[ i ] ) {
				j = duplicates.push( i );
			}
		}
		while ( j-- ) {
			results.splice( duplicates[ j ], 1 );
		}
	}
	// Clear input after sorting to release objects
	// See https://github.com/jquery/sizzle/pull/225
	sortInput = null;
	return results;
};
/**
 * Utility function for retrieving the text value of an array of DOM nodes
 * @param {Array|Element} elem
 */
getText = Sizzle.getText = function( elem ) {
	var node,
		ret = "",
		i = 0,
		nodeType = elem.nodeType;
	if ( !nodeType ) {
		// If no nodeType, this is expected to be an array
		while ( (node = elem[i++]) ) {
			// Do not traverse comment nodes
			ret += getText( node );
		}
	} else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {
		// Use textContent for elements
		// innerText usage removed for consistency of new lines (jQuery #11153)
		if ( typeof elem.textContent === "string" ) {
			return elem.textContent;
		} else {
			// Traverse its children
			for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
				ret += getText( elem );
			}
		}
	} else if ( nodeType === 3 || nodeType === 4 ) {
		return elem.nodeValue;
	}
	// Do not include comment or processing instruction nodes
	return ret;
};
Expr = Sizzle.selectors = {
	// Can be adjusted by the user
	cacheLength: 50,
	createPseudo: markFunction,
	match: matchExpr,
	attrHandle: {},
	find: {},
	relative: {
		">": { dir: "parentNode", first: true },
		" ": { dir: "parentNode" },
		"+": { dir: "previousSibling", first: true },
		"~": { dir: "previousSibling" }
	},
	preFilter: {
		"ATTR": function( match ) {
			match[1] = match[1].replace( runescape, funescape );
			// Move the given value to match[3] whether quoted or unquoted
			match[3] = ( match[3] || match[4] || match[5] || "" ).replace( runescape, funescape );
			if ( match[2] === "~=" ) {
				match[3] = " " + match[3] + " ";
			}
			return match.slice( 0, 4 );
		},
		"CHILD": function( match ) {
			/* matches from matchExpr["CHILD"]
				1 type (only|nth|...)
				2 what (child|of-type)
				3 argument (even|odd|\d*|\d*n([+-]\d+)?|...)
				4 xn-component of xn+y argument ([+-]?\d*n|)
				5 sign of xn-component
				6 x of xn-component
				7 sign of y-component
				8 y of y-component
			*/
			match[1] = match[1].toLowerCase();
			if ( match[1].slice( 0, 3 ) === "nth" ) {
				// nth-* requires argument
				if ( !match[3] ) {
					Sizzle.error( match[0] );
				}
				// numeric x and y parameters for Expr.filter.CHILD
				// remember that false/true cast respectively to 0/1
				match[4] = +( match[4] ? match[5] + (match[6] || 1) : 2 * ( match[3] === "even" || match[3] === "odd" ) );
				match[5] = +( ( match[7] + match[8] ) || match[3] === "odd" );
			// other types prohibit arguments
			} else if ( match[3] ) {
				Sizzle.error( match[0] );
			}
			return match;
		},
		"PSEUDO": function( match ) {
			var excess,
				unquoted = !match[6] && match[2];
			if ( matchExpr["CHILD"].test( match[0] ) ) {
				return null;
			}
			// Accept quoted arguments as-is
			if ( match[3] ) {
				match[2] = match[4] || match[5] || "";
			// Strip excess characters from unquoted arguments
			} else if ( unquoted && rpseudo.test( unquoted ) &&
				// Get excess from tokenize (recursively)
				(excess = tokenize( unquoted, true )) &&
				// advance to the next closing parenthesis
				(excess = unquoted.indexOf( ")", unquoted.length - excess ) - unquoted.length) ) {
				// excess is a negative index
				match[0] = match[0].slice( 0, excess );
				match[2] = unquoted.slice( 0, excess );
			}
			// Return only captures needed by the pseudo filter method (type and argument)
			return match.slice( 0, 3 );
		}
	},
	filter: {
		"TAG": function( nodeNameSelector ) {
			var nodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();
			return nodeNameSelector === "*" ?
				function() { return true; } :
				function( elem ) {
					return elem.nodeName && elem.nodeName.toLowerCase() === nodeName;
				};
		},
		"CLASS": function( className ) {
			var pattern = classCache[ className + " " ];
			return pattern ||
				(pattern = new RegExp( "(^|" + whitespace + ")" + className + "(" + whitespace + "|$)" )) &&
				classCache( className, function( elem ) {
					return pattern.test( typeof elem.className === "string" && elem.className || typeof elem.getAttribute !== "undefined" && elem.getAttribute("class") || "" );
				});
		},
		"ATTR": function( name, operator, check ) {
			return function( elem ) {
				var result = Sizzle.attr( elem, name );
				if ( result == null ) {
					return operator === "!=";
				}
				if ( !operator ) {
					return true;
				}
				result += "";
				return operator === "=" ? result === check :
					operator === "!=" ? result !== check :
					operator === "^=" ? check && result.indexOf( check ) === 0 :
					operator === "*=" ? check && result.indexOf( check ) > -1 :
					operator === "$=" ? check && result.slice( -check.length ) === check :
					operator === "~=" ? ( " " + result.replace( rwhitespace, " " ) + " " ).indexOf( check ) > -1 :
					operator === "|=" ? result === check || result.slice( 0, check.length + 1 ) === check + "-" :
					false;
			};
		},
		"CHILD": function( type, what, argument, first, last ) {
			var simple = type.slice( 0, 3 ) !== "nth",
				forward = type.slice( -4 ) !== "last",
				ofType = what === "of-type";
			return first === 1 && last === 0 ?
				// Shortcut for :nth-*(n)
				function( elem ) {
					return !!elem.parentNode;
				} :
				function( elem, context, xml ) {
					var cache, uniqueCache, outerCache, node, nodeIndex, start,
						dir = simple !== forward ? "nextSibling" : "previousSibling",
						parent = elem.parentNode,
						name = ofType && elem.nodeName.toLowerCase(),
						useCache = !xml && !ofType,
						diff = false;
					if ( parent ) {
						// :(first|last|only)-(child|of-type)
						if ( simple ) {
							while ( dir ) {
								node = elem;
								while ( (node = node[ dir ]) ) {
									if ( ofType ?
										node.nodeName.toLowerCase() === name :
										node.nodeType === 1 ) {
										return false;
									}
								}
								// Reverse direction for :only-* (if we haven't yet done so)
								start = dir = type === "only" && !start && "nextSibling";
							}
							return true;
						}
						start = [ forward ? parent.firstChild : parent.lastChild ];
						// non-xml :nth-child(...) stores cache data on `parent`
						if ( forward && useCache ) {
							// Seek `elem` from a previously-cached index
							// ...in a gzip-friendly way
							node = parent;
							outerCache = node[ expando ] || (node[ expando ] = {});
							// Support: IE <9 only
							// Defend against cloned attroperties (jQuery gh-1709)
							uniqueCache = outerCache[ node.uniqueID ] ||
								(outerCache[ node.uniqueID ] = {});
							cache = uniqueCache[ type ] || [];
							nodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];
							diff = nodeIndex && cache[ 2 ];
							node = nodeIndex && parent.childNodes[ nodeIndex ];
							while ( (node = ++nodeIndex && node && node[ dir ] ||
								// Fallback to seeking `elem` from the start
								(diff = nodeIndex = 0) || start.pop()) ) {
								// When found, cache indexes on `parent` and break
								if ( node.nodeType === 1 && ++diff && node === elem ) {
									uniqueCache[ type ] = [ dirruns, nodeIndex, diff ];
									break;
								}
							}
						} else {
							// Use previously-cached element index if available
							if ( useCache ) {
								// ...in a gzip-friendly way
								node = elem;
								outerCache = node[ expando ] || (node[ expando ] = {});
								// Support: IE <9 only
								// Defend against cloned attroperties (jQuery gh-1709)
								uniqueCache = outerCache[ node.uniqueID ] ||
									(outerCache[ node.uniqueID ] = {});
								cache = uniqueCache[ type ] || [];
								nodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];
								diff = nodeIndex;
							}
							// xml :nth-child(...)
							// or :nth-last-child(...) or :nth(-last)?-of-type(...)
							if ( diff === false ) {
								// Use the same loop as above to seek `elem` from the start
								while ( (node = ++nodeIndex && node && node[ dir ] ||
									(diff = nodeIndex = 0) || start.pop()) ) {
									if ( ( ofType ?
										node.nodeName.toLowerCase() === name :
										node.nodeType === 1 ) &&
										++diff ) {
										// Cache the index of each encountered element
										if ( useCache ) {
											outerCache = node[ expando ] || (node[ expando ] = {});
											// Support: IE <9 only
											// Defend against cloned attroperties (jQuery gh-1709)
											uniqueCache = outerCache[ node.uniqueID ] ||
												(outerCache[ node.uniqueID ] = {});
											uniqueCache[ type ] = [ dirruns, diff ];
										}
										if ( node === elem ) {
											break;
										}
									}
								}
							}
						}
						// Incorporate the offset, then check against cycle size
						diff -= last;
						return diff === first || ( diff % first === 0 && diff / first >= 0 );
					}
				};
		},
		"PSEUDO": function( pseudo, argument ) {
			// pseudo-class names are case-insensitive
			// http://www.w3.org/TR/selectors/#pseudo-classes
			// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters
			// Remember that setFilters inherits from pseudos
			var args,
				fn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||
					Sizzle.error( "unsupported pseudo: " + pseudo );
			// The user may use createPseudo to indicate that
			// arguments are needed to create the filter function
			// just as Sizzle does
			if ( fn[ expando ] ) {
				return fn( argument );
			}
			// But maintain support for old signatures
			if ( fn.length > 1 ) {
				args = [ pseudo, pseudo, "", argument ];
				return Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?
					markFunction(function( seed, matches ) {
						var idx,
							matched = fn( seed, argument ),
							i = matched.length;
						while ( i-- ) {
							idx = indexOf( seed, matched[i] );
							seed[ idx ] = !( matches[ idx ] = matched[i] );
						}
					}) :
					function( elem ) {
						return fn( elem, 0, args );
					};
			}
			return fn;
		}
	},
	pseudos: {
		// Potentially complex pseudos
		"not": markFunction(function( selector ) {
			// Trim the selector passed to compile
			// to avoid treating leading and trailing
			// spaces as combinators
			var input = [],
				results = [],
				matcher = compile( selector.replace( rtrim, "$1" ) );
			return matcher[ expando ] ?
				markFunction(function( seed, matches, context, xml ) {
					var elem,
						unmatched = matcher( seed, null, xml, [] ),
						i = seed.length;
					// Match elements unmatched by `matcher`
					while ( i-- ) {
						if ( (elem = unmatched[i]) ) {
							seed[i] = !(matches[i] = elem);
						}
					}
				}) :
				function( elem, context, xml ) {
					input[0] = elem;
					matcher( input, null, xml, results );
					// Don't keep the element (issue #299)
					input[0] = null;
					return !results.pop();
				};
		}),
		"has": markFunction(function( selector ) {
			return function( elem ) {
				return Sizzle( selector, elem ).length > 0;
			};
		}),
		"contains": markFunction(function( text ) {
			text = text.replace( runescape, funescape );
			return function( elem ) {
				return ( elem.textContent || elem.innerText || getText( elem ) ).indexOf( text ) > -1;
			};
		}),
		// "Whether an element is represented by a :lang() selector
		// is based solely on the element's language value
		// being equal to the identifier C,
		// or beginning with the identifier C immediately followed by "-".
		// The matching of C against the element's language value is performed case-insensitively.
		// The identifier C does not have to be a valid language name."
		// http://www.w3.org/TR/selectors/#lang-pseudo
		"lang": markFunction( function( lang ) {
			// lang value must be a valid identifier
			if ( !ridentifier.test(lang || "") ) {
				Sizzle.error( "unsupported lang: " + lang );
			}
			lang = lang.replace( runescape, funescape ).toLowerCase();
			return function( elem ) {
				var elemLang;
				do {
					if ( (elemLang = documentIsHTML ?
						elem.lang :
						elem.getAttribute("xml:lang") || elem.getAttribute("lang")) ) {
						elemLang = elemLang.toLowerCase();
						return elemLang === lang || elemLang.indexOf( lang + "-" ) === 0;
					}
				} while ( (elem = elem.parentNode) && elem.nodeType === 1 );
				return false;
			};
		}),
		// Miscellaneous
		"target": function( elem ) {
			var hash = window.location && window.location.hash;
			return hash && hash.slice( 1 ) === elem.id;
		},
		"root": function( elem ) {
			return elem === docElem;
		},
		"focus": function( elem ) {
			return elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);
		},
		// Boolean properties
		"enabled": createDisabledPseudo( false ),
		"disabled": createDisabledPseudo( true ),
		"checked": function( elem ) {
			// In CSS3, :checked should return both checked and selected elements
			// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
			var nodeName = elem.nodeName.toLowerCase();
			return (nodeName === "input" && !!elem.checked) || (nodeName === "option" && !!elem.selected);
		},
		"selected": function( elem ) {
			// Accessing this property makes selected-by-default
			// options in Safari work properly
			if ( elem.parentNode ) {
				elem.parentNode.selectedIndex;
			}
			return elem.selected === true;
		},
		// Contents
		"empty": function( elem ) {
			// http://www.w3.org/TR/selectors/#empty-pseudo
			// :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),
			//   but not by others (comment: 8; processing instruction: 7; etc.)
			// nodeType < 6 works because attributes (2) do not appear as children
			for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
				if ( elem.nodeType < 6 ) {
					return false;
				}
			}
			return true;
		},
		"parent": function( elem ) {
			return !Expr.pseudos["empty"]( elem );
		},
		// Element/input types
		"header": function( elem ) {
			return rheader.test( elem.nodeName );
		},
		"input": function( elem ) {
			return rinputs.test( elem.nodeName );
		},
		"button": function( elem ) {
			var name = elem.nodeName.toLowerCase();
			return name === "input" && elem.type === "button" || name === "button";
		},
		"text": function( elem ) {
			var attr;
			return elem.nodeName.toLowerCase() === "input" &&
				elem.type === "text" &&
				// Support: IE<8
				// New HTML5 attribute values (e.g., "search") appear with elem.type === "text"
				( (attr = elem.getAttribute("type")) == null || attr.toLowerCase() === "text" );
		},
		// Position-in-collection
		"first": createPositionalPseudo(function() {
			return [ 0 ];
		}),
		"last": createPositionalPseudo(function( matchIndexes, length ) {
			return [ length - 1 ];
		}),
		"eq": createPositionalPseudo(function( matchIndexes, length, argument ) {
			return [ argument < 0 ? argument + length : argument ];
		}),
		"even": createPositionalPseudo(function( matchIndexes, length ) {
			var i = 0;
			for ( ; i < length; i += 2 ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		}),
		"odd": createPositionalPseudo(function( matchIndexes, length ) {
			var i = 1;
			for ( ; i < length; i += 2 ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		}),
		"lt": createPositionalPseudo(function( matchIndexes, length, argument ) {
			var i = argument < 0 ? argument + length : argument;
			for ( ; --i >= 0; ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		}),
		"gt": createPositionalPseudo(function( matchIndexes, length, argument ) {
			var i = argument < 0 ? argument + length : argument;
			for ( ; ++i < length; ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		})
	}
};
Expr.pseudos["nth"] = Expr.pseudos["eq"];
// Add button/input type pseudos
for ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {
	Expr.pseudos[ i ] = createInputPseudo( i );
}
for ( i in { submit: true, reset: true } ) {
	Expr.pseudos[ i ] = createButtonPseudo( i );
}
// Easy API for creating new setFilters
function setFilters() {}
setFilters.prototype = Expr.filters = Expr.pseudos;
Expr.setFilters = new setFilters();
tokenize = Sizzle.tokenize = function( selector, parseOnly ) {
	var matched, match, tokens, type,
		soFar, groups, preFilters,
		cached = tokenCache[ selector + " " ];
	if ( cached ) {
		return parseOnly ? 0 : cached.slice( 0 );
	}
	soFar = selector;
	groups = [];
	preFilters = Expr.preFilter;
	while ( soFar ) {
		// Comma and first run
		if ( !matched || (match = rcomma.exec( soFar )) ) {
			if ( match ) {
				// Don't consume trailing commas as valid
				soFar = soFar.slice( match[0].length ) || soFar;
			}
			groups.push( (tokens = []) );
		}
		matched = false;
		// Combinators
		if ( (match = rcombinators.exec( soFar )) ) {
			matched = match.shift();
			tokens.push({
				value: matched,
				// Cast descendant combinators to space
				type: match[0].replace( rtrim, " " )
			});
			soFar = soFar.slice( matched.length );
		}
		// Filters
		for ( type in Expr.filter ) {
			if ( (match = matchExpr[ type ].exec( soFar )) && (!preFilters[ type ] ||
				(match = preFilters[ type ]( match ))) ) {
				matched = match.shift();
				tokens.push({
					value: matched,
					type: type,
					matches: match
				});
				soFar = soFar.slice( matched.length );
			}
		}
		if ( !matched ) {
			break;
		}
	}
	// Return the length of the invalid excess
	// if we're just parsing
	// Otherwise, throw an error or return tokens
	return parseOnly ?
		soFar.length :
		soFar ?
			Sizzle.error( selector ) :
			// Cache the tokens
			tokenCache( selector, groups ).slice( 0 );
};
function toSelector( tokens ) {
	var i = 0,
		len = tokens.length,
		selector = "";
	for ( ; i < len; i++ ) {
		selector += tokens[i].value;
	}
	return selector;
}
function addCombinator( matcher, combinator, base ) {
	var dir = combinator.dir,
		skip = combinator.next,
		key = skip || dir,
		checkNonElements = base && key === "parentNode",
		doneName = done++;
	return combinator.first ?
		// Check against closest ancestor/preceding element
		function( elem, context, xml ) {
			while ( (elem = elem[ dir ]) ) {
				if ( elem.nodeType === 1 || checkNonElements ) {
					return matcher( elem, context, xml );
				}
			}
			return false;
		} :
		// Check against all ancestor/preceding elements
		function( elem, context, xml ) {
			var oldCache, uniqueCache, outerCache,
				newCache = [ dirruns, doneName ];
			// We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching
			if ( xml ) {
				while ( (elem = elem[ dir ]) ) {
					if ( elem.nodeType === 1 || checkNonElements ) {
						if ( matcher( elem, context, xml ) ) {
							return true;
						}
					}
				}
			} else {
				while ( (elem = elem[ dir ]) ) {
					if ( elem.nodeType === 1 || checkNonElements ) {
						outerCache = elem[ expando ] || (elem[ expando ] = {});
						// Support: IE <9 only
						// Defend against cloned attroperties (jQuery gh-1709)
						uniqueCache = outerCache[ elem.uniqueID ] || (outerCache[ elem.uniqueID ] = {});
						if ( skip && skip === elem.nodeName.toLowerCase() ) {
							elem = elem[ dir ] || elem;
						} else if ( (oldCache = uniqueCache[ key ]) &&
							oldCache[ 0 ] === dirruns && oldCache[ 1 ] === doneName ) {
							// Assign to newCache so results back-propagate to previous elements
							return (newCache[ 2 ] = oldCache[ 2 ]);
						} else {
							// Reuse newcache so results back-propagate to previous elements
							uniqueCache[ key ] = newCache;
							// A match means we're done; a fail means we have to keep checking
							if ( (newCache[ 2 ] = matcher( elem, context, xml )) ) {
								return true;
							}
						}
					}
				}
			}
			return false;
		};
}
function elementMatcher( matchers ) {
	return matchers.length > 1 ?
		function( elem, context, xml ) {
			var i = matchers.length;
			while ( i-- ) {
				if ( !matchers[i]( elem, context, xml ) ) {
					return false;
				}
			}
			return true;
		} :
		matchers[0];
}
function multipleContexts( selector, contexts, results ) {
	var i = 0,
		len = contexts.length;
	for ( ; i < len; i++ ) {
		Sizzle( selector, contexts[i], results );
	}
	return results;
}
function condense( unmatched, map, filter, context, xml ) {
	var elem,
		newUnmatched = [],
		i = 0,
		len = unmatched.length,
		mapped = map != null;
	for ( ; i < len; i++ ) {
		if ( (elem = unmatched[i]) ) {
			if ( !filter || filter( elem, context, xml ) ) {
				newUnmatched.push( elem );
				if ( mapped ) {
					map.push( i );
				}
			}
		}
	}
	return newUnmatched;
}
function setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {
	if ( postFilter && !postFilter[ expando ] ) {
		postFilter = setMatcher( postFilter );
	}
	if ( postFinder && !postFinder[ expando ] ) {
		postFinder = setMatcher( postFinder, postSelector );
	}
	return markFunction(function( seed, results, context, xml ) {
		var temp, i, elem,
			preMap = [],
			postMap = [],
			preexisting = results.length,
			// Get initial elements from seed or context
			elems = seed || multipleContexts( selector || "*", context.nodeType ? [ context ] : context, [] ),
			// Prefilter to get matcher input, preserving a map for seed-results synchronization
			matcherIn = preFilter && ( seed || !selector ) ?
				condense( elems, preMap, preFilter, context, xml ) :
				elems,
			matcherOut = matcher ?
				// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,
				postFinder || ( seed ? preFilter : preexisting || postFilter ) ?
					// ...intermediate processing is necessary
					[] :
					// ...otherwise use results directly
					results :
				matcherIn;
		// Find primary matches
		if ( matcher ) {
			matcher( matcherIn, matcherOut, context, xml );
		}
		// Apply postFilter
		if ( postFilter ) {
			temp = condense( matcherOut, postMap );
			postFilter( temp, [], context, xml );
			// Un-match failing elements by moving them back to matcherIn
			i = temp.length;
			while ( i-- ) {
				if ( (elem = temp[i]) ) {
					matcherOut[ postMap[i] ] = !(matcherIn[ postMap[i] ] = elem);
				}
			}
		}
		if ( seed ) {
			if ( postFinder || preFilter ) {
				if ( postFinder ) {
					// Get the final matcherOut by condensing this intermediate into postFinder contexts
					temp = [];
					i = matcherOut.length;
					while ( i-- ) {
						if ( (elem = matcherOut[i]) ) {
							// Restore matcherIn since elem is not yet a final match
							temp.push( (matcherIn[i] = elem) );
						}
					}
					postFinder( null, (matcherOut = []), temp, xml );
				}
				// Move matched elements from seed to results to keep them synchronized
				i = matcherOut.length;
				while ( i-- ) {
					if ( (elem = matcherOut[i]) &&
						(temp = postFinder ? indexOf( seed, elem ) : preMap[i]) > -1 ) {
						seed[temp] = !(results[temp] = elem);
					}
				}
			}
		// Add elements to results, through postFinder if defined
		} else {
			matcherOut = condense(
				matcherOut === results ?
					matcherOut.splice( preexisting, matcherOut.length ) :
					matcherOut
			);
			if ( postFinder ) {
				postFinder( null, results, matcherOut, xml );
			} else {
				push.apply( results, matcherOut );
			}
		}
	});
}
function matcherFromTokens( tokens ) {
	var checkContext, matcher, j,
		len = tokens.length,
		leadingRelative = Expr.relative[ tokens[0].type ],
		implicitRelative = leadingRelative || Expr.relative[" "],
		i = leadingRelative ? 1 : 0,
		// The foundational matcher ensures that elements are reachable from top-level context(s)
		matchContext = addCombinator( function( elem ) {
			return elem === checkContext;
		}, implicitRelative, true ),
		matchAnyContext = addCombinator( function( elem ) {
			return indexOf( checkContext, elem ) > -1;
		}, implicitRelative, true ),
		matchers = [ function( elem, context, xml ) {
			var ret = ( !leadingRelative && ( xml || context !== outermostContext ) ) || (
				(checkContext = context).nodeType ?
					matchContext( elem, context, xml ) :
					matchAnyContext( elem, context, xml ) );
			// Avoid hanging onto element (issue #299)
			checkContext = null;
			return ret;
		} ];
	for ( ; i < len; i++ ) {
		if ( (matcher = Expr.relative[ tokens[i].type ]) ) {
			matchers = [ addCombinator(elementMatcher( matchers ), matcher) ];
		} else {
			matcher = Expr.filter[ tokens[i].type ].apply( null, tokens[i].matches );
			// Return special upon seeing a positional matcher
			if ( matcher[ expando ] ) {
				// Find the next relative operator (if any) for proper handling
				j = ++i;
				for ( ; j < len; j++ ) {
					if ( Expr.relative[ tokens[j].type ] ) {
						break;
					}
				}
				return setMatcher(
					i > 1 && elementMatcher( matchers ),
					i > 1 && toSelector(
						// If the preceding token was a descendant combinator, insert an implicit any-element `*`
						tokens.slice( 0, i - 1 ).concat({ value: tokens[ i - 2 ].type === " " ? "*" : "" })
					).replace( rtrim, "$1" ),
					matcher,
					i < j && matcherFromTokens( tokens.slice( i, j ) ),
					j < len && matcherFromTokens( (tokens = tokens.slice( j )) ),
					j < len && toSelector( tokens )
				);
			}
			matchers.push( matcher );
		}
	}
	return elementMatcher( matchers );
}
function matcherFromGroupMatchers( elementMatchers, setMatchers ) {
	var bySet = setMatchers.length > 0,
		byElement = elementMatchers.length > 0,
		superMatcher = function( seed, context, xml, results, outermost ) {
			var elem, j, matcher,
				matchedCount = 0,
				i = "0",
				unmatched = seed && [],
				setMatched = [],
				contextBackup = outermostContext,
				// We must always have either seed elements or outermost context
				elems = seed || byElement && Expr.find["TAG"]( "*", outermost ),
				// Use integer dirruns iff this is the outermost matcher
				dirrunsUnique = (dirruns += contextBackup == null ? 1 : Math.random() || 0.1),
				len = elems.length;
			if ( outermost ) {
				outermostContext = context === document || context || outermost;
			}
			// Add elements passing elementMatchers directly to results
			// Support: IE<9, Safari
			// Tolerate NodeList properties (IE: "length"; Safari: <number>) matching elements by id
			for ( ; i !== len && (elem = elems[i]) != null; i++ ) {
				if ( byElement && elem ) {
					j = 0;
					if ( !context && elem.ownerDocument !== document ) {
						setDocument( elem );
						xml = !documentIsHTML;
					}
					while ( (matcher = elementMatchers[j++]) ) {
						if ( matcher( elem, context || document, xml) ) {
							results.push( elem );
							break;
						}
					}
					if ( outermost ) {
						dirruns = dirrunsUnique;
					}
				}
				// Track unmatched elements for set filters
				if ( bySet ) {
					// They will have gone through all possible matchers
					if ( (elem = !matcher && elem) ) {
						matchedCount--;
					}
					// Lengthen the array for every element, matched or not
					if ( seed ) {
						unmatched.push( elem );
					}
				}
			}
			// `i` is now the count of elements visited above, and adding it to `matchedCount`
			// makes the latter nonnegative.
			matchedCount += i;
			// Apply set filters to unmatched elements
			// NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`
			// equals `i`), unless we didn't visit _any_ elements in the above loop because we have
			// no element matchers and no seed.
			// Incrementing an initially-string "0" `i` allows `i` to remain a string only in that
			// case, which will result in a "00" `matchedCount` that differs from `i` but is also
			// numerically zero.
			if ( bySet && i !== matchedCount ) {
				j = 0;
				while ( (matcher = setMatchers[j++]) ) {
					matcher( unmatched, setMatched, context, xml );
				}
				if ( seed ) {
					// Reintegrate element matches to eliminate the need for sorting
					if ( matchedCount > 0 ) {
						while ( i-- ) {
							if ( !(unmatched[i] || setMatched[i]) ) {
								setMatched[i] = pop.call( results );
							}
						}
					}
					// Discard index placeholder values to get only actual matches
					setMatched = condense( setMatched );
				}
				// Add matches to results
				push.apply( results, setMatched );
				// Seedless set matches succeeding multiple successful matchers stipulate sorting
				if ( outermost && !seed && setMatched.length > 0 &&
					( matchedCount + setMatchers.length ) > 1 ) {
					Sizzle.uniqueSort( results );
				}
			}
			// Override manipulation of globals by nested matchers
			if ( outermost ) {
				dirruns = dirrunsUnique;
				outermostContext = contextBackup;
			}
			return unmatched;
		};
	return bySet ?
		markFunction( superMatcher ) :
		superMatcher;
}
compile = Sizzle.compile = function( selector, match /* Internal Use Only */ ) {
	var i,
		setMatchers = [],
		elementMatchers = [],
		cached = compilerCache[ selector + " " ];
	if ( !cached ) {
		// Generate a function of recursive functions that can be used to check each element
		if ( !match ) {
			match = tokenize( selector );
		}
		i = match.length;
		while ( i-- ) {
			cached = matcherFromTokens( match[i] );
			if ( cached[ expando ] ) {
				setMatchers.push( cached );
			} else {
				elementMatchers.push( cached );
			}
		}
		// Cache the compiled function
		cached = compilerCache( selector, matcherFromGroupMatchers( elementMatchers, setMatchers ) );
		// Save selector and tokenization
		cached.selector = selector;
	}
	return cached;
};
/**
 * A low-level selection function that works with Sizzle's compiled
 *  selector functions
 * @param {String|Function} selector A selector or a pre-compiled
 *  selector function built with Sizzle.compile
 * @param {Element} context
 * @param {Array} [results]
 * @param {Array} [seed] A set of elements to match against
 */
select = Sizzle.select = function( selector, context, results, seed ) {
	var i, tokens, token, type, find,
		compiled = typeof selector === "function" && selector,
		match = !seed && tokenize( (selector = compiled.selector || selector) );
	results = results || [];
	// Try to minimize operations if there is only one selector in the list and no seed
	// (the latter of which guarantees us context)
	if ( match.length === 1 ) {
		// Reduce context if the leading compound selector is an ID
		tokens = match[0] = match[0].slice( 0 );
		if ( tokens.length > 2 && (token = tokens[0]).type === "ID" &&
				context.nodeType === 9 && documentIsHTML && Expr.relative[ tokens[1].type ] ) {
			context = ( Expr.find["ID"]( token.matches[0].replace(runescape, funescape), context ) || [] )[0];
			if ( !context ) {
				return results;
			// Precompiled matchers will still verify ancestry, so step up a level
			} else if ( compiled ) {
				context = context.parentNode;
			}
			selector = selector.slice( tokens.shift().value.length );
		}
		// Fetch a seed set for right-to-left matching
		i = matchExpr["needsContext"].test( selector ) ? 0 : tokens.length;
		while ( i-- ) {
			token = tokens[i];
			// Abort if we hit a combinator
			if ( Expr.relative[ (type = token.type) ] ) {
				break;
			}
			if ( (find = Expr.find[ type ]) ) {
				// Search, expanding context for leading sibling combinators
				if ( (seed = find(
					token.matches[0].replace( runescape, funescape ),
					rsibling.test( tokens[0].type ) && testContext( context.parentNode ) || context
				)) ) {
					// If seed is empty or no tokens remain, we can return early
					tokens.splice( i, 1 );
					selector = seed.length && toSelector( tokens );
					if ( !selector ) {
						push.apply( results, seed );
						return results;
					}
					break;
				}
			}
		}
	}
	// Compile and execute a filtering function if one is not provided
	// Provide `match` to avoid retokenization if we modified the selector above
	( compiled || compile( selector, match ) )(
		seed,
		context,
		!documentIsHTML,
		results,
		!context || rsibling.test( selector ) && testContext( context.parentNode ) || context
	);
	return results;
};
// One-time assignments
// Sort stability
support.sortStable = expando.split("").sort( sortOrder ).join("") === expando;
// Support: Chrome 14-35+
// Always assume duplicates if they aren't passed to the comparison function
support.detectDuplicates = !!hasDuplicate;
// Initialize against the default document
setDocument();
// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)
// Detached nodes confoundingly follow *each other*
support.sortDetached = assert(function( el ) {
	// Should return 1, but returns 4 (following)
	return el.compareDocumentPosition( document.createElement("fieldset") ) & 1;
});
// Support: IE<8
// Prevent attribute/property "interpolation"
// https://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx
if ( !assert(function( el ) {
	el.innerHTML = "<a href='#'></a>";
	return el.firstChild.getAttribute("href") === "#" ;
}) ) {
	addHandle( "type|href|height|width", function( elem, name, isXML ) {
		if ( !isXML ) {
			return elem.getAttribute( name, name.toLowerCase() === "type" ? 1 : 2 );
		}
	});
}
// Support: IE<9
// Use defaultValue in place of getAttribute("value")
if ( !support.attributes || !assert(function( el ) {
	el.innerHTML = "<input/>";
	el.firstChild.setAttribute( "value", "" );
	return el.firstChild.getAttribute( "value" ) === "";
}) ) {
	addHandle( "value", function( elem, name, isXML ) {
		if ( !isXML && elem.nodeName.toLowerCase() === "input" ) {
			return elem.defaultValue;
		}
	});
}
// Support: IE<9
// Use getAttributeNode to fetch booleans when getAttribute lies
if ( !assert(function( el ) {
	return el.getAttribute("disabled") == null;
}) ) {
	addHandle( booleans, function( elem, name, isXML ) {
		var val;
		if ( !isXML ) {
			return elem[ name ] === true ? name.toLowerCase() :
					(val = elem.getAttributeNode( name )) && val.specified ?
					val.value :
				null;
		}
	});
}
return Sizzle;
})( window );
jQuery.find = Sizzle;
jQuery.expr = Sizzle.selectors;
// Deprecated
jQuery.expr[ ":" ] = jQuery.expr.pseudos;
jQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort;
jQuery.text = Sizzle.getText;
jQuery.isXMLDoc = Sizzle.isXML;
jQuery.contains = Sizzle.contains;
jQuery.escapeSelector = Sizzle.escape;
var dir = function( elem, dir, until ) {
	var matched = [],
		truncate = until !== undefined;
	while ( ( elem = elem[ dir ] ) && elem.nodeType !== 9 ) {
		if ( elem.nodeType === 1 ) {
			if ( truncate && jQuery( elem ).is( until ) ) {
				break;
			}
			matched.push( elem );
		}
	}
	return matched;
};
var siblings = function( n, elem ) {
	var matched = [];
	for ( ; n; n = n.nextSibling ) {
		if ( n.nodeType === 1 && n !== elem ) {
			matched.push( n );
		}
	}
	return matched;
};
var rneedsContext = jQuery.expr.match.needsContext;
function nodeName( elem, name ) {
  return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();
};
var rsingleTag = ( /^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i );
// Implement the identical functionality for filter and not
function winnow( elements, qualifier, not ) {
	if ( isFunction( qualifier ) ) {
		return jQuery.grep( elements, function( elem, i ) {
			return !!qualifier.call( elem, i, elem ) !== not;
		} );
	}
	// Single element
	if ( qualifier.nodeType ) {
		return jQuery.grep( elements, function( elem ) {
			return ( elem === qualifier ) !== not;
		} );
	}
	// Arraylike of elements (jQuery, arguments, Array)
	if ( typeof qualifier !== "string" ) {
		return jQuery.grep( elements, function( elem ) {
			return ( indexOf.call( qualifier, elem ) > -1 ) !== not;
		} );
	}
	// Filtered directly for both simple and complex selectors
	return jQuery.filter( qualifier, elements, not );
}
jQuery.filter = function( expr, elems, not ) {
	var elem = elems[ 0 ];
	if ( not ) {
		expr = ":not(" + expr + ")";
	}
	if ( elems.length === 1 && elem.nodeType === 1 ) {
		return jQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [];
	}
	return jQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {
		return elem.nodeType === 1;
	} ) );
};
jQuery.fn.extend( {
	find: function( selector ) {
		var i, ret,
			len = this.length,
			self = this;
		if ( typeof selector !== "string" ) {
			return this.pushStack( jQuery( selector ).filter( function() {
				for ( i = 0; i < len; i++ ) {
					if ( jQuery.contains( self[ i ], this ) ) {
						return true;
					}
				}
			} ) );
		}
		ret = this.pushStack( [] );
		for ( i = 0; i < len; i++ ) {
			jQuery.find( selector, self[ i ], ret );
		}
		return len > 1 ? jQuery.uniqueSort( ret ) : ret;
	},
	filter: function( selector ) {
		return this.pushStack( winnow( this, selector || [], false ) );
	},
	not: function( selector ) {
		return this.pushStack( winnow( this, selector || [], true ) );
	},
	is: function( selector ) {
		return !!winnow(
			this,
			// If this is a positional/relative selector, check membership in the returned set
			// so $("p:first").is("p:last") won't return true for a doc with two "p".
			typeof selector === "string" && rneedsContext.test( selector ) ?
				jQuery( selector ) :
				selector || [],
			false
		).length;
	}
} );
// Initialize a jQuery object
// A central reference to the root jQuery(document)
var rootjQuery,
	// A simple way to check for HTML strings
	// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)
	// Strict HTML recognition (#11290: must start with <)
	// Shortcut simple #id case for speed
	rquickExpr = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/,
	init = jQuery.fn.init = function( selector, context, root ) {
		var match, elem;
		// HANDLE: $(""), $(null), $(undefined), $(false)
		if ( !selector ) {
			return this;
		}
		// Method init() accepts an alternate rootjQuery
		// so migrate can support jQuery.sub (gh-2101)
		root = root || rootjQuery;
		// Handle HTML strings
		if ( typeof selector === "string" ) {
			if ( selector[ 0 ] === "<" &&
				selector[ selector.length - 1 ] === ">" &&
				selector.length >= 3 ) {
				// Assume that strings that start and end with <> are HTML and skip the regex check
				match = [ null, selector, null ];
			} else {
				match = rquickExpr.exec( selector );
			}
			// Match html or make sure no context is specified for #id
			if ( match && ( match[ 1 ] || !context ) ) {
				// HANDLE: $(html) -> $(array)
				if ( match[ 1 ] ) {
					context = context instanceof jQuery ? context[ 0 ] : context;
					// Option to run scripts is true for back-compat
					// Intentionally let the error be thrown if parseHTML is not present
					jQuery.merge( this, jQuery.parseHTML(
						match[ 1 ],
						context && context.nodeType ? context.ownerDocument || context : document,
						true
					) );
					// HANDLE: $(html, props)
					if ( rsingleTag.test( match[ 1 ] ) && jQuery.isPlainObject( context ) ) {
						for ( match in context ) {
							// Properties of context are called as methods if possible
							if ( isFunction( this[ match ] ) ) {
								this[ match ]( context[ match ] );
							// ...and otherwise set as attributes
							} else {
								this.attr( match, context[ match ] );
							}
						}
					}
					return this;
				// HANDLE: $(#id)
				} else {
					elem = document.getElementById( match[ 2 ] );
					if ( elem ) {
						// Inject the element directly into the jQuery object
						this[ 0 ] = elem;
						this.length = 1;
					}
					return this;
				}
			// HANDLE: $(expr, $(...))
			} else if ( !context || context.jquery ) {
				return ( context || root ).find( selector );
			// HANDLE: $(expr, context)
			// (which is just equivalent to: $(context).find(expr)
			} else {
				return this.constructor( context ).find( selector );
			}
		// HANDLE: $(DOMElement)
		} else if ( selector.nodeType ) {
			this[ 0 ] = selector;
			this.length = 1;
			return this;
		// HANDLE: $(function)
		// Shortcut for document ready
		} else if ( isFunction( selector ) ) {
			return root.ready !== undefined ?
				root.ready( selector ) :
				// Execute immediately if ready is not present
				selector( jQuery );
		}
		return jQuery.makeArray( selector, this );
	};
// Give the init function the jQuery prototype for later instantiation
init.prototype = jQuery.fn;
// Initialize central reference
rootjQuery = jQuery( document );
var rparentsprev = /^(?:parents|prev(?:Until|All))/,
	// Methods guaranteed to produce a unique set when starting from a unique set
	guaranteedUnique = {
		children: true,
		contents: true,
		next: true,
		prev: true
	};
jQuery.fn.extend( {
	has: function( target ) {
		var targets = jQuery( target, this ),
			l = targets.length;
		return this.filter( function() {
			var i = 0;
			for ( ; i < l; i++ ) {
				if ( jQuery.contains( this, targets[ i ] ) ) {
					return true;
				}
			}
		} );
	},
	closest: function( selectors, context ) {
		var cur,
			i = 0,
			l = this.length,
			matched = [],
			targets = typeof selectors !== "string" && jQuery( selectors );
		// Positional selectors never match, since there's no _selection_ context
		if ( !rneedsContext.test( selectors ) ) {
			for ( ; i < l; i++ ) {
				for ( cur = this[ i ]; cur && cur !== context; cur = cur.parentNode ) {
					// Always skip document fragments
					if ( cur.nodeType < 11 && ( targets ?
						targets.index( cur ) > -1 :
						// Don't pass non-elements to Sizzle
						cur.nodeType === 1 &&
							jQuery.find.matchesSelector( cur, selectors ) ) ) {
						matched.push( cur );
						break;
					}
				}
			}
		}
		return this.pushStack( matched.length > 1 ? jQuery.uniqueSort( matched ) : matched );
	},
	// Determine the position of an element within the set
	index: function( elem ) {
		// No argument, return index in parent
		if ( !elem ) {
			return ( this[ 0 ] && this[ 0 ].parentNode ) ? this.first().prevAll().length : -1;
		}
		// Index in selector
		if ( typeof elem === "string" ) {
			return indexOf.call( jQuery( elem ), this[ 0 ] );
		}
		// Locate the position of the desired element
		return indexOf.call( this,
			// If it receives a jQuery object, the first element is used
			elem.jquery ? elem[ 0 ] : elem
		);
	},
	add: function( selector, context ) {
		return this.pushStack(
			jQuery.uniqueSort(
				jQuery.merge( this.get(), jQuery( selector, context ) )
			)
		);
	},
	addBack: function( selector ) {
		return this.add( selector == null ?
			this.prevObject : this.prevObject.filter( selector )
		);
	}
} );
function sibling( cur, dir ) {
	while ( ( cur = cur[ dir ] ) && cur.nodeType !== 1 ) {}
	return cur;
}
jQuery.each( {
	parent: function( elem ) {
		var parent = elem.parentNode;
		return parent && parent.nodeType !== 11 ? parent : null;
	},
	parents: function( elem ) {
		return dir( elem, "parentNode" );
	},
	parentsUntil: function( elem, i, until ) {
		return dir( elem, "parentNode", until );
	},
	next: function( elem ) {
		return sibling( elem, "nextSibling" );
	},
	prev: function( elem ) {
		return sibling( elem, "previousSibling" );
	},
	nextAll: function( elem ) {
		return dir( elem, "nextSibling" );
	},
	prevAll: function( elem ) {
		return dir( elem, "previousSibling" );
	},
	nextUntil: function( elem, i, until ) {
		return dir( elem, "nextSibling", until );
	},
	prevUntil: function( elem, i, until ) {
		return dir( elem, "previousSibling", until );
	},
	siblings: function( elem ) {
		return siblings( ( elem.parentNode || {} ).firstChild, elem );
	},
	children: function( elem ) {
		return siblings( elem.firstChild );
	},
	contents: function( elem ) {
        if ( nodeName( elem, "iframe" ) ) {
            return elem.contentDocument;
        }
        // Support: IE 9 - 11 only, iOS 7 only, Android Browser <=4.3 only
        // Treat the template element as a regular one in browsers that
        // don't support it.
        if ( nodeName( elem, "template" ) ) {
            elem = elem.content || elem;
        }
        return jQuery.merge( [], elem.childNodes );
	}
}, function( name, fn ) {
	jQuery.fn[ name ] = function( until, selector ) {
		var matched = jQuery.map( this, fn, until );
		if ( name.slice( -5 ) !== "Until" ) {
			selector = until;
		}
		if ( selector && typeof selector === "string" ) {
			matched = jQuery.filter( selector, matched );
		}
		if ( this.length > 1 ) {
			// Remove duplicates
			if ( !guaranteedUnique[ name ] ) {
				jQuery.uniqueSort( matched );
			}
			// Reverse order for parents* and prev-derivatives
			if ( rparentsprev.test( name ) ) {
				matched.reverse();
			}
		}
		return this.pushStack( matched );
	};
} );
var rnothtmlwhite = ( /[^\x20\t\r\n\f]+/g );
// Convert String-formatted options into Object-formatted ones
function createOptions( options ) {
	var object = {};
	jQuery.each( options.match( rnothtmlwhite ) || [], function( _, flag ) {
		object[ flag ] = true;
	} );
	return object;
}
/*
 * Create a callback list using the following parameters:
 *
 *	options: an optional list of space-separated options that will change how
 *			the callback list behaves or a more traditional option object
 *
 * By default a callback list will act like an event callback list and can be
 * "fired" multiple times.
 *
 * Possible options:
 *
 *	once:			will ensure the callback list can only be fired once (like a Deferred)
 *
 *	memory:			will keep track of previous values and will call any callback added
 *					after the list has been fired right away with the latest "memorized"
 *					values (like a Deferred)
 *
 *	unique:			will ensure a callback can only be added once (no duplicate in the list)
 *
 *	stopOnFalse:	interrupt callings when a callback returns false
 *
 */
jQuery.Callbacks = function( options ) {
	// Convert options from String-formatted to Object-formatted if needed
	// (we check in cache first)
	options = typeof options === "string" ?
		createOptions( options ) :
		jQuery.extend( {}, options );
	var // Flag to know if list is currently firing
		firing,
		// Last fire value for non-forgettable lists
		memory,
		// Flag to know if list was already fired
		fired,
		// Flag to prevent firing
		locked,
		// Actual callback list
		list = [],
		// Queue of execution data for repeatable lists
		queue = [],
		// Index of currently firing callback (modified by add/remove as needed)
		firingIndex = -1,
		// Fire callbacks
		fire = function() {
			// Enforce single-firing
			locked = locked || options.once;
			// Execute callbacks for all pending executions,
			// respecting firingIndex overrides and runtime changes
			fired = firing = true;
			for ( ; queue.length; firingIndex = -1 ) {
				memory = queue.shift();
				while ( ++firingIndex < list.length ) {
					// Run callback and check for early termination
					if ( list[ firingIndex ].apply( memory[ 0 ], memory[ 1 ] ) === false &&
						options.stopOnFalse ) {
						// Jump to end and forget the data so .add doesn't re-fire
						firingIndex = list.length;
						memory = false;
					}
				}
			}
			// Forget the data if we're done with it
			if ( !options.memory ) {
				memory = false;
			}
			firing = false;
			// Clean up if we're done firing for good
			if ( locked ) {
				// Keep an empty list if we have data for future add calls
				if ( memory ) {
					list = [];
				// Otherwise, this object is spent
				} else {
					list = "";
				}
			}
		},
		// Actual Callbacks object
		self = {
			// Add a callback or a collection of callbacks to the list
			add: function() {
				if ( list ) {
					// If we have memory from a past run, we should fire after adding
					if ( memory && !firing ) {
						firingIndex = list.length - 1;
						queue.push( memory );
					}
					( function add( args ) {
						jQuery.each( args, function( _, arg ) {
							if ( isFunction( arg ) ) {
								if ( !options.unique || !self.has( arg ) ) {
									list.push( arg );
								}
							} else if ( arg && arg.length && toType( arg ) !== "string" ) {
								// Inspect recursively
								add( arg );
							}
						} );
					} )( arguments );
					if ( memory && !firing ) {
						fire();
					}
				}
				return this;
			},
			// Remove a callback from the list
			remove: function() {
				jQuery.each( arguments, function( _, arg ) {
					var index;
					while ( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {
						list.splice( index, 1 );
						// Handle firing indexes
						if ( index <= firingIndex ) {
							firingIndex--;
						}
					}
				} );
				return this;
			},
			// Check if a given callback is in the list.
			// If no argument is given, return whether or not list has callbacks attached.
			has: function( fn ) {
				return fn ?
					jQuery.inArray( fn, list ) > -1 :
					list.length > 0;
			},
			// Remove all callbacks from the list
			empty: function() {
				if ( list ) {
					list = [];
				}
				return this;
			},
			// Disable .fire and .add
			// Abort any current/pending executions
			// Clear all callbacks and values
			disable: function() {
				locked = queue = [];
				list = memory = "";
				return this;
			},
			disabled: function() {
				return !list;
			},
			// Disable .fire
			// Also disable .add unless we have memory (since it would have no effect)
			// Abort any pending executions
			lock: function() {
				locked = queue = [];
				if ( !memory && !firing ) {
					list = memory = "";
				}
				return this;
			},
			locked: function() {
				return !!locked;
			},
			// Call all callbacks with the given context and arguments
			fireWith: function( context, args ) {
				if ( !locked ) {
					args = args || [];
					args = [ context, args.slice ? args.slice() : args ];
					queue.push( args );
					if ( !firing ) {
						fire();
					}
				}
				return this;
			},
			// Call all the callbacks with the given arguments
			fire: function() {
				self.fireWith( this, arguments );
				return this;
			},
			// To know if the callbacks have already been called at least once
			fired: function() {
				return !!fired;
			}
		};
	return self;
};
function Identity( v ) {
	return v;
}
function Thrower( ex ) {
	throw ex;
}
function adoptValue( value, resolve, reject, noValue ) {
	var method;
	try {
		// Check for promise aspect first to privilege synchronous behavior
		if ( value && isFunction( ( method = value.promise ) ) ) {
			method.call( value ).done( resolve ).fail( reject );
		// Other thenables
		} else if ( value && isFunction( ( method = value.then ) ) ) {
			method.call( value, resolve, reject );
		// Other non-thenables
		} else {
			// Control `resolve` arguments by letting Array#slice cast boolean `noValue` to integer:
			// * false: [ value ].slice( 0 ) => resolve( value )
			// * true: [ value ].slice( 1 ) => resolve()
			resolve.apply( undefined, [ value ].slice( noValue ) );
		}
	// For Promises/A+, convert exceptions into rejections
	// Since jQuery.when doesn't unwrap thenables, we can skip the extra checks appearing in
	// Deferred#then to conditionally suppress rejection.
	} catch ( value ) {
		// Support: Android 4.0 only
		// Strict mode functions invoked without .call/.apply get global-object context
		reject.apply( undefined, [ value ] );
	}
}
jQuery.extend( {
	Deferred: function( func ) {
		var tuples = [
				// action, add listener, callbacks,
				// ... .then handlers, argument index, [final state]
				[ "notify", "progress", jQuery.Callbacks( "memory" ),
					jQuery.Callbacks( "memory" ), 2 ],
				[ "resolve", "done", jQuery.Callbacks( "once memory" ),
					jQuery.Callbacks( "once memory" ), 0, "resolved" ],
				[ "reject", "fail", jQuery.Callbacks( "once memory" ),
					jQuery.Callbacks( "once memory" ), 1, "rejected" ]
			],
			state = "pending",
			promise = {
				state: function() {
					return state;
				},
				always: function() {
					deferred.done( arguments ).fail( arguments );
					return this;
				},
				"catch": function( fn ) {
					return promise.then( null, fn );
				},
				// Keep pipe for back-compat
				pipe: function( /* fnDone, fnFail, fnProgress */ ) {
					var fns = arguments;
					return jQuery.Deferred( function( newDefer ) {
						jQuery.each( tuples, function( i, tuple ) {
							// Map tuples (progress, done, fail) to arguments (done, fail, progress)
							var fn = isFunction( fns[ tuple[ 4 ] ] ) && fns[ tuple[ 4 ] ];
							// deferred.progress(function() { bind to newDefer or newDefer.notify })
							// deferred.done(function() { bind to newDefer or newDefer.resolve })
							// deferred.fail(function() { bind to newDefer or newDefer.reject })
							deferred[ tuple[ 1 ] ]( function() {
								var returned = fn && fn.apply( this, arguments );
								if ( returned && isFunction( returned.promise ) ) {
									returned.promise()
										.progress( newDefer.notify )
										.done( newDefer.resolve )
										.fail( newDefer.reject );
								} else {
									newDefer[ tuple[ 0 ] + "With" ](
										this,
										fn ? [ returned ] : arguments
									);
								}
							} );
						} );
						fns = null;
					} ).promise();
				},
				then: function( onFulfilled, onRejected, onProgress ) {
					var maxDepth = 0;
					function resolve( depth, deferred, handler, special ) {
						return function() {
							var that = this,
								args = arguments,
								mightThrow = function() {
									var returned, then;
									// Support: Promises/A+ section 2.3.3.3.3
									// https://promisesaplus.com/#point-59
									// Ignore double-resolution attempts
									if ( depth < maxDepth ) {
										return;
									}
									returned = handler.apply( that, args );
									// Support: Promises/A+ section 2.3.1
									// https://promisesaplus.com/#point-48
									if ( returned === deferred.promise() ) {
										throw new TypeError( "Thenable self-resolution" );
									}
									// Support: Promises/A+ sections 2.3.3.1, 3.5
									// https://promisesaplus.com/#point-54
									// https://promisesaplus.com/#point-75
									// Retrieve `then` only once
									then = returned &&
										// Support: Promises/A+ section 2.3.4
										// https://promisesaplus.com/#point-64
										// Only check objects and functions for thenability
										( typeof returned === "object" ||
											typeof returned === "function" ) &&
										returned.then;
									// Handle a returned thenable
									if ( isFunction( then ) ) {
										// Special processors (notify) just wait for resolution
										if ( special ) {
											then.call(
												returned,
												resolve( maxDepth, deferred, Identity, special ),
												resolve( maxDepth, deferred, Thrower, special )
											);
										// Normal processors (resolve) also hook into progress
										} else {
											// ...and disregard older resolution values
											maxDepth++;
											then.call(
												returned,
												resolve( maxDepth, deferred, Identity, special ),
												resolve( maxDepth, deferred, Thrower, special ),
												resolve( maxDepth, deferred, Identity,
													deferred.notifyWith )
											);
										}
									// Handle all other returned values
									} else {
										// Only substitute handlers pass on context
										// and multiple values (non-spec behavior)
										if ( handler !== Identity ) {
											that = undefined;
											args = [ returned ];
										}
										// Process the value(s)
										// Default process is resolve
										( special || deferred.resolveWith )( that, args );
									}
								},
								// Only normal processors (resolve) catch and reject exceptions
								process = special ?
									mightThrow :
									function() {
										try {
											mightThrow();
										} catch ( e ) {
											if ( jQuery.Deferred.exceptionHook ) {
												jQuery.Deferred.exceptionHook( e,
													process.stackTrace );
											}
											// Support: Promises/A+ section 2.3.3.3.4.1
											// https://promisesaplus.com/#point-61
											// Ignore post-resolution exceptions
											if ( depth + 1 >= maxDepth ) {
												// Only substitute handlers pass on context
												// and multiple values (non-spec behavior)
												if ( handler !== Thrower ) {
													that = undefined;
													args = [ e ];
												}
												deferred.rejectWith( that, args );
											}
										}
									};
							// Support: Promises/A+ section 2.3.3.3.1
							// https://promisesaplus.com/#point-57
							// Re-resolve promises immediately to dodge false rejection from
							// subsequent errors
							if ( depth ) {
								process();
							} else {
								// Call an optional hook to record the stack, in case of exception
								// since it's otherwise lost when execution goes async
								if ( jQuery.Deferred.getStackHook ) {
									process.stackTrace = jQuery.Deferred.getStackHook();
								}
								window.setTimeout( process );
							}
						};
					}
					return jQuery.Deferred( function( newDefer ) {
						// progress_handlers.add( ... )
						tuples[ 0 ][ 3 ].add(
							resolve(
								0,
								newDefer,
								isFunction( onProgress ) ?
									onProgress :
									Identity,
								newDefer.notifyWith
							)
						);
						// fulfilled_handlers.add( ... )
						tuples[ 1 ][ 3 ].add(
							resolve(
								0,
								newDefer,
								isFunction( onFulfilled ) ?
									onFulfilled :
									Identity
							)
						);
						// rejected_handlers.add( ... )
						tuples[ 2 ][ 3 ].add(
							resolve(
								0,
								newDefer,
								isFunction( onRejected ) ?
									onRejected :
									Thrower
							)
						);
					} ).promise();
				},
				// Get a promise for this deferred
				// If obj is provided, the promise aspect is added to the object
				promise: function( obj ) {
					return obj != null ? jQuery.extend( obj, promise ) : promise;
				}
			},
			deferred = {};
		// Add list-specific methods
		jQuery.each( tuples, function( i, tuple ) {
			var list = tuple[ 2 ],
				stateString = tuple[ 5 ];
			// promise.progress = list.add
			// promise.done = list.add
			// promise.fail = list.add
			promise[ tuple[ 1 ] ] = list.add;
			// Handle state
			if ( stateString ) {
				list.add(
					function() {
						// state = "resolved" (i.e., fulfilled)
						// state = "rejected"
						state = stateString;
					},
					// rejected_callbacks.disable
					// fulfilled_callbacks.disable
					tuples[ 3 - i ][ 2 ].disable,
					// rejected_handlers.disable
					// fulfilled_handlers.disable
					tuples[ 3 - i ][ 3 ].disable,
					// progress_callbacks.lock
					tuples[ 0 ][ 2 ].lock,
					// progress_handlers.lock
					tuples[ 0 ][ 3 ].lock
				);
			}
			// progress_handlers.fire
			// fulfilled_handlers.fire
			// rejected_handlers.fire
			list.add( tuple[ 3 ].fire );
			// deferred.notify = function() { deferred.notifyWith(...) }
			// deferred.resolve = function() { deferred.resolveWith(...) }
			// deferred.reject = function() { deferred.rejectWith(...) }
			deferred[ tuple[ 0 ] ] = function() {
				deferred[ tuple[ 0 ] + "With" ]( this === deferred ? undefined : this, arguments );
				return this;
			};
			// deferred.notifyWith = list.fireWith
			// deferred.resolveWith = list.fireWith
			// deferred.rejectWith = list.fireWith
			deferred[ tuple[ 0 ] + "With" ] = list.fireWith;
		} );
		// Make the deferred a promise
		promise.promise( deferred );
		// Call given func if any
		if ( func ) {
			func.call( deferred, deferred );
		}
		// All done!
		return deferred;
	},
	// Deferred helper
	when: function( singleValue ) {
		var
			// count of uncompleted subordinates
			remaining = arguments.length,
			// count of unprocessed arguments
			i = remaining,
			// subordinate fulfillment data
			resolveContexts = Array( i ),
			resolveValues = slice.call( arguments ),
			// the master Deferred
			master = jQuery.Deferred(),
			// subordinate callback factory
			updateFunc = function( i ) {
				return function( value ) {
					resolveContexts[ i ] = this;
					resolveValues[ i ] = arguments.length > 1 ? slice.call( arguments ) : value;
					if ( !( --remaining ) ) {
						master.resolveWith( resolveContexts, resolveValues );
					}
				};
			};
		// Single- and empty arguments are adopted like Promise.resolve
		if ( remaining <= 1 ) {
			adoptValue( singleValue, master.done( updateFunc( i ) ).resolve, master.reject,
				!remaining );
			// Use .then() to unwrap secondary thenables (cf. gh-3000)
			if ( master.state() === "pending" ||
				isFunction( resolveValues[ i ] && resolveValues[ i ].then ) ) {
				return master.then();
			}
		}
		// Multiple arguments are aggregated like Promise.all array elements
		while ( i-- ) {
			adoptValue( resolveValues[ i ], updateFunc( i ), master.reject );
		}
		return master.promise();
	}
} );
// These usually indicate a programmer mistake during development,
// warn about them ASAP rather than swallowing them by default.
var rerrorNames = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;
jQuery.Deferred.exceptionHook = function( error, stack ) {
	// Support: IE 8 - 9 only
	// Console exists when dev tools are open, which can happen at any time
	if ( window.console && window.console.warn && error && rerrorNames.test( error.name ) ) {
		window.console.warn( "jQuery.Deferred exception: " + error.message, error.stack, stack );
	}
};
jQuery.readyException = function( error ) {
	window.setTimeout( function() {
		throw error;
	} );
};
// The deferred used on DOM ready
var readyList = jQuery.Deferred();
jQuery.fn.ready = function( fn ) {
	readyList
		.then( fn )
		// Wrap jQuery.readyException in a function so that the lookup
		// happens at the time of error handling instead of callback
		// registration.
		.catch( function( error ) {
			jQuery.readyException( error );
		} );
	return this;
};
jQuery.extend( {
	// Is the DOM ready to be used? Set to true once it occurs.
	isReady: false,
	// A counter to track how many items to wait for before
	// the ready event fires. See #6781
	readyWait: 1,
	// Handle when the DOM is ready
	ready: function( wait ) {
		// Abort if there are pending holds or we're already ready
		if ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {
			return;
		}
		// Remember that the DOM is ready
		jQuery.isReady = true;
		// If a normal DOM Ready event fired, decrement, and wait if need be
		if ( wait !== true && --jQuery.readyWait > 0 ) {
			return;
		}
		// If there are functions bound, to execute
		readyList.resolveWith( document, [ jQuery ] );
	}
} );
jQuery.ready.then = readyList.then;
// The ready event handler and self cleanup method
function completed() {
	document.removeEventListener( "DOMContentLoaded", completed );
	window.removeEventListener( "load", completed );
	jQuery.ready();
}
// Catch cases where $(document).ready() is called
// after the browser event has already occurred.
// Support: IE <=9 - 10 only
// Older IE sometimes signals "interactive" too soon
if ( document.readyState === "complete" ||
	( document.readyState !== "loading" && !document.documentElement.doScroll ) ) {
	// Handle it asynchronously to allow scripts the opportunity to delay ready
	window.setTimeout( jQuery.ready );
} else {
	// Use the handy event callback
	document.addEventListener( "DOMContentLoaded", completed );
	// A fallback to window.onload, that will always work
	window.addEventListener( "load", completed );
}
// Multifunctional method to get and set values of a collection
// The value/s can optionally be executed if it's a function
var access = function( elems, fn, key, value, chainable, emptyGet, raw ) {
	var i = 0,
		len = elems.length,
		bulk = key == null;
	// Sets many values
	if ( toType( key ) === "object" ) {
		chainable = true;
		for ( i in key ) {
			access( elems, fn, i, key[ i ], true, emptyGet, raw );
		}
	// Sets one value
	} else if ( value !== undefined ) {
		chainable = true;
		if ( !isFunction( value ) ) {
			raw = true;
		}
		if ( bulk ) {
			// Bulk operations run against the entire set
			if ( raw ) {
				fn.call( elems, value );
				fn = null;
			// ...except when executing function values
			} else {
				bulk = fn;
				fn = function( elem, key, value ) {
					return bulk.call( jQuery( elem ), value );
				};
			}
		}
		if ( fn ) {
			for ( ; i < len; i++ ) {
				fn(
					elems[ i ], key, raw ?
					value :
					value.call( elems[ i ], i, fn( elems[ i ], key ) )
				);
			}
		}
	}
	if ( chainable ) {
		return elems;
	}
	// Gets
	if ( bulk ) {
		return fn.call( elems );
	}
	return len ? fn( elems[ 0 ], key ) : emptyGet;
};
// Matches dashed string for camelizing
var rmsPrefix = /^-ms-/,
	rdashAlpha = /-([a-z])/g;
// Used by camelCase as callback to replace()
function fcamelCase( all, letter ) {
	return letter.toUpperCase();
}
// Convert dashed to camelCase; used by the css and data modules
// Support: IE <=9 - 11, Edge 12 - 15
// Microsoft forgot to hump their vendor prefix (#9572)
function camelCase( string ) {
	return string.replace( rmsPrefix, "ms-" ).replace( rdashAlpha, fcamelCase );
}
var acceptData = function( owner ) {
	// Accepts only:
	//  - Node
	//    - Node.ELEMENT_NODE
	//    - Node.DOCUMENT_NODE
	//  - Object
	//    - Any
	return owner.nodeType === 1 || owner.nodeType === 9 || !( +owner.nodeType );
};
function Data() {
	this.expando = jQuery.expando + Data.uid++;
}
Data.uid = 1;
Data.prototype = {
	cache: function( owner ) {
		// Check if the owner object already has a cache
		var value = owner[ this.expando ];
		// If not, create one
		if ( !value ) {
			value = {};
			// We can accept data for non-element nodes in modern browsers,
			// but we should not, see #8335.
			// Always return an empty object.
			if ( acceptData( owner ) ) {
				// If it is a node unlikely to be stringify-ed or looped over
				// use plain assignment
				if ( owner.nodeType ) {
					owner[ this.expando ] = value;
				// Otherwise secure it in a non-enumerable property
				// configurable must be true to allow the property to be
				// deleted when data is removed
				} else {
					Object.defineProperty( owner, this.expando, {
						value: value,
						configurable: true
					} );
				}
			}
		}
		return value;
	},
	set: function( owner, data, value ) {
		var prop,
			cache = this.cache( owner );
		// Handle: [ owner, key, value ] args
		// Always use camelCase key (gh-2257)
		if ( typeof data === "string" ) {
			cache[ camelCase( data ) ] = value;
		// Handle: [ owner, { properties } ] args
		} else {
			// Copy the properties one-by-one to the cache object
			for ( prop in data ) {
				cache[ camelCase( prop ) ] = data[ prop ];
			}
		}
		return cache;
	},
	get: function( owner, key ) {
		return key === undefined ?
			this.cache( owner ) :
			// Always use camelCase key (gh-2257)
			owner[ this.expando ] && owner[ this.expando ][ camelCase( key ) ];
	},
	access: function( owner, key, value ) {
		// In cases where either:
		//
		//   1. No key was specified
		//   2. A string key was specified, but no value provided
		//
		// Take the "read" path and allow the get method to determine
		// which value to return, respectively either:
		//
		//   1. The entire cache object
		//   2. The data stored at the key
		//
		if ( key === undefined ||
				( ( key && typeof key === "string" ) && value === undefined ) ) {
			return this.get( owner, key );
		}
		// When the key is not a string, or both a key and value
		// are specified, set or extend (existing objects) with either:
		//
		//   1. An object of properties
		//   2. A key and value
		//
		this.set( owner, key, value );
		// Since the "set" path can have two possible entry points
		// return the expected data based on which path was taken[*]
		return value !== undefined ? value : key;
	},
	remove: function( owner, key ) {
		var i,
			cache = owner[ this.expando ];
		if ( cache === undefined ) {
			return;
		}
		if ( key !== undefined ) {
			// Support array or space separated string of keys
			if ( Array.isArray( key ) ) {
				// If key is an array of keys...
				// We always set camelCase keys, so remove that.
				key = key.map( camelCase );
			} else {
				key = camelCase( key );
				// If a key with the spaces exists, use it.
				// Otherwise, create an array by matching non-whitespace
				key = key in cache ?
					[ key ] :
					( key.match( rnothtmlwhite ) || [] );
			}
			i = key.length;
			while ( i-- ) {
				delete cache[ key[ i ] ];
			}
		}
		// Remove the expando if there's no more data
		if ( key === undefined || jQuery.isEmptyObject( cache ) ) {
			// Support: Chrome <=35 - 45
			// Webkit & Blink performance suffers when deleting properties
			// from DOM nodes, so set to undefined instead
			// https://bugs.chromium.org/p/chromium/issues/detail?id=378607 (bug restricted)
			if ( owner.nodeType ) {
				owner[ this.expando ] = undefined;
			} else {
				delete owner[ this.expando ];
			}
		}
	},
	hasData: function( owner ) {
		var cache = owner[ this.expando ];
		return cache !== undefined && !jQuery.isEmptyObject( cache );
	}
};
var dataPriv = new Data();
var dataUser = new Data();
//	Implementation Summary
//
//	1. Enforce API surface and semantic compatibility with 1.9.x branch
//	2. Improve the module's maintainability by reducing the storage
//		paths to a single mechanism.
//	3. Use the same single mechanism to support "private" and "user" data.
//	4. _Never_ expose "private" data to user code (TODO: Drop _data, _removeData)
//	5. Avoid exposing implementation details on user objects (eg. expando properties)
//	6. Provide a clear path for implementation upgrade to WeakMap in 2014
var rbrace = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,
	rmultiDash = /[A-Z]/g;
function getData( data ) {
	if ( data === "true" ) {
		return true;
	}
	if ( data === "false" ) {
		return false;
	}
	if ( data === "null" ) {
		return null;
	}
	// Only convert to a number if it doesn't change the string
	if ( data === +data + "" ) {
		return +data;
	}
	if ( rbrace.test( data ) ) {
		return JSON.parse( data );
	}
	return data;
}
function dataAttr( elem, key, data ) {
	var name;
	// If nothing was found internally, try to fetch any
	// data from the HTML5 data-* attribute
	if ( data === undefined && elem.nodeType === 1 ) {
		name = "data-" + key.replace( rmultiDash, "-$&" ).toLowerCase();
		data = elem.getAttribute( name );
		if ( typeof data === "string" ) {
			try {
				data = getData( data );
			} catch ( e ) {}
			// Make sure we set the data so it isn't changed later
			dataUser.set( elem, key, data );
		} else {
			data = undefined;
		}
	}
	return data;
}
jQuery.extend( {
	hasData: function( elem ) {
		return dataUser.hasData( elem ) || dataPriv.hasData( elem );
	},
	data: function( elem, name, data ) {
		return dataUser.access( elem, name, data );
	},
	removeData: function( elem, name ) {
		dataUser.remove( elem, name );
	},
	// TODO: Now that all calls to _data and _removeData have been replaced
	// with direct calls to dataPriv methods, these can be deprecated.
	_data: function( elem, name, data ) {
		return dataPriv.access( elem, name, data );
	},
	_removeData: function( elem, name ) {
		dataPriv.remove( elem, name );
	}
} );
jQuery.fn.extend( {
	data: function( key, value ) {
		var i, name, data,
			elem = this[ 0 ],
			attrs = elem && elem.attributes;
		// Gets all values
		if ( key === undefined ) {
			if ( this.length ) {
				data = dataUser.get( elem );
				if ( elem.nodeType === 1 && !dataPriv.get( elem, "hasDataAttrs" ) ) {
					i = attrs.length;
					while ( i-- ) {
						// Support: IE 11 only
						// The attrs elements can be null (#14894)
						if ( attrs[ i ] ) {
							name = attrs[ i ].name;
							if ( name.indexOf( "data-" ) === 0 ) {
								name = camelCase( name.slice( 5 ) );
								dataAttr( elem, name, data[ name ] );
							}
						}
					}
					dataPriv.set( elem, "hasDataAttrs", true );
				}
			}
			return data;
		}
		// Sets multiple values
		if ( typeof key === "object" ) {
			return this.each( function() {
				dataUser.set( this, key );
			} );
		}
		return access( this, function( value ) {
			var data;
			// The calling jQuery object (element matches) is not empty
			// (and therefore has an element appears at this[ 0 ]) and the
			// `value` parameter was not undefined. An empty jQuery object
			// will result in `undefined` for elem = this[ 0 ] which will
			// throw an exception if an attempt to read a data cache is made.
			if ( elem && value === undefined ) {
				// Attempt to get data from the cache
				// The key will always be camelCased in Data
				data = dataUser.get( elem, key );
				if ( data !== undefined ) {
					return data;
				}
				// Attempt to "discover" the data in
				// HTML5 custom data-* attrs
				data = dataAttr( elem, key );
				if ( data !== undefined ) {
					return data;
				}
				// We tried really hard, but the data doesn't exist.
				return;
			}
			// Set the data...
			this.each( function() {
				// We always store the camelCased key
				dataUser.set( this, key, value );
			} );
		}, null, value, arguments.length > 1, null, true );
	},
	removeData: function( key ) {
		return this.each( function() {
			dataUser.remove( this, key );
		} );
	}
} );
jQuery.extend( {
	queue: function( elem, type, data ) {
		var queue;
		if ( elem ) {
			type = ( type || "fx" ) + "queue";
			queue = dataPriv.get( elem, type );
			// Speed up dequeue by getting out quickly if this is just a lookup
			if ( data ) {
				if ( !queue || Array.isArray( data ) ) {
					queue = dataPriv.access( elem, type, jQuery.makeArray( data ) );
				} else {
					queue.push( data );
				}
			}
			return queue || [];
		}
	},
	dequeue: function( elem, type ) {
		type = type || "fx";
		var queue = jQuery.queue( elem, type ),
			startLength = queue.length,
			fn = queue.shift(),
			hooks = jQuery._queueHooks( elem, type ),
			next = function() {
				jQuery.dequeue( elem, type );
			};
		// If the fx queue is dequeued, always remove the progress sentinel
		if ( fn === "inprogress" ) {
			fn = queue.shift();
			startLength--;
		}
		if ( fn ) {
			// Add a progress sentinel to prevent the fx queue from being
			// automatically dequeued
			if ( type === "fx" ) {
				queue.unshift( "inprogress" );
			}
			// Clear up the last queue stop function
			delete hooks.stop;
			fn.call( elem, next, hooks );
		}
		if ( !startLength && hooks ) {
			hooks.empty.fire();
		}
	},
	// Not public - generate a queueHooks object, or return the current one
	_queueHooks: function( elem, type ) {
		var key = type + "queueHooks";
		return dataPriv.get( elem, key ) || dataPriv.access( elem, key, {
			empty: jQuery.Callbacks( "once memory" ).add( function() {
				dataPriv.remove( elem, [ type + "queue", key ] );
			} )
		} );
	}
} );
jQuery.fn.extend( {
	queue: function( type, data ) {
		var setter = 2;
		if ( typeof type !== "string" ) {
			data = type;
			type = "fx";
			setter--;
		}
		if ( arguments.length < setter ) {
			return jQuery.queue( this[ 0 ], type );
		}
		return data === undefined ?
			this :
			this.each( function() {
				var queue = jQuery.queue( this, type, data );
				// Ensure a hooks for this queue
				jQuery._queueHooks( this, type );
				if ( type === "fx" && queue[ 0 ] !== "inprogress" ) {
					jQuery.dequeue( this, type );
				}
			} );
	},
	dequeue: function( type ) {
		return this.each( function() {
			jQuery.dequeue( this, type );
		} );
	},
	clearQueue: function( type ) {
		return this.queue( type || "fx", [] );
	},
	// Get a promise resolved when queues of a certain type
	// are emptied (fx is the type by default)
	promise: function( type, obj ) {
		var tmp,
			count = 1,
			defer = jQuery.Deferred(),
			elements = this,
			i = this.length,
			resolve = function() {
				if ( !( --count ) ) {
					defer.resolveWith( elements, [ elements ] );
				}
			};
		if ( typeof type !== "string" ) {
			obj = type;
			type = undefined;
		}
		type = type || "fx";
		while ( i-- ) {
			tmp = dataPriv.get( elements[ i ], type + "queueHooks" );
			if ( tmp && tmp.empty ) {
				count++;
				tmp.empty.add( resolve );
			}
		}
		resolve();
		return defer.promise( obj );
	}
} );
var pnum = ( /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/ ).source;
var rcssNum = new RegExp( "^(?:([+-])=|)(" + pnum + ")([a-z%]*)$", "i" );
var cssExpand = [ "Top", "Right", "Bottom", "Left" ];
var isHiddenWithinTree = function( elem, el ) {
		// isHiddenWithinTree might be called from jQuery#filter function;
		// in that case, element will be second argument
		elem = el || elem;
		// Inline style trumps all
		return elem.style.display === "none" ||
			elem.style.display === "" &&
			// Otherwise, check computed style
			// Support: Firefox <=43 - 45
			// Disconnected elements can have computed display: none, so first confirm that elem is
			// in the document.
			jQuery.contains( elem.ownerDocument, elem ) &&
			jQuery.css( elem, "display" ) === "none";
	};
var swap = function( elem, options, callback, args ) {
	var ret, name,
		old = {};
	// Remember the old values, and insert the new ones
	for ( name in options ) {
		old[ name ] = elem.style[ name ];
		elem.style[ name ] = options[ name ];
	}
	ret = callback.apply( elem, args || [] );
	// Revert the old values
	for ( name in options ) {
		elem.style[ name ] = old[ name ];
	}
	return ret;
};
function adjustCSS( elem, prop, valueParts, tween ) {
	var adjusted, scale,
		maxIterations = 20,
		currentValue = tween ?
			function() {
				return tween.cur();
			} :
			function() {
				return jQuery.css( elem, prop, "" );
			},
		initial = currentValue(),
		unit = valueParts && valueParts[ 3 ] || ( jQuery.cssNumber[ prop ] ? "" : "px" ),
		// Starting value computation is required for potential unit mismatches
		initialInUnit = ( jQuery.cssNumber[ prop ] || unit !== "px" && +initial ) &&
			rcssNum.exec( jQuery.css( elem, prop ) );
	if ( initialInUnit && initialInUnit[ 3 ] !== unit ) {
		// Support: Firefox <=54
		// Halve the iteration target value to prevent interference from CSS upper bounds (gh-2144)
		initial = initial / 2;
		// Trust units reported by jQuery.css
		unit = unit || initialInUnit[ 3 ];
		// Iteratively approximate from a nonzero starting point
		initialInUnit = +initial || 1;
		while ( maxIterations-- ) {
			// Evaluate and update our best guess (doubling guesses that zero out).
			// Finish if the scale equals or crosses 1 (making the old*new product non-positive).
			jQuery.style( elem, prop, initialInUnit + unit );
			if ( ( 1 - scale ) * ( 1 - ( scale = currentValue() / initial || 0.5 ) ) <= 0 ) {
				maxIterations = 0;
			}
			initialInUnit = initialInUnit / scale;
		}
		initialInUnit = initialInUnit * 2;
		jQuery.style( elem, prop, initialInUnit + unit );
		// Make sure we update the tween properties later on
		valueParts = valueParts || [];
	}
	if ( valueParts ) {
		initialInUnit = +initialInUnit || +initial || 0;
		// Apply relative offset (+=/-=) if specified
		adjusted = valueParts[ 1 ] ?
			initialInUnit + ( valueParts[ 1 ] + 1 ) * valueParts[ 2 ] :
			+valueParts[ 2 ];
		if ( tween ) {
			tween.unit = unit;
			tween.start = initialInUnit;
			tween.end = adjusted;
		}
	}
	return adjusted;
}
var defaultDisplayMap = {};
function getDefaultDisplay( elem ) {
	var temp,
		doc = elem.ownerDocument,
		nodeName = elem.nodeName,
		display = defaultDisplayMap[ nodeName ];
	if ( display ) {
		return display;
	}
	temp = doc.body.appendChild( doc.createElement( nodeName ) );
	display = jQuery.css( temp, "display" );
	temp.parentNode.removeChild( temp );
	if ( display === "none" ) {
		display = "block";
	}
	defaultDisplayMap[ nodeName ] = display;
	return display;
}
function showHide( elements, show ) {
	var display, elem,
		values = [],
		index = 0,
		length = elements.length;
	// Determine new display value for elements that need to change
	for ( ; index < length; index++ ) {
		elem = elements[ index ];
		if ( !elem.style ) {
			continue;
		}
		display = elem.style.display;
		if ( show ) {
			// Since we force visibility upon cascade-hidden elements, an immediate (and slow)
			// check is required in this first loop unless we have a nonempty display value (either
			// inline or about-to-be-restored)
			if ( display === "none" ) {
				values[ index ] = dataPriv.get( elem, "display" ) || null;
				if ( !values[ index ] ) {
					elem.style.display = "";
				}
			}
			if ( elem.style.display === "" && isHiddenWithinTree( elem ) ) {
				values[ index ] = getDefaultDisplay( elem );
			}
		} else {
			if ( display !== "none" ) {
				values[ index ] = "none";
				// Remember what we're overwriting
				dataPriv.set( elem, "display", display );
			}
		}
	}
	// Set the display of the elements in a second loop to avoid constant reflow
	for ( index = 0; index < length; index++ ) {
		if ( values[ index ] != null ) {
			elements[ index ].style.display = values[ index ];
		}
	}
	return elements;
}
jQuery.fn.extend( {
	show: function() {
		return showHide( this, true );
	},
	hide: function() {
		return showHide( this );
	},
	toggle: function( state ) {
		if ( typeof state === "boolean" ) {
			return state ? this.show() : this.hide();
		}
		return this.each( function() {
			if ( isHiddenWithinTree( this ) ) {
				jQuery( this ).show();
			} else {
				jQuery( this ).hide();
			}
		} );
	}
} );
var rcheckableType = ( /^(?:checkbox|radio)$/i );
var rtagName = ( /<([a-z][^\/\0>\x20\t\r\n\f]+)/i );
var rscriptType = ( /^$|^module$|\/(?:java|ecma)script/i );
// We have to close these tags to support XHTML (#13200)
var wrapMap = {
	// Support: IE <=9 only
	option: [ 1, "<select multiple='multiple'>", "</select>" ],
	// XHTML parsers do not magically insert elements in the
	// same way that tag soup parsers do. So we cannot shorten
	// this by omitting <tbody> or other required elements.
	thead: [ 1, "<table>", "</table>" ],
	col: [ 2, "<table><colgroup>", "</colgroup></table>" ],
	tr: [ 2, "<table><tbody>", "</tbody></table>" ],
	td: [ 3, "<table><tbody><tr>", "</tr></tbody></table>" ],
	_default: [ 0, "", "" ]
};
// Support: IE <=9 only
wrapMap.optgroup = wrapMap.option;
wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;
wrapMap.th = wrapMap.td;
function getAll( context, tag ) {
	// Support: IE <=9 - 11 only
	// Use typeof to avoid zero-argument method invocation on host objects (#15151)
	var ret;
	if ( typeof context.getElementsByTagName !== "undefined" ) {
		ret = context.getElementsByTagName( tag || "*" );
	} else if ( typeof context.querySelectorAll !== "undefined" ) {
		ret = context.querySelectorAll( tag || "*" );
	} else {
		ret = [];
	}
	if ( tag === undefined || tag && nodeName( context, tag ) ) {
		return jQuery.merge( [ context ], ret );
	}
	return ret;
}
// Mark scripts as having already been evaluated
function setGlobalEval( elems, refElements ) {
	var i = 0,
		l = elems.length;
	for ( ; i < l; i++ ) {
		dataPriv.set(
			elems[ i ],
			"globalEval",
			!refElements || dataPriv.get( refElements[ i ], "globalEval" )
		);
	}
}
var rhtml = /<|&#?\w+;/;
function buildFragment( elems, context, scripts, selection, ignored ) {
	var elem, tmp, tag, wrap, contains, j,
		fragment = context.createDocumentFragment(),
		nodes = [],
		i = 0,
		l = elems.length;
	for ( ; i < l; i++ ) {
		elem = elems[ i ];
		if ( elem || elem === 0 ) {
			// Add nodes directly
			if ( toType( elem ) === "object" ) {
				// Support: Android <=4.0 only, PhantomJS 1 only
				// push.apply(_, arraylike) throws on ancient WebKit
				jQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );
			// Convert non-html into a text node
			} else if ( !rhtml.test( elem ) ) {
				nodes.push( context.createTextNode( elem ) );
			// Convert html into DOM nodes
			} else {
				tmp = tmp || fragment.appendChild( context.createElement( "div" ) );
				// Deserialize a standard representation
				tag = ( rtagName.exec( elem ) || [ "", "" ] )[ 1 ].toLowerCase();
				wrap = wrapMap[ tag ] || wrapMap._default;
				tmp.innerHTML = wrap[ 1 ] + jQuery.htmlPrefilter( elem ) + wrap[ 2 ];
				// Descend through wrappers to the right content
				j = wrap[ 0 ];
				while ( j-- ) {
					tmp = tmp.lastChild;
				}
				// Support: Android <=4.0 only, PhantomJS 1 only
				// push.apply(_, arraylike) throws on ancient WebKit
				jQuery.merge( nodes, tmp.childNodes );
				// Remember the top-level container
				tmp = fragment.firstChild;
				// Ensure the created nodes are orphaned (#12392)
				tmp.textContent = "";
			}
		}
	}
	// Remove wrapper from fragment
	fragment.textContent = "";
	i = 0;
	while ( ( elem = nodes[ i++ ] ) ) {
		// Skip elements already in the context collection (trac-4087)
		if ( selection && jQuery.inArray( elem, selection ) > -1 ) {
			if ( ignored ) {
				ignored.push( elem );
			}
			continue;
		}
		contains = jQuery.contains( elem.ownerDocument, elem );
		// Append to fragment
		tmp = getAll( fragment.appendChild( elem ), "script" );
		// Preserve script evaluation history
		if ( contains ) {
			setGlobalEval( tmp );
		}
		// Capture executables
		if ( scripts ) {
			j = 0;
			while ( ( elem = tmp[ j++ ] ) ) {
				if ( rscriptType.test( elem.type || "" ) ) {
					scripts.push( elem );
				}
			}
		}
	}
	return fragment;
}
( function() {
	var fragment = document.createDocumentFragment(),
		div = fragment.appendChild( document.createElement( "div" ) ),
		input = document.createElement( "input" );
	// Support: Android 4.0 - 4.3 only
	// Check state lost if the name is set (#11217)
	// Support: Windows Web Apps (WWA)
	// `name` and `type` must use .setAttribute for WWA (#14901)
	input.setAttribute( "type", "radio" );
	input.setAttribute( "checked", "checked" );
	input.setAttribute( "name", "t" );
	div.appendChild( input );
	// Support: Android <=4.1 only
	// Older WebKit doesn't clone checked state correctly in fragments
	support.checkClone = div.cloneNode( true ).cloneNode( true ).lastChild.checked;
	// Support: IE <=11 only
	// Make sure textarea (and checkbox) defaultValue is properly cloned
	div.innerHTML = "<textarea>x</textarea>";
	support.noCloneChecked = !!div.cloneNode( true ).lastChild.defaultValue;
} )();
var documentElement = document.documentElement;
var
	rkeyEvent = /^key/,
	rmouseEvent = /^(?:mouse|pointer|contextmenu|drag|drop)|click/,
	rtypenamespace = /^([^.]*)(?:\.(.+)|)/;
function returnTrue() {
	return true;
}
function returnFalse() {
	return false;
}
// Support: IE <=9 only
// See #13393 for more info
function safeActiveElement() {
	try {
		return document.activeElement;
	} catch ( err ) { }
}
function on( elem, types, selector, data, fn, one ) {
	var origFn, type;
	// Types can be a map of types/handlers
	if ( typeof types === "object" ) {
		// ( types-Object, selector, data )
		if ( typeof selector !== "string" ) {
			// ( types-Object, data )
			data = data || selector;
			selector = undefined;
		}
		for ( type in types ) {
			on( elem, type, selector, data, types[ type ], one );
		}
		return elem;
	}
	if ( data == null && fn == null ) {
		// ( types, fn )
		fn = selector;
		data = selector = undefined;
	} else if ( fn == null ) {
		if ( typeof selector === "string" ) {
			// ( types, selector, fn )
			fn = data;
			data = undefined;
		} else {
			// ( types, data, fn )
			fn = data;
			data = selector;
			selector = undefined;
		}
	}
	if ( fn === false ) {
		fn = returnFalse;
	} else if ( !fn ) {
		return elem;
	}
	if ( one === 1 ) {
		origFn = fn;
		fn = function( event ) {
			// Can use an empty set, since event contains the info
			jQuery().off( event );
			return origFn.apply( this, arguments );
		};
		// Use same guid so caller can remove using origFn
		fn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );
	}
	return elem.each( function() {
		jQuery.event.add( this, types, fn, data, selector );
	} );
}
/*
 * Helper functions for managing events -- not part of the public interface.
 * Props to Dean Edwards' addEvent library for many of the ideas.
 */
jQuery.event = {
	global: {},
	add: function( elem, types, handler, data, selector ) {
		var handleObjIn, eventHandle, tmp,
			events, t, handleObj,
			special, handlers, type, namespaces, origType,
			elemData = dataPriv.get( elem );
		// Don't attach events to noData or text/comment nodes (but allow plain objects)
		if ( !elemData ) {
			return;
		}
		// Caller can pass in an object of custom data in lieu of the handler
		if ( handler.handler ) {
			handleObjIn = handler;
			handler = handleObjIn.handler;
			selector = handleObjIn.selector;
		}
		// Ensure that invalid selectors throw exceptions at attach time
		// Evaluate against documentElement in case elem is a non-element node (e.g., document)
		if ( selector ) {
			jQuery.find.matchesSelector( documentElement, selector );
		}
		// Make sure that the handler has a unique ID, used to find/remove it later
		if ( !handler.guid ) {
			handler.guid = jQuery.guid++;
		}
		// Init the element's event structure and main handler, if this is the first
		if ( !( events = elemData.events ) ) {
			events = elemData.events = {};
		}
		if ( !( eventHandle = elemData.handle ) ) {
			eventHandle = elemData.handle = function( e ) {
				// Discard the second event of a jQuery.event.trigger() and
				// when an event is called after a page has unloaded
				return typeof jQuery !== "undefined" && jQuery.event.triggered !== e.type ?
					jQuery.event.dispatch.apply( elem, arguments ) : undefined;
			};
		}
		// Handle multiple events separated by a space
		types = ( types || "" ).match( rnothtmlwhite ) || [ "" ];
		t = types.length;
		while ( t-- ) {
			tmp = rtypenamespace.exec( types[ t ] ) || [];
			type = origType = tmp[ 1 ];
			namespaces = ( tmp[ 2 ] || "" ).split( "." ).sort();
			// There *must* be a type, no attaching namespace-only handlers
			if ( !type ) {
				continue;
			}
			// If event changes its type, use the special event handlers for the changed type
			special = jQuery.event.special[ type ] || {};
			// If selector defined, determine special event api type, otherwise given type
			type = ( selector ? special.delegateType : special.bindType ) || type;
			// Update special based on newly reset type
			special = jQuery.event.special[ type ] || {};
			// handleObj is passed to all event handlers
			handleObj = jQuery.extend( {
				type: type,
				origType: origType,
				data: data,
				handler: handler,
				guid: handler.guid,
				selector: selector,
				needsContext: selector && jQuery.expr.match.needsContext.test( selector ),
				namespace: namespaces.join( "." )
			}, handleObjIn );
			// Init the event handler queue if we're the first
			if ( !( handlers = events[ type ] ) ) {
				handlers = events[ type ] = [];
				handlers.delegateCount = 0;
				// Only use addEventListener if the special events handler returns false
				if ( !special.setup ||
					special.setup.call( elem, data, namespaces, eventHandle ) === false ) {
					if ( elem.addEventListener ) {
						elem.addEventListener( type, eventHandle );
					}
				}
			}
			if ( special.add ) {
				special.add.call( elem, handleObj );
				if ( !handleObj.handler.guid ) {
					handleObj.handler.guid = handler.guid;
				}
			}
			// Add to the element's handler list, delegates in front
			if ( selector ) {
				handlers.splice( handlers.delegateCount++, 0, handleObj );
			} else {
				handlers.push( handleObj );
			}
			// Keep track of which events have ever been used, for event optimization
			jQuery.event.global[ type ] = true;
		}
	},
	// Detach an event or set of events from an element
	remove: function( elem, types, handler, selector, mappedTypes ) {
		var j, origCount, tmp,
			events, t, handleObj,
			special, handlers, type, namespaces, origType,
			elemData = dataPriv.hasData( elem ) && dataPriv.get( elem );
		if ( !elemData || !( events = elemData.events ) ) {
			return;
		}
		// Once for each type.namespace in types; type may be omitted
		types = ( types || "" ).match( rnothtmlwhite ) || [ "" ];
		t = types.length;
		while ( t-- ) {
			tmp = rtypenamespace.exec( types[ t ] ) || [];
			type = origType = tmp[ 1 ];
			namespaces = ( tmp[ 2 ] || "" ).split( "." ).sort();
			// Unbind all events (on this namespace, if provided) for the element
			if ( !type ) {
				for ( type in events ) {
					jQuery.event.remove( elem, type + types[ t ], handler, selector, true );
				}
				continue;
			}
			special = jQuery.event.special[ type ] || {};
			type = ( selector ? special.delegateType : special.bindType ) || type;
			handlers = events[ type ] || [];
			tmp = tmp[ 2 ] &&
				new RegExp( "(^|\\.)" + namespaces.join( "\\.(?:.*\\.|)" ) + "(\\.|$)" );
			// Remove matching events
			origCount = j = handlers.length;
			while ( j-- ) {
				handleObj = handlers[ j ];
				if ( ( mappedTypes || origType === handleObj.origType ) &&
					( !handler || handler.guid === handleObj.guid ) &&
					( !tmp || tmp.test( handleObj.namespace ) ) &&
					( !selector || selector === handleObj.selector ||
						selector === "**" && handleObj.selector ) ) {
					handlers.splice( j, 1 );
					if ( handleObj.selector ) {
						handlers.delegateCount--;
					}
					if ( special.remove ) {
						special.remove.call( elem, handleObj );
					}
				}
			}
			// Remove generic event handler if we removed something and no more handlers exist
			// (avoids potential for endless recursion during removal of special event handlers)
			if ( origCount && !handlers.length ) {
				if ( !special.teardown ||
					special.teardown.call( elem, namespaces, elemData.handle ) === false ) {
					jQuery.removeEvent( elem, type, elemData.handle );
				}
				delete events[ type ];
			}
		}
		// Remove data and the expando if it's no longer used
		if ( jQuery.isEmptyObject( events ) ) {
			dataPriv.remove( elem, "handle events" );
		}
	},
	dispatch: function( nativeEvent ) {
		// Make a writable jQuery.Event from the native event object
		var event = jQuery.event.fix( nativeEvent );
		var i, j, ret, matched, handleObj, handlerQueue,
			args = new Array( arguments.length ),
			handlers = ( dataPriv.get( this, "events" ) || {} )[ event.type ] || [],
			special = jQuery.event.special[ event.type ] || {};
		// Use the fix-ed jQuery.Event rather than the (read-only) native event
		args[ 0 ] = event;
		for ( i = 1; i < arguments.length; i++ ) {
			args[ i ] = arguments[ i ];
		}
		event.delegateTarget = this;
		// Call the preDispatch hook for the mapped type, and let it bail if desired
		if ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {
			return;
		}
		// Determine handlers
		handlerQueue = jQuery.event.handlers.call( this, event, handlers );
		// Run delegates first; they may want to stop propagation beneath us
		i = 0;
		while ( ( matched = handlerQueue[ i++ ] ) && !event.isPropagationStopped() ) {
			event.currentTarget = matched.elem;
			j = 0;
			while ( ( handleObj = matched.handlers[ j++ ] ) &&
				!event.isImmediatePropagationStopped() ) {
				// Triggered event must either 1) have no namespace, or 2) have namespace(s)
				// a subset or equal to those in the bound event (both can have no namespace).
				if ( !event.rnamespace || event.rnamespace.test( handleObj.namespace ) ) {
					event.handleObj = handleObj;
					event.data = handleObj.data;
					ret = ( ( jQuery.event.special[ handleObj.origType ] || {} ).handle ||
						handleObj.handler ).apply( matched.elem, args );
					if ( ret !== undefined ) {
						if ( ( event.result = ret ) === false ) {
							event.preventDefault();
							event.stopPropagation();
						}
					}
				}
			}
		}
		// Call the postDispatch hook for the mapped type
		if ( special.postDispatch ) {
			special.postDispatch.call( this, event );
		}
		return event.result;
	},
	handlers: function( event, handlers ) {
		var i, handleObj, sel, matchedHandlers, matchedSelectors,
			handlerQueue = [],
			delegateCount = handlers.delegateCount,
			cur = event.target;
		// Find delegate handlers
		if ( delegateCount &&
			// Support: IE <=9
			// Black-hole SVG <use> instance trees (trac-13180)
			cur.nodeType &&
			// Support: Firefox <=42
			// Suppress spec-violating clicks indicating a non-primary pointer button (trac-3861)
			// https://www.w3.org/TR/DOM-Level-3-Events/#event-type-click
			// Support: IE 11 only
			// ...but not arrow key "clicks" of radio inputs, which can have `button` -1 (gh-2343)
			!( event.type === "click" && event.button >= 1 ) ) {
			for ( ; cur !== this; cur = cur.parentNode || this ) {
				// Don't check non-elements (#13208)
				// Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)
				if ( cur.nodeType === 1 && !( event.type === "click" && cur.disabled === true ) ) {
					matchedHandlers = [];
					matchedSelectors = {};
					for ( i = 0; i < delegateCount; i++ ) {
						handleObj = handlers[ i ];
						// Don't conflict with Object.prototype properties (#13203)
						sel = handleObj.selector + " ";
						if ( matchedSelectors[ sel ] === undefined ) {
							matchedSelectors[ sel ] = handleObj.needsContext ?
								jQuery( sel, this ).index( cur ) > -1 :
								jQuery.find( sel, this, null, [ cur ] ).length;
						}
						if ( matchedSelectors[ sel ] ) {
							matchedHandlers.push( handleObj );
						}
					}
					if ( matchedHandlers.length ) {
						handlerQueue.push( { elem: cur, handlers: matchedHandlers } );
					}
				}
			}
		}
		// Add the remaining (directly-bound) handlers
		cur = this;
		if ( delegateCount < handlers.length ) {
			handlerQueue.push( { elem: cur, handlers: handlers.slice( delegateCount ) } );
		}
		return handlerQueue;
	},
	addProp: function( name, hook ) {
		Object.defineProperty( jQuery.Event.prototype, name, {
			enumerable: true,
			configurable: true,
			get: isFunction( hook ) ?
				function() {
					if ( this.originalEvent ) {
							return hook( this.originalEvent );
					}
				} :
				function() {
					if ( this.originalEvent ) {
							return this.originalEvent[ name ];
					}
				},
			set: function( value ) {
				Object.defineProperty( this, name, {
					enumerable: true,
					configurable: true,
					writable: true,
					value: value
				} );
			}
		} );
	},
	fix: function( originalEvent ) {
		return originalEvent[ jQuery.expando ] ?
			originalEvent :
			new jQuery.Event( originalEvent );
	},
	special: {
		load: {
			// Prevent triggered image.load events from bubbling to window.load
			noBubble: true
		},
		focus: {
			// Fire native event if possible so blur/focus sequence is correct
			trigger: function() {
				if ( this !== safeActiveElement() && this.focus ) {
					this.focus();
					return false;
				}
			},
			delegateType: "focusin"
		},
		blur: {
			trigger: function() {
				if ( this === safeActiveElement() && this.blur ) {
					this.blur();
					return false;
				}
			},
			delegateType: "focusout"
		},
		click: {
			// For checkbox, fire native event so checked state will be right
			trigger: function() {
				if ( this.type === "checkbox" && this.click && nodeName( this, "input" ) ) {
					this.click();
					return false;
				}
			},
			// For cross-browser consistency, don't fire native .click() on links
			_default: function( event ) {
				return nodeName( event.target, "a" );
			}
		},
		beforeunload: {
			postDispatch: function( event ) {
				// Support: Firefox 20+
				// Firefox doesn't alert if the returnValue field is not set.
				if ( event.result !== undefined && event.originalEvent ) {
					event.originalEvent.returnValue = event.result;
				}
			}
		}
	}
};
jQuery.removeEvent = function( elem, type, handle ) {
	// This "if" is needed for plain objects
	if ( elem.removeEventListener ) {
		elem.removeEventListener( type, handle );
	}
};
jQuery.Event = function( src, props ) {
	// Allow instantiation without the 'new' keyword
	if ( !( this instanceof jQuery.Event ) ) {
		return new jQuery.Event( src, props );
	}
	// Event object
	if ( src && src.type ) {
		this.originalEvent = src;
		this.type = src.type;
		// Events bubbling up the document may have been marked as prevented
		// by a handler lower down the tree; reflect the correct value.
		this.isDefaultPrevented = src.defaultPrevented ||
				src.defaultPrevented === undefined &&
				// Support: Android <=2.3 only
				src.returnValue === false ?
			returnTrue :
			returnFalse;
		// Create target properties
		// Support: Safari <=6 - 7 only
		// Target should not be a text node (#504, #13143)
		this.target = ( src.target && src.target.nodeType === 3 ) ?
			src.target.parentNode :
			src.target;
		this.currentTarget = src.currentTarget;
		this.relatedTarget = src.relatedTarget;
	// Event type
	} else {
		this.type = src;
	}
	// Put explicitly provided properties onto the event object
	if ( props ) {
		jQuery.extend( this, props );
	}
	// Create a timestamp if incoming event doesn't have one
	this.timeStamp = src && src.timeStamp || Date.now();
	// Mark it as fixed
	this[ jQuery.expando ] = true;
};
// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding
// https://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html
jQuery.Event.prototype = {
	constructor: jQuery.Event,
	isDefaultPrevented: returnFalse,
	isPropagationStopped: returnFalse,
	isImmediatePropagationStopped: returnFalse,
	isSimulated: false,
	preventDefault: function() {
		var e = this.originalEvent;
		this.isDefaultPrevented = returnTrue;
		if ( e && !this.isSimulated ) {
			e.preventDefault();
		}
	},
	stopPropagation: function() {
		var e = this.originalEvent;
		this.isPropagationStopped = returnTrue;
		if ( e && !this.isSimulated ) {
			e.stopPropagation();
		}
	},
	stopImmediatePropagation: function() {
		var e = this.originalEvent;
		this.isImmediatePropagationStopped = returnTrue;
		if ( e && !this.isSimulated ) {
			e.stopImmediatePropagation();
		}
		this.stopPropagation();
	}
};
// Includes all common event props including KeyEvent and MouseEvent specific props
jQuery.each( {
	altKey: true,
	bubbles: true,
	cancelable: true,
	changedTouches: true,
	ctrlKey: true,
	detail: true,
	eventPhase: true,
	metaKey: true,
	pageX: true,
	pageY: true,
	shiftKey: true,
	view: true,
	"char": true,
	charCode: true,
	key: true,
	keyCode: true,
	button: true,
	buttons: true,
	clientX: true,
	clientY: true,
	offsetX: true,
	offsetY: true,
	pointerId: true,
	pointerType: true,
	screenX: true,
	screenY: true,
	targetTouches: true,
	toElement: true,
	touches: true,
	which: function( event ) {
		var button = event.button;
		// Add which for key events
		if ( event.which == null && rkeyEvent.test( event.type ) ) {
			return event.charCode != null ? event.charCode : event.keyCode;
		}
		// Add which for click: 1 === left; 2 === middle; 3 === right
		if ( !event.which && button !== undefined && rmouseEvent.test( event.type ) ) {
			if ( button & 1 ) {
				return 1;
			}
			if ( button & 2 ) {
				return 3;
			}
			if ( button & 4 ) {
				return 2;
			}
			return 0;
		}
		return event.which;
	}
}, jQuery.event.addProp );
// Create mouseenter/leave events using mouseover/out and event-time checks
// so that event delegation works in jQuery.
// Do the same for pointerenter/pointerleave and pointerover/pointerout
//
// Support: Safari 7 only
// Safari sends mouseenter too often; see:
// https://bugs.chromium.org/p/chromium/issues/detail?id=470258
// for the description of the bug (it existed in older Chrome versions as well).
jQuery.each( {
	mouseenter: "mouseover",
	mouseleave: "mouseout",
	pointerenter: "pointerover",
	pointerleave: "pointerout"
}, function( orig, fix ) {
	jQuery.event.special[ orig ] = {
		delegateType: fix,
		bindType: fix,
		handle: function( event ) {
			var ret,
				target = this,
				related = event.relatedTarget,
				handleObj = event.handleObj;
			// For mouseenter/leave call the handler if related is outside the target.
			// NB: No relatedTarget if the mouse left/entered the browser window
			if ( !related || ( related !== target && !jQuery.contains( target, related ) ) ) {
				event.type = handleObj.origType;
				ret = handleObj.handler.apply( this, arguments );
				event.type = fix;
			}
			return ret;
		}
	};
} );
jQuery.fn.extend( {
	on: function( types, selector, data, fn ) {
		return on( this, types, selector, data, fn );
	},
	one: function( types, selector, data, fn ) {
		return on( this, types, selector, data, fn, 1 );
	},
	off: function( types, selector, fn ) {
		var handleObj, type;
		if ( types && types.preventDefault && types.handleObj ) {
			// ( event )  dispatched jQuery.Event
			handleObj = types.handleObj;
			jQuery( types.delegateTarget ).off(
				handleObj.namespace ?
					handleObj.origType + "." + handleObj.namespace :
					handleObj.origType,
				handleObj.selector,
				handleObj.handler
			);
			return this;
		}
		if ( typeof types === "object" ) {
			// ( types-object [, selector] )
			for ( type in types ) {
				this.off( type, selector, types[ type ] );
			}
			return this;
		}
		if ( selector === false || typeof selector === "function" ) {
			// ( types [, fn] )
			fn = selector;
			selector = undefined;
		}
		if ( fn === false ) {
			fn = returnFalse;
		}
		return this.each( function() {
			jQuery.event.remove( this, types, fn, selector );
		} );
	}
} );
var
	/* eslint-disable max-len */
	// See https://github.com/eslint/eslint/issues/3229
	rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\/\0>\x20\t\r\n\f]*)[^>]*)\/>/gi,
	/* eslint-enable */
	// Support: IE <=10 - 11, Edge 12 - 13 only
	// In IE/Edge using regex groups here causes severe slowdowns.
	// See https://connect.microsoft.com/IE/feedback/details/1736512/
	rnoInnerhtml = /<script|<style|<link/i,
	// checked="checked" or checked
	rchecked = /checked\s*(?:[^=]|=\s*.checked.)/i,
	rcleanScript = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;
// Prefer a tbody over its parent table for containing new rows
function manipulationTarget( elem, content ) {
	if ( nodeName( elem, "table" ) &&
		nodeName( content.nodeType !== 11 ? content : content.firstChild, "tr" ) ) {
		return jQuery( elem ).children( "tbody" )[ 0 ] || elem;
	}
	return elem;
}
// Replace/restore the type attribute of script elements for safe DOM manipulation
function disableScript( elem ) {
	elem.type = ( elem.getAttribute( "type" ) !== null ) + "/" + elem.type;
	return elem;
}
function restoreScript( elem ) {
	if ( ( elem.type || "" ).slice( 0, 5 ) === "true/" ) {
		elem.type = elem.type.slice( 5 );
	} else {
		elem.removeAttribute( "type" );
	}
	return elem;
}
function cloneCopyEvent( src, dest ) {
	var i, l, type, pdataOld, pdataCur, udataOld, udataCur, events;
	if ( dest.nodeType !== 1 ) {
		return;
	}
	// 1. Copy private data: events, handlers, etc.
	if ( dataPriv.hasData( src ) ) {
		pdataOld = dataPriv.access( src );
		pdataCur = dataPriv.set( dest, pdataOld );
		events = pdataOld.events;
		if ( events ) {
			delete pdataCur.handle;
			pdataCur.events = {};
			for ( type in events ) {
				for ( i = 0, l = events[ type ].length; i < l; i++ ) {
					jQuery.event.add( dest, type, events[ type ][ i ] );
				}
			}
		}
	}
	// 2. Copy user data
	if ( dataUser.hasData( src ) ) {
		udataOld = dataUser.access( src );
		udataCur = jQuery.extend( {}, udataOld );
		dataUser.set( dest, udataCur );
	}
}
// Fix IE bugs, see support tests
function fixInput( src, dest ) {
	var nodeName = dest.nodeName.toLowerCase();
	// Fails to persist the checked state of a cloned checkbox or radio button.
	if ( nodeName === "input" && rcheckableType.test( src.type ) ) {
		dest.checked = src.checked;
	// Fails to return the selected option to the default selected state when cloning options
	} else if ( nodeName === "input" || nodeName === "textarea" ) {
		dest.defaultValue = src.defaultValue;
	}
}
function domManip( collection, args, callback, ignored ) {
	// Flatten any nested arrays
	args = concat.apply( [], args );
	var fragment, first, scripts, hasScripts, node, doc,
		i = 0,
		l = collection.length,
		iNoClone = l - 1,
		value = args[ 0 ],
		valueIsFunction = isFunction( value );
	// We can't cloneNode fragments that contain checked, in WebKit
	if ( valueIsFunction ||
			( l > 1 && typeof value === "string" &&
				!support.checkClone && rchecked.test( value ) ) ) {
		return collection.each( function( index ) {
			var self = collection.eq( index );
			if ( valueIsFunction ) {
				args[ 0 ] = value.call( this, index, self.html() );
			}
			domManip( self, args, callback, ignored );
		} );
	}
	if ( l ) {
		fragment = buildFragment( args, collection[ 0 ].ownerDocument, false, collection, ignored );
		first = fragment.firstChild;
		if ( fragment.childNodes.length === 1 ) {
			fragment = first;
		}
		// Require either new content or an interest in ignored elements to invoke the callback
		if ( first || ignored ) {
			scripts = jQuery.map( getAll( fragment, "script" ), disableScript );
			hasScripts = scripts.length;
			// Use the original fragment for the last item
			// instead of the first because it can end up
			// being emptied incorrectly in certain situations (#8070).
			for ( ; i < l; i++ ) {
				node = fragment;
				if ( i !== iNoClone ) {
					node = jQuery.clone( node, true, true );
					// Keep references to cloned scripts for later restoration
					if ( hasScripts ) {
						// Support: Android <=4.0 only, PhantomJS 1 only
						// push.apply(_, arraylike) throws on ancient WebKit
						jQuery.merge( scripts, getAll( node, "script" ) );
					}
				}
				callback.call( collection[ i ], node, i );
			}
			if ( hasScripts ) {
				doc = scripts[ scripts.length - 1 ].ownerDocument;
				// Reenable scripts
				jQuery.map( scripts, restoreScript );
				// Evaluate executable scripts on first document insertion
				for ( i = 0; i < hasScripts; i++ ) {
					node = scripts[ i ];
					if ( rscriptType.test( node.type || "" ) &&
						!dataPriv.access( node, "globalEval" ) &&
						jQuery.contains( doc, node ) ) {
						if ( node.src && ( node.type || "" ).toLowerCase()  !== "module" ) {
							// Optional AJAX dependency, but won't run scripts if not present
							if ( jQuery._evalUrl ) {
								jQuery._evalUrl( node.src );
							}
						} else {
							DOMEval( node.textContent.replace( rcleanScript, "" ), doc, node );
						}
					}
				}
			}
		}
	}
	return collection;
}
function remove( elem, selector, keepData ) {
	var node,
		nodes = selector ? jQuery.filter( selector, elem ) : elem,
		i = 0;
	for ( ; ( node = nodes[ i ] ) != null; i++ ) {
		if ( !keepData && node.nodeType === 1 ) {
			jQuery.cleanData( getAll( node ) );
		}
		if ( node.parentNode ) {
			if ( keepData && jQuery.contains( node.ownerDocument, node ) ) {
				setGlobalEval( getAll( node, "script" ) );
			}
			node.parentNode.removeChild( node );
		}
	}
	return elem;
}
jQuery.extend( {
	htmlPrefilter: function( html ) {
		return html.replace( rxhtmlTag, "<$1></$2>" );
	},
	clone: function( elem, dataAndEvents, deepDataAndEvents ) {
		var i, l, srcElements, destElements,
			clone = elem.cloneNode( true ),
			inPage = jQuery.contains( elem.ownerDocument, elem );
		// Fix IE cloning issues
		if ( !support.noCloneChecked && ( elem.nodeType === 1 || elem.nodeType === 11 ) &&
				!jQuery.isXMLDoc( elem ) ) {
			// We eschew Sizzle here for performance reasons: https://jsperf.com/getall-vs-sizzle/2
			destElements = getAll( clone );
			srcElements = getAll( elem );
			for ( i = 0, l = srcElements.length; i < l; i++ ) {
				fixInput( srcElements[ i ], destElements[ i ] );
			}
		}
		// Copy the events from the original to the clone
		if ( dataAndEvents ) {
			if ( deepDataAndEvents ) {
				srcElements = srcElements || getAll( elem );
				destElements = destElements || getAll( clone );
				for ( i = 0, l = srcElements.length; i < l; i++ ) {
					cloneCopyEvent( srcElements[ i ], destElements[ i ] );
				}
			} else {
				cloneCopyEvent( elem, clone );
			}
		}
		// Preserve script evaluation history
		destElements = getAll( clone, "script" );
		if ( destElements.length > 0 ) {
			setGlobalEval( destElements, !inPage && getAll( elem, "script" ) );
		}
		// Return the cloned set
		return clone;
	},
	cleanData: function( elems ) {
		var data, elem, type,
			special = jQuery.event.special,
			i = 0;
		for ( ; ( elem = elems[ i ] ) !== undefined; i++ ) {
			if ( acceptData( elem ) ) {
				if ( ( data = elem[ dataPriv.expando ] ) ) {
					if ( data.events ) {
						for ( type in data.events ) {
							if ( special[ type ] ) {
								jQuery.event.remove( elem, type );
							// This is a shortcut to avoid jQuery.event.remove's overhead
							} else {
								jQuery.removeEvent( elem, type, data.handle );
							}
						}
					}
					// Support: Chrome <=35 - 45+
					// Assign undefined instead of using delete, see Data#remove
					elem[ dataPriv.expando ] = undefined;
				}
				if ( elem[ dataUser.expando ] ) {
					// Support: Chrome <=35 - 45+
					// Assign undefined instead of using delete, see Data#remove
					elem[ dataUser.expando ] = undefined;
				}
			}
		}
	}
} );
jQuery.fn.extend( {
	detach: function( selector ) {
		return remove( this, selector, true );
	},
	remove: function( selector ) {
		return remove( this, selector );
	},
	text: function( value ) {
		return access( this, function( value ) {
			return value === undefined ?
				jQuery.text( this ) :
				this.empty().each( function() {
					if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
						this.textContent = value;
					}
				} );
		}, null, value, arguments.length );
	},
	append: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
				var target = manipulationTarget( this, elem );
				target.appendChild( elem );
			}
		} );
	},
	prepend: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
				var target = manipulationTarget( this, elem );
				target.insertBefore( elem, target.firstChild );
			}
		} );
	},
	before: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.parentNode ) {
				this.parentNode.insertBefore( elem, this );
			}
		} );
	},
	after: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.parentNode ) {
				this.parentNode.insertBefore( elem, this.nextSibling );
			}
		} );
	},
	empty: function() {
		var elem,
			i = 0;
		for ( ; ( elem = this[ i ] ) != null; i++ ) {
			if ( elem.nodeType === 1 ) {
				// Prevent memory leaks
				jQuery.cleanData( getAll( elem, false ) );
				// Remove any remaining nodes
				elem.textContent = "";
			}
		}
		return this;
	},
	clone: function( dataAndEvents, deepDataAndEvents ) {
		dataAndEvents = dataAndEvents == null ? false : dataAndEvents;
		deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;
		return this.map( function() {
			return jQuery.clone( this, dataAndEvents, deepDataAndEvents );
		} );
	},
	html: function( value ) {
		return access( this, function( value ) {
			var elem = this[ 0 ] || {},
				i = 0,
				l = this.length;
			if ( value === undefined && elem.nodeType === 1 ) {
				return elem.innerHTML;
			}
			// See if we can take a shortcut and just use innerHTML
			if ( typeof value === "string" && !rnoInnerhtml.test( value ) &&
				!wrapMap[ ( rtagName.exec( value ) || [ "", "" ] )[ 1 ].toLowerCase() ] ) {
				value = jQuery.htmlPrefilter( value );
				try {
					for ( ; i < l; i++ ) {
						elem = this[ i ] || {};
						// Remove element nodes and prevent memory leaks
						if ( elem.nodeType === 1 ) {
							jQuery.cleanData( getAll( elem, false ) );
							elem.innerHTML = value;
						}
					}
					elem = 0;
				// If using innerHTML throws an exception, use the fallback method
				} catch ( e ) {}
			}
			if ( elem ) {
				this.empty().append( value );
			}
		}, null, value, arguments.length );
	},
	replaceWith: function() {
		var ignored = [];
		// Make the changes, replacing each non-ignored context element with the new content
		return domManip( this, arguments, function( elem ) {
			var parent = this.parentNode;
			if ( jQuery.inArray( this, ignored ) < 0 ) {
				jQuery.cleanData( getAll( this ) );
				if ( parent ) {
					parent.replaceChild( elem, this );
				}
			}
		// Force callback invocation
		}, ignored );
	}
} );
jQuery.each( {
	appendTo: "append",
	prependTo: "prepend",
	insertBefore: "before",
	insertAfter: "after",
	replaceAll: "replaceWith"
}, function( name, original ) {
	jQuery.fn[ name ] = function( selector ) {
		var elems,
			ret = [],
			insert = jQuery( selector ),
			last = insert.length - 1,
			i = 0;
		for ( ; i <= last; i++ ) {
			elems = i === last ? this : this.clone( true );
			jQuery( insert[ i ] )[ original ]( elems );
			// Support: Android <=4.0 only, PhantomJS 1 only
			// .get() because push.apply(_, arraylike) throws on ancient WebKit
			push.apply( ret, elems.get() );
		}
		return this.pushStack( ret );
	};
} );
var rnumnonpx = new RegExp( "^(" + pnum + ")(?!px)[a-z%]+$", "i" );
var getStyles = function( elem ) {
		// Support: IE <=11 only, Firefox <=30 (#15098, #14150)
		// IE throws on elements created in popups
		// FF meanwhile throws on frame elements through "defaultView.getComputedStyle"
		var view = elem.ownerDocument.defaultView;
		if ( !view || !view.opener ) {
			view = window;
		}
		return view.getComputedStyle( elem );
	};
var rboxStyle = new RegExp( cssExpand.join( "|" ), "i" );
( function() {
	// Executing both pixelPosition & boxSizingReliable tests require only one layout
	// so they're executed at the same time to save the second computation.
	function computeStyleTests() {
		// This is a singleton, we need to execute it only once
		if ( !div ) {
			return;
		}
		container.style.cssText = "position:absolute;left:-11111px;width:60px;" +
			"margin-top:1px;padding:0;border:0";
		div.style.cssText =
			"position:relative;display:block;box-sizing:border-box;overflow:scroll;" +
			"margin:auto;border:1px;padding:1px;" +
			"width:60%;top:1%";
		documentElement.appendChild( container ).appendChild( div );
		var divStyle = window.getComputedStyle( div );
		pixelPositionVal = divStyle.top !== "1%";
		// Support: Android 4.0 - 4.3 only, Firefox <=3 - 44
		reliableMarginLeftVal = roundPixelMeasures( divStyle.marginLeft ) === 12;
		// Support: Android 4.0 - 4.3 only, Safari <=9.1 - 10.1, iOS <=7.0 - 9.3
		// Some styles come back with percentage values, even though they shouldn't
		div.style.right = "60%";
		pixelBoxStylesVal = roundPixelMeasures( divStyle.right ) === 36;
		// Support: IE 9 - 11 only
		// Detect misreporting of content dimensions for box-sizing:border-box elements
		boxSizingReliableVal = roundPixelMeasures( divStyle.width ) === 36;
		// Support: IE 9 only
		// Detect overflow:scroll screwiness (gh-3699)
		div.style.position = "absolute";
		scrollboxSizeVal = div.offsetWidth === 36 || "absolute";
		documentElement.removeChild( container );
		// Nullify the div so it wouldn't be stored in the memory and
		// it will also be a sign that checks already performed
		div = null;
	}
	function roundPixelMeasures( measure ) {
		return Math.round( parseFloat( measure ) );
	}
	var pixelPositionVal, boxSizingReliableVal, scrollboxSizeVal, pixelBoxStylesVal,
		reliableMarginLeftVal,
		container = document.createElement( "div" ),
		div = document.createElement( "div" );
	// Finish early in limited (non-browser) environments
	if ( !div.style ) {
		return;
	}
	// Support: IE <=9 - 11 only
	// Style of cloned element affects source element cloned (#8908)
	div.style.backgroundClip = "content-box";
	div.cloneNode( true ).style.backgroundClip = "";
	support.clearCloneStyle = div.style.backgroundClip === "content-box";
	jQuery.extend( support, {
		boxSizingReliable: function() {
			computeStyleTests();
			return boxSizingReliableVal;
		},
		pixelBoxStyles: function() {
			computeStyleTests();
			return pixelBoxStylesVal;
		},
		pixelPosition: function() {
			computeStyleTests();
			return pixelPositionVal;
		},
		reliableMarginLeft: function() {
			computeStyleTests();
			return reliableMarginLeftVal;
		},
		scrollboxSize: function() {
			computeStyleTests();
			return scrollboxSizeVal;
		}
	} );
} )();
function curCSS( elem, name, computed ) {
	var width, minWidth, maxWidth, ret,
		// Support: Firefox 51+
		// Retrieving style before computed somehow
		// fixes an issue with getting wrong values
		// on detached elements
		style = elem.style;
	computed = computed || getStyles( elem );
	// getPropertyValue is needed for:
	//   .css('filter') (IE 9 only, #12537)
	//   .css('--customProperty) (#3144)
	if ( computed ) {
		ret = computed.getPropertyValue( name ) || computed[ name ];
		if ( ret === "" && !jQuery.contains( elem.ownerDocument, elem ) ) {
			ret = jQuery.style( elem, name );
		}
		// A tribute to the "awesome hack by Dean Edwards"
		// Android Browser returns percentage for some values,
		// but width seems to be reliably pixels.
		// This is against the CSSOM draft spec:
		// https://drafts.csswg.org/cssom/#resolved-values
		if ( !support.pixelBoxStyles() && rnumnonpx.test( ret ) && rboxStyle.test( name ) ) {
			// Remember the original values
			width = style.width;
			minWidth = style.minWidth;
			maxWidth = style.maxWidth;
			// Put in the new values to get a computed value out
			style.minWidth = style.maxWidth = style.width = ret;
			ret = computed.width;
			// Revert the changed values
			style.width = width;
			style.minWidth = minWidth;
			style.maxWidth = maxWidth;
		}
	}
	return ret !== undefined ?
		// Support: IE <=9 - 11 only
		// IE returns zIndex value as an integer.
		ret + "" :
		ret;
}
function addGetHookIf( conditionFn, hookFn ) {
	// Define the hook, we'll check on the first run if it's really needed.
	return {
		get: function() {
			if ( conditionFn() ) {
				// Hook not needed (or it's not possible to use it due
				// to missing dependency), remove it.
				delete this.get;
				return;
			}
			// Hook needed; redefine it so that the support test is not executed again.
			return ( this.get = hookFn ).apply( this, arguments );
		}
	};
}
var
	// Swappable if display is none or starts with table
	// except "table", "table-cell", or "table-caption"
	// See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display
	rdisplayswap = /^(none|table(?!-c[ea]).+)/,
	rcustomProp = /^--/,
	cssShow = { position: "absolute", visibility: "hidden", display: "block" },
	cssNormalTransform = {
		letterSpacing: "0",
		fontWeight: "400"
	},
	cssPrefixes = [ "Webkit", "Moz", "ms" ],
	emptyStyle = document.createElement( "div" ).style;
// Return a css property mapped to a potentially vendor prefixed property
function vendorPropName( name ) {
	// Shortcut for names that are not vendor prefixed
	if ( name in emptyStyle ) {
		return name;
	}
	// Check for vendor prefixed names
	var capName = name[ 0 ].toUpperCase() + name.slice( 1 ),
		i = cssPrefixes.length;
	while ( i-- ) {
		name = cssPrefixes[ i ] + capName;
		if ( name in emptyStyle ) {
			return name;
		}
	}
}
// Return a property mapped along what jQuery.cssProps suggests or to
// a vendor prefixed property.
function finalPropName( name ) {
	var ret = jQuery.cssProps[ name ];
	if ( !ret ) {
		ret = jQuery.cssProps[ name ] = vendorPropName( name ) || name;
	}
	return ret;
}
function setPositiveNumber( elem, value, subtract ) {
	// Any relative (+/-) values have already been
	// normalized at this point
	var matches = rcssNum.exec( value );
	return matches ?
		// Guard against undefined "subtract", e.g., when used as in cssHooks
		Math.max( 0, matches[ 2 ] - ( subtract || 0 ) ) + ( matches[ 3 ] || "px" ) :
		value;
}
function boxModelAdjustment( elem, dimension, box, isBorderBox, styles, computedVal ) {
	var i = dimension === "width" ? 1 : 0,
		extra = 0,
		delta = 0;
	// Adjustment may not be necessary
	if ( box === ( isBorderBox ? "border" : "content" ) ) {
		return 0;
	}
	for ( ; i < 4; i += 2 ) {
		// Both box models exclude margin
		if ( box === "margin" ) {
			delta += jQuery.css( elem, box + cssExpand[ i ], true, styles );
		}
		// If we get here with a content-box, we're seeking "padding" or "border" or "margin"
		if ( !isBorderBox ) {
			// Add padding
			delta += jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );
			// For "border" or "margin", add border
			if ( box !== "padding" ) {
				delta += jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );
			// But still keep track of it otherwise
			} else {
				extra += jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );
			}
		// If we get here with a border-box (content + padding + border), we're seeking "content" or
		// "padding" or "margin"
		} else {
			// For "content", subtract padding
			if ( box === "content" ) {
				delta -= jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );
			}
			// For "content" or "padding", subtract border
			if ( box !== "margin" ) {
				delta -= jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );
			}
		}
	}
	// Account for positive content-box scroll gutter when requested by providing computedVal
	if ( !isBorderBox && computedVal >= 0 ) {
		// offsetWidth/offsetHeight is a rounded sum of content, padding, scroll gutter, and border
		// Assuming integer scroll gutter, subtract the rest and round down
		delta += Math.max( 0, Math.ceil(
			elem[ "offset" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ] -
			computedVal -
			delta -
			extra -
			0.5
		) );
	}
	return delta;
}
function getWidthOrHeight( elem, dimension, extra ) {
	// Start with computed style
	var styles = getStyles( elem ),
		val = curCSS( elem, dimension, styles ),
		isBorderBox = jQuery.css( elem, "boxSizing", false, styles ) === "border-box",
		valueIsBorderBox = isBorderBox;
	// Support: Firefox <=54
	// Return a confounding non-pixel value or feign ignorance, as appropriate.
	if ( rnumnonpx.test( val ) ) {
		if ( !extra ) {
			return val;
		}
		val = "auto";
	}
	// Check for style in case a browser which returns unreliable values
	// for getComputedStyle silently falls back to the reliable elem.style
	valueIsBorderBox = valueIsBorderBox &&
		( support.boxSizingReliable() || val === elem.style[ dimension ] );
	// Fall back to offsetWidth/offsetHeight when value is "auto"
	// This happens for inline elements with no explicit setting (gh-3571)
	// Support: Android <=4.1 - 4.3 only
	// Also use offsetWidth/offsetHeight for misreported inline dimensions (gh-3602)
	if ( val === "auto" ||
		!parseFloat( val ) && jQuery.css( elem, "display", false, styles ) === "inline" ) {
		val = elem[ "offset" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ];
		// offsetWidth/offsetHeight provide border-box values
		valueIsBorderBox = true;
	}
	// Normalize "" and auto
	val = parseFloat( val ) || 0;
	// Adjust for the element's box model
	return ( val +
		boxModelAdjustment(
			elem,
			dimension,
			extra || ( isBorderBox ? "border" : "content" ),
			valueIsBorderBox,
			styles,
			// Provide the current computed size to request scroll gutter calculation (gh-3589)
			val
		)
	) + "px";
}
jQuery.extend( {
	// Add in style property hooks for overriding the default
	// behavior of getting and setting a style property
	cssHooks: {
		opacity: {
			get: function( elem, computed ) {
				if ( computed ) {
					// We should always get a number back from opacity
					var ret = curCSS( elem, "opacity" );
					return ret === "" ? "1" : ret;
				}
			}
		}
	},
	// Don't automatically add "px" to these possibly-unitless properties
	cssNumber: {
		"animationIterationCount": true,
		"columnCount": true,
		"fillOpacity": true,
		"flexGrow": true,
		"flexShrink": true,
		"fontWeight": true,
		"lineHeight": true,
		"opacity": true,
		"order": true,
		"orphans": true,
		"widows": true,
		"zIndex": true,
		"zoom": true
	},
	// Add in properties whose names you wish to fix before
	// setting or getting the value
	cssProps: {},
	// Get and set the style property on a DOM Node
	style: function( elem, name, value, extra ) {
		// Don't set styles on text and comment nodes
		if ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {
			return;
		}
		// Make sure that we're working with the right name
		var ret, type, hooks,
			origName = camelCase( name ),
			isCustomProp = rcustomProp.test( name ),
			style = elem.style;
		// Make sure that we're working with the right name. We don't
		// want to query the value if it is a CSS custom property
		// since they are user-defined.
		if ( !isCustomProp ) {
			name = finalPropName( origName );
		}
		// Gets hook for the prefixed version, then unprefixed version
		hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];
		// Check if we're setting a value
		if ( value !== undefined ) {
			type = typeof value;
			// Convert "+=" or "-=" to relative numbers (#7345)
			if ( type === "string" && ( ret = rcssNum.exec( value ) ) && ret[ 1 ] ) {
				value = adjustCSS( elem, name, ret );
				// Fixes bug #9237
				type = "number";
			}
			// Make sure that null and NaN values aren't set (#7116)
			if ( value == null || value !== value ) {
				return;
			}
			// If a number was passed in, add the unit (except for certain CSS properties)
			if ( type === "number" ) {
				value += ret && ret[ 3 ] || ( jQuery.cssNumber[ origName ] ? "" : "px" );
			}
			// background-* props affect original clone's values
			if ( !support.clearCloneStyle && value === "" && name.indexOf( "background" ) === 0 ) {
				style[ name ] = "inherit";
			}
			// If a hook was provided, use that value, otherwise just set the specified value
			if ( !hooks || !( "set" in hooks ) ||
				( value = hooks.set( elem, value, extra ) ) !== undefined ) {
				if ( isCustomProp ) {
					style.setProperty( name, value );
				} else {
					style[ name ] = value;
				}
			}
		} else {
			// If a hook was provided get the non-computed value from there
			if ( hooks && "get" in hooks &&
				( ret = hooks.get( elem, false, extra ) ) !== undefined ) {
				return ret;
			}
			// Otherwise just get the value from the style object
			return style[ name ];
		}
	},
	css: function( elem, name, extra, styles ) {
		var val, num, hooks,
			origName = camelCase( name ),
			isCustomProp = rcustomProp.test( name );
		// Make sure that we're working with the right name. We don't
		// want to modify the value if it is a CSS custom property
		// since they are user-defined.
		if ( !isCustomProp ) {
			name = finalPropName( origName );
		}
		// Try prefixed name followed by the unprefixed name
		hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];
		// If a hook was provided get the computed value from there
		if ( hooks && "get" in hooks ) {
			val = hooks.get( elem, true, extra );
		}
		// Otherwise, if a way to get the computed value exists, use that
		if ( val === undefined ) {
			val = curCSS( elem, name, styles );
		}
		// Convert "normal" to computed value
		if ( val === "normal" && name in cssNormalTransform ) {
			val = cssNormalTransform[ name ];
		}
		// Make numeric if forced or a qualifier was provided and val looks numeric
		if ( extra === "" || extra ) {
			num = parseFloat( val );
			return extra === true || isFinite( num ) ? num || 0 : val;
		}
		return val;
	}
} );
jQuery.each( [ "height", "width" ], function( i, dimension ) {
	jQuery.cssHooks[ dimension ] = {
		get: function( elem, computed, extra ) {
			if ( computed ) {
				// Certain elements can have dimension info if we invisibly show them
				// but it must have a current display style that would benefit
				return rdisplayswap.test( jQuery.css( elem, "display" ) ) &&
					// Support: Safari 8+
					// Table columns in Safari have non-zero offsetWidth & zero
					// getBoundingClientRect().width unless display is changed.
					// Support: IE <=11 only
					// Running getBoundingClientRect on a disconnected node
					// in IE throws an error.
					( !elem.getClientRects().length || !elem.getBoundingClientRect().width ) ?
						swap( elem, cssShow, function() {
							return getWidthOrHeight( elem, dimension, extra );
						} ) :
						getWidthOrHeight( elem, dimension, extra );
			}
		},
		set: function( elem, value, extra ) {
			var matches,
				styles = getStyles( elem ),
				isBorderBox = jQuery.css( elem, "boxSizing", false, styles ) === "border-box",
				subtract = extra && boxModelAdjustment(
					elem,
					dimension,
					extra,
					isBorderBox,
					styles
				);
			// Account for unreliable border-box dimensions by comparing offset* to computed and
			// faking a content-box to get border and padding (gh-3699)
			if ( isBorderBox && support.scrollboxSize() === styles.position ) {
				subtract -= Math.ceil(
					elem[ "offset" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ] -
					parseFloat( styles[ dimension ] ) -
					boxModelAdjustment( elem, dimension, "border", false, styles ) -
					0.5
				);
			}
			// Convert to pixels if value adjustment is needed
			if ( subtract && ( matches = rcssNum.exec( value ) ) &&
				( matches[ 3 ] || "px" ) !== "px" ) {
				elem.style[ dimension ] = value;
				value = jQuery.css( elem, dimension );
			}
			return setPositiveNumber( elem, value, subtract );
		}
	};
} );
jQuery.cssHooks.marginLeft = addGetHookIf( support.reliableMarginLeft,
	function( elem, computed ) {
		if ( computed ) {
			return ( parseFloat( curCSS( elem, "marginLeft" ) ) ||
				elem.getBoundingClientRect().left -
					swap( elem, { marginLeft: 0 }, function() {
						return elem.getBoundingClientRect().left;
					} )
				) + "px";
		}
	}
);
// These hooks are used by animate to expand properties
jQuery.each( {
	margin: "",
	padding: "",
	border: "Width"
}, function( prefix, suffix ) {
	jQuery.cssHooks[ prefix + suffix ] = {
		expand: function( value ) {
			var i = 0,
				expanded = {},
				// Assumes a single number if not a string
				parts = typeof value === "string" ? value.split( " " ) : [ value ];
			for ( ; i < 4; i++ ) {
				expanded[ prefix + cssExpand[ i ] + suffix ] =
					parts[ i ] || parts[ i - 2 ] || parts[ 0 ];
			}
			return expanded;
		}
	};
	if ( prefix !== "margin" ) {
		jQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;
	}
} );
jQuery.fn.extend( {
	css: function( name, value ) {
		return access( this, function( elem, name, value ) {
			var styles, len,
				map = {},
				i = 0;
			if ( Array.isArray( name ) ) {
				styles = getStyles( elem );
				len = name.length;
				for ( ; i < len; i++ ) {
					map[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );
				}
				return map;
			}
			return value !== undefined ?
				jQuery.style( elem, name, value ) :
				jQuery.css( elem, name );
		}, name, value, arguments.length > 1 );
	}
} );
function Tween( elem, options, prop, end, easing ) {
	return new Tween.prototype.init( elem, options, prop, end, easing );
}
jQuery.Tween = Tween;
Tween.prototype = {
	constructor: Tween,
	init: function( elem, options, prop, end, easing, unit ) {
		this.elem = elem;
		this.prop = prop;
		this.easing = easing || jQuery.easing._default;
		this.options = options;
		this.start = this.now = this.cur();
		this.end = end;
		this.unit = unit || ( jQuery.cssNumber[ prop ] ? "" : "px" );
	},
	cur: function() {
		var hooks = Tween.propHooks[ this.prop ];
		return hooks && hooks.get ?
			hooks.get( this ) :
			Tween.propHooks._default.get( this );
	},
	run: function( percent ) {
		var eased,
			hooks = Tween.propHooks[ this.prop ];
		if ( this.options.duration ) {
			this.pos = eased = jQuery.easing[ this.easing ](
				percent, this.options.duration * percent, 0, 1, this.options.duration
			);
		} else {
			this.pos = eased = percent;
		}
		this.now = ( this.end - this.start ) * eased + this.start;
		if ( this.options.step ) {
			this.options.step.call( this.elem, this.now, this );
		}
		if ( hooks && hooks.set ) {
			hooks.set( this );
		} else {
			Tween.propHooks._default.set( this );
		}
		return this;
	}
};
Tween.prototype.init.prototype = Tween.prototype;
Tween.propHooks = {
	_default: {
		get: function( tween ) {
			var result;
			// Use a property on the element directly when it is not a DOM element,
			// or when there is no matching style property that exists.
			if ( tween.elem.nodeType !== 1 ||
				tween.elem[ tween.prop ] != null && tween.elem.style[ tween.prop ] == null ) {
				return tween.elem[ tween.prop ];
			}
			// Passing an empty string as a 3rd parameter to .css will automatically
			// attempt a parseFloat and fallback to a string if the parse fails.
			// Simple values such as "10px" are parsed to Float;
			// complex values such as "rotate(1rad)" are returned as-is.
			result = jQuery.css( tween.elem, tween.prop, "" );
			// Empty strings, null, undefined and "auto" are converted to 0.
			return !result || result === "auto" ? 0 : result;
		},
		set: function( tween ) {
			// Use step hook for back compat.
			// Use cssHook if its there.
			// Use .style if available and use plain properties where available.
			if ( jQuery.fx.step[ tween.prop ] ) {
				jQuery.fx.step[ tween.prop ]( tween );
			} else if ( tween.elem.nodeType === 1 &&
				( tween.elem.style[ jQuery.cssProps[ tween.prop ] ] != null ||
					jQuery.cssHooks[ tween.prop ] ) ) {
				jQuery.style( tween.elem, tween.prop, tween.now + tween.unit );
			} else {
				tween.elem[ tween.prop ] = tween.now;
			}
		}
	}
};
// Support: IE <=9 only
// Panic based approach to setting things on disconnected nodes
Tween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {
	set: function( tween ) {
		if ( tween.elem.nodeType && tween.elem.parentNode ) {
			tween.elem[ tween.prop ] = tween.now;
		}
	}
};
jQuery.easing = {
	linear: function( p ) {
		return p;
	},
	swing: function( p ) {
		return 0.5 - Math.cos( p * Math.PI ) / 2;
	},
	_default: "swing"
};
jQuery.fx = Tween.prototype.init;
// Back compat <1.8 extension point
jQuery.fx.step = {};
var
	fxNow, inProgress,
	rfxtypes = /^(?:toggle|show|hide)$/,
	rrun = /queueHooks$/;
function schedule() {
	if ( inProgress ) {
		if ( document.hidden === false && window.requestAnimationFrame ) {
			window.requestAnimationFrame( schedule );
		} else {
			window.setTimeout( schedule, jQuery.fx.interval );
		}
		jQuery.fx.tick();
	}
}
// Animations created synchronously will run synchronously
function createFxNow() {
	window.setTimeout( function() {
		fxNow = undefined;
	} );
	return ( fxNow = Date.now() );
}
// Generate parameters to create a standard animation
function genFx( type, includeWidth ) {
	var which,
		i = 0,
		attrs = { height: type };
	// If we include width, step value is 1 to do all cssExpand values,
	// otherwise step value is 2 to skip over Left and Right
	includeWidth = includeWidth ? 1 : 0;
	for ( ; i < 4; i += 2 - includeWidth ) {
		which = cssExpand[ i ];
		attrs[ "margin" + which ] = attrs[ "padding" + which ] = type;
	}
	if ( includeWidth ) {
		attrs.opacity = attrs.width = type;
	}
	return attrs;
}
function createTween( value, prop, animation ) {
	var tween,
		collection = ( Animation.tweeners[ prop ] || [] ).concat( Animation.tweeners[ "*" ] ),
		index = 0,
		length = collection.length;
	for ( ; index < length; index++ ) {
		if ( ( tween = collection[ index ].call( animation, prop, value ) ) ) {
			// We're done with this property
			return tween;
		}
	}
}
function defaultPrefilter( elem, props, opts ) {
	var prop, value, toggle, hooks, oldfire, propTween, restoreDisplay, display,
		isBox = "width" in props || "height" in props,
		anim = this,
		orig = {},
		style = elem.style,
		hidden = elem.nodeType && isHiddenWithinTree( elem ),
		dataShow = dataPriv.get( elem, "fxshow" );
	// Queue-skipping animations hijack the fx hooks
	if ( !opts.queue ) {
		hooks = jQuery._queueHooks( elem, "fx" );
		if ( hooks.unqueued == null ) {
			hooks.unqueued = 0;
			oldfire = hooks.empty.fire;
			hooks.empty.fire = function() {
				if ( !hooks.unqueued ) {
					oldfire();
				}
			};
		}
		hooks.unqueued++;
		anim.always( function() {
			// Ensure the complete handler is called before this completes
			anim.always( function() {
				hooks.unqueued--;
				if ( !jQuery.queue( elem, "fx" ).length ) {
					hooks.empty.fire();
				}
			} );
		} );
	}
	// Detect show/hide animations
	for ( prop in props ) {
		value = props[ prop ];
		if ( rfxtypes.test( value ) ) {
			delete props[ prop ];
			toggle = toggle || value === "toggle";
			if ( value === ( hidden ? "hide" : "show" ) ) {
				// Pretend to be hidden if this is a "show" and
				// there is still data from a stopped show/hide
				if ( value === "show" && dataShow && dataShow[ prop ] !== undefined ) {
					hidden = true;
				// Ignore all other no-op show/hide data
				} else {
					continue;
				}
			}
			orig[ prop ] = dataShow && dataShow[ prop ] || jQuery.style( elem, prop );
		}
	}
	// Bail out if this is a no-op like .hide().hide()
	propTween = !jQuery.isEmptyObject( props );
	if ( !propTween && jQuery.isEmptyObject( orig ) ) {
		return;
	}
	// Restrict "overflow" and "display" styles during box animations
	if ( isBox && elem.nodeType === 1 ) {
		// Support: IE <=9 - 11, Edge 12 - 15
		// Record all 3 overflow attributes because IE does not infer the shorthand
		// from identically-valued overflowX and overflowY and Edge just mirrors
		// the overflowX value there.
		opts.overflow = [ style.overflow, style.overflowX, style.overflowY ];
		// Identify a display type, preferring old show/hide data over the CSS cascade
		restoreDisplay = dataShow && dataShow.display;
		if ( restoreDisplay == null ) {
			restoreDisplay = dataPriv.get( elem, "display" );
		}
		display = jQuery.css( elem, "display" );
		if ( display === "none" ) {
			if ( restoreDisplay ) {
				display = restoreDisplay;
			} else {
				// Get nonempty value(s) by temporarily forcing visibility
				showHide( [ elem ], true );
				restoreDisplay = elem.style.display || restoreDisplay;
				display = jQuery.css( elem, "display" );
				showHide( [ elem ] );
			}
		}
		// Animate inline elements as inline-block
		if ( display === "inline" || display === "inline-block" && restoreDisplay != null ) {
			if ( jQuery.css( elem, "float" ) === "none" ) {
				// Restore the original display value at the end of pure show/hide animations
				if ( !propTween ) {
					anim.done( function() {
						style.display = restoreDisplay;
					} );
					if ( restoreDisplay == null ) {
						display = style.display;
						restoreDisplay = display === "none" ? "" : display;
					}
				}
				style.display = "inline-block";
			}
		}
	}
	if ( opts.overflow ) {
		style.overflow = "hidden";
		anim.always( function() {
			style.overflow = opts.overflow[ 0 ];
			style.overflowX = opts.overflow[ 1 ];
			style.overflowY = opts.overflow[ 2 ];
		} );
	}
	// Implement show/hide animations
	propTween = false;
	for ( prop in orig ) {
		// General show/hide setup for this element animation
		if ( !propTween ) {
			if ( dataShow ) {
				if ( "hidden" in dataShow ) {
					hidden = dataShow.hidden;
				}
			} else {
				dataShow = dataPriv.access( elem, "fxshow", { display: restoreDisplay } );
			}
			// Store hidden/visible for toggle so `.stop().toggle()` "reverses"
			if ( toggle ) {
				dataShow.hidden = !hidden;
			}
			// Show elements before animating them
			if ( hidden ) {
				showHide( [ elem ], true );
			}
			/* eslint-disable no-loop-func */
			anim.done( function() {
			/* eslint-enable no-loop-func */
				// The final step of a "hide" animation is actually hiding the element
				if ( !hidden ) {
					showHide( [ elem ] );
				}
				dataPriv.remove( elem, "fxshow" );
				for ( prop in orig ) {
					jQuery.style( elem, prop, orig[ prop ] );
				}
			} );
		}
		// Per-property setup
		propTween = createTween( hidden ? dataShow[ prop ] : 0, prop, anim );
		if ( !( prop in dataShow ) ) {
			dataShow[ prop ] = propTween.start;
			if ( hidden ) {
				propTween.end = propTween.start;
				propTween.start = 0;
			}
		}
	}
}
function propFilter( props, specialEasing ) {
	var index, name, easing, value, hooks;
	// camelCase, specialEasing and expand cssHook pass
	for ( index in props ) {
		name = camelCase( index );
		easing = specialEasing[ name ];
		value = props[ index ];
		if ( Array.isArray( value ) ) {
			easing = value[ 1 ];
			value = props[ index ] = value[ 0 ];
		}
		if ( index !== name ) {
			props[ name ] = value;
			delete props[ index ];
		}
		hooks = jQuery.cssHooks[ name ];
		if ( hooks && "expand" in hooks ) {
			value = hooks.expand( value );
			delete props[ name ];
			// Not quite $.extend, this won't overwrite existing keys.
			// Reusing 'index' because we have the correct "name"
			for ( index in value ) {
				if ( !( index in props ) ) {
					props[ index ] = value[ index ];
					specialEasing[ index ] = easing;
				}
			}
		} else {
			specialEasing[ name ] = easing;
		}
	}
}
function Animation( elem, properties, options ) {
	var result,
		stopped,
		index = 0,
		length = Animation.prefilters.length,
		deferred = jQuery.Deferred().always( function() {
			// Don't match elem in the :animated selector
			delete tick.elem;
		} ),
		tick = function() {
			if ( stopped ) {
				return false;
			}
			var currentTime = fxNow || createFxNow(),
				remaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),
				// Support: Android 2.3 only
				// Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (#12497)
				temp = remaining / animation.duration || 0,
				percent = 1 - temp,
				index = 0,
				length = animation.tweens.length;
			for ( ; index < length; index++ ) {
				animation.tweens[ index ].run( percent );
			}
			deferred.notifyWith( elem, [ animation, percent, remaining ] );
			// If there's more to do, yield
			if ( percent < 1 && length ) {
				return remaining;
			}
			// If this was an empty animation, synthesize a final progress notification
			if ( !length ) {
				deferred.notifyWith( elem, [ animation, 1, 0 ] );
			}
			// Resolve the animation and report its conclusion
			deferred.resolveWith( elem, [ animation ] );
			return false;
		},
		animation = deferred.promise( {
			elem: elem,
			props: jQuery.extend( {}, properties ),
			opts: jQuery.extend( true, {
				specialEasing: {},
				easing: jQuery.easing._default
			}, options ),
			originalProperties: properties,
			originalOptions: options,
			startTime: fxNow || createFxNow(),
			duration: options.duration,
			tweens: [],
			createTween: function( prop, end ) {
				var tween = jQuery.Tween( elem, animation.opts, prop, end,
						animation.opts.specialEasing[ prop ] || animation.opts.easing );
				animation.tweens.push( tween );
				return tween;
			},
			stop: function( gotoEnd ) {
				var index = 0,
					// If we are going to the end, we want to run all the tweens
					// otherwise we skip this part
					length = gotoEnd ? animation.tweens.length : 0;
				if ( stopped ) {
					return this;
				}
				stopped = true;
				for ( ; index < length; index++ ) {
					animation.tweens[ index ].run( 1 );
				}
				// Resolve when we played the last frame; otherwise, reject
				if ( gotoEnd ) {
					deferred.notifyWith( elem, [ animation, 1, 0 ] );
					deferred.resolveWith( elem, [ animation, gotoEnd ] );
				} else {
					deferred.rejectWith( elem, [ animation, gotoEnd ] );
				}
				return this;
			}
		} ),
		props = animation.props;
	propFilter( props, animation.opts.specialEasing );
	for ( ; index < length; index++ ) {
		result = Animation.prefilters[ index ].call( animation, elem, props, animation.opts );
		if ( result ) {
			if ( isFunction( result.stop ) ) {
				jQuery._queueHooks( animation.elem, animation.opts.queue ).stop =
					result.stop.bind( result );
			}
			return result;
		}
	}
	jQuery.map( props, createTween, animation );
	if ( isFunction( animation.opts.start ) ) {
		animation.opts.start.call( elem, animation );
	}
	// Attach callbacks from options
	animation
		.progress( animation.opts.progress )
		.done( animation.opts.done, animation.opts.complete )
		.fail( animation.opts.fail )
		.always( animation.opts.always );
	jQuery.fx.timer(
		jQuery.extend( tick, {
			elem: elem,
			anim: animation,
			queue: animation.opts.queue
		} )
	);
	return animation;
}
jQuery.Animation = jQuery.extend( Animation, {
	tweeners: {
		"*": [ function( prop, value ) {
			var tween = this.createTween( prop, value );
			adjustCSS( tween.elem, prop, rcssNum.exec( value ), tween );
			return tween;
		} ]
	},
	tweener: function( props, callback ) {
		if ( isFunction( props ) ) {
			callback = props;
			props = [ "*" ];
		} else {
			props = props.match( rnothtmlwhite );
		}
		var prop,
			index = 0,
			length = props.length;
		for ( ; index < length; index++ ) {
			prop = props[ index ];
			Animation.tweeners[ prop ] = Animation.tweeners[ prop ] || [];
			Animation.tweeners[ prop ].unshift( callback );
		}
	},
	prefilters: [ defaultPrefilter ],
	prefilter: function( callback, prepend ) {
		if ( prepend ) {
			Animation.prefilters.unshift( callback );
		} else {
			Animation.prefilters.push( callback );
		}
	}
} );
jQuery.speed = function( speed, easing, fn ) {
	var opt = speed && typeof speed === "object" ? jQuery.extend( {}, speed ) : {
		complete: fn || !fn && easing ||
			isFunction( speed ) && speed,
		duration: speed,
		easing: fn && easing || easing && !isFunction( easing ) && easing
	};
	// Go to the end state if fx are off
	if ( jQuery.fx.off ) {
		opt.duration = 0;
	} else {
		if ( typeof opt.duration !== "number" ) {
			if ( opt.duration in jQuery.fx.speeds ) {
				opt.duration = jQuery.fx.speeds[ opt.duration ];
			} else {
				opt.duration = jQuery.fx.speeds._default;
			}
		}
	}
	// Normalize opt.queue - true/undefined/null -> "fx"
	if ( opt.queue == null || opt.queue === true ) {
		opt.queue = "fx";
	}
	// Queueing
	opt.old = opt.complete;
	opt.complete = function() {
		if ( isFunction( opt.old ) ) {
			opt.old.call( this );
		}
		if ( opt.queue ) {
			jQuery.dequeue( this, opt.queue );
		}
	};
	return opt;
};
jQuery.fn.extend( {
	fadeTo: function( speed, to, easing, callback ) {
		// Show any hidden elements after setting opacity to 0
		return this.filter( isHiddenWithinTree ).css( "opacity", 0 ).show()
			// Animate to the value specified
			.end().animate( { opacity: to }, speed, easing, callback );
	},
	animate: function( prop, speed, easing, callback ) {
		var empty = jQuery.isEmptyObject( prop ),
			optall = jQuery.speed( speed, easing, callback ),
			doAnimation = function() {
				// Operate on a copy of prop so per-property easing won't be lost
				var anim = Animation( this, jQuery.extend( {}, prop ), optall );
				// Empty animations, or finishing resolves immediately
				if ( empty || dataPriv.get( this, "finish" ) ) {
					anim.stop( true );
				}
			};
			doAnimation.finish = doAnimation;
		return empty || optall.queue === false ?
			this.each( doAnimation ) :
			this.queue( optall.queue, doAnimation );
	},
	stop: function( type, clearQueue, gotoEnd ) {
		var stopQueue = function( hooks ) {
			var stop = hooks.stop;
			delete hooks.stop;
			stop( gotoEnd );
		};
		if ( typeof type !== "string" ) {
			gotoEnd = clearQueue;
			clearQueue = type;
			type = undefined;
		}
		if ( clearQueue && type !== false ) {
			this.queue( type || "fx", [] );
		}
		return this.each( function() {
			var dequeue = true,
				index = type != null && type + "queueHooks",
				timers = jQuery.timers,
				data = dataPriv.get( this );
			if ( index ) {
				if ( data[ index ] && data[ index ].stop ) {
					stopQueue( data[ index ] );
				}
			} else {
				for ( index in data ) {
					if ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {
						stopQueue( data[ index ] );
					}
				}
			}
			for ( index = timers.length; index--; ) {
				if ( timers[ index ].elem === this &&
					( type == null || timers[ index ].queue === type ) ) {
					timers[ index ].anim.stop( gotoEnd );
					dequeue = false;
					timers.splice( index, 1 );
				}
			}
			// Start the next in the queue if the last step wasn't forced.
			// Timers currently will call their complete callbacks, which
			// will dequeue but only if they were gotoEnd.
			if ( dequeue || !gotoEnd ) {
				jQuery.dequeue( this, type );
			}
		} );
	},
	finish: function( type ) {
		if ( type !== false ) {
			type = type || "fx";
		}
		return this.each( function() {
			var index,
				data = dataPriv.get( this ),
				queue = data[ type + "queue" ],
				hooks = data[ type + "queueHooks" ],
				timers = jQuery.timers,
				length = queue ? queue.length : 0;
			// Enable finishing flag on private data
			data.finish = true;
			// Empty the queue first
			jQuery.queue( this, type, [] );
			if ( hooks && hooks.stop ) {
				hooks.stop.call( this, true );
			}
			// Look for any active animations, and finish them
			for ( index = timers.length; index--; ) {
				if ( timers[ index ].elem === this && timers[ index ].queue === type ) {
					timers[ index ].anim.stop( true );
					timers.splice( index, 1 );
				}
			}
			// Look for any animations in the old queue and finish them
			for ( index = 0; index < length; index++ ) {
				if ( queue[ index ] && queue[ index ].finish ) {
					queue[ index ].finish.call( this );
				}
			}
			// Turn off finishing flag
			delete data.finish;
		} );
	}
} );
jQuery.each( [ "toggle", "show", "hide" ], function( i, name ) {
	var cssFn = jQuery.fn[ name ];
	jQuery.fn[ name ] = function( speed, easing, callback ) {
		return speed == null || typeof speed === "boolean" ?
			cssFn.apply( this, arguments ) :
			this.animate( genFx( name, true ), speed, easing, callback );
	};
} );
// Generate shortcuts for custom animations
jQuery.each( {
	slideDown: genFx( "show" ),
	slideUp: genFx( "hide" ),
	slideToggle: genFx( "toggle" ),
	fadeIn: { opacity: "show" },
	fadeOut: { opacity: "hide" },
	fadeToggle: { opacity: "toggle" }
}, function( name, props ) {
	jQuery.fn[ name ] = function( speed, easing, callback ) {
		return this.animate( props, speed, easing, callback );
	};
} );
jQuery.timers = [];
jQuery.fx.tick = function() {
	var timer,
		i = 0,
		timers = jQuery.timers;
	fxNow = Date.now();
	for ( ; i < timers.length; i++ ) {
		timer = timers[ i ];
		// Run the timer and safely remove it when done (allowing for external removal)
		if ( !timer() && timers[ i ] === timer ) {
			timers.splice( i--, 1 );
		}
	}
	if ( !timers.length ) {
		jQuery.fx.stop();
	}
	fxNow = undefined;
};
jQuery.fx.timer = function( timer ) {
	jQuery.timers.push( timer );
	jQuery.fx.start();
};
jQuery.fx.interval = 13;
jQuery.fx.start = function() {
	if ( inProgress ) {
		return;
	}
	inProgress = true;
	schedule();
};
jQuery.fx.stop = function() {
	inProgress = null;
};
jQuery.fx.speeds = {
	slow: 600,
	fast: 200,
	// Default speed
	_default: 400
};
// Based off of the plugin by Clint Helfers, with permission.
// https://web.archive.org/web/20100324014747/http://blindsignals.com/index.php/2009/07/jquery-delay/
jQuery.fn.delay = function( time, type ) {
	time = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;
	type = type || "fx";
	return this.queue( type, function( next, hooks ) {
		var timeout = window.setTimeout( next, time );
		hooks.stop = function() {
			window.clearTimeout( timeout );
		};
	} );
};
( function() {
	var input = document.createElement( "input" ),
		select = document.createElement( "select" ),
		opt = select.appendChild( document.createElement( "option" ) );
	input.type = "checkbox";
	// Support: Android <=4.3 only
	// Default value for a checkbox should be "on"
	support.checkOn = input.value !== "";
	// Support: IE <=11 only
	// Must access selectedIndex to make default options select
	support.optSelected = opt.selected;
	// Support: IE <=11 only
	// An input loses its value after becoming a radio
	input = document.createElement( "input" );
	input.value = "t";
	input.type = "radio";
	support.radioValue = input.value === "t";
} )();
var boolHook,
	attrHandle = jQuery.expr.attrHandle;
jQuery.fn.extend( {
	attr: function( name, value ) {
		return access( this, jQuery.attr, name, value, arguments.length > 1 );
	},
	removeAttr: function( name ) {
		return this.each( function() {
			jQuery.removeAttr( this, name );
		} );
	}
} );
jQuery.extend( {
	attr: function( elem, name, value ) {
		var ret, hooks,
			nType = elem.nodeType;
		// Don't get/set attributes on text, comment and attribute nodes
		if ( nType === 3 || nType === 8 || nType === 2 ) {
			return;
		}
		// Fallback to prop when attributes are not supported
		if ( typeof elem.getAttribute === "undefined" ) {
			return jQuery.prop( elem, name, value );
		}
		// Attribute hooks are determined by the lowercase version
		// Grab necessary hook if one is defined
		if ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {
			hooks = jQuery.attrHooks[ name.toLowerCase() ] ||
				( jQuery.expr.match.bool.test( name ) ? boolHook : undefined );
		}
		if ( value !== undefined ) {
			if ( value === null ) {
				jQuery.removeAttr( elem, name );
				return;
			}
			if ( hooks && "set" in hooks &&
				( ret = hooks.set( elem, value, name ) ) !== undefined ) {
				return ret;
			}
			elem.setAttribute( name, value + "" );
			return value;
		}
		if ( hooks && "get" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {
			return ret;
		}
		ret = jQuery.find.attr( elem, name );
		// Non-existent attributes return null, we normalize to undefined
		return ret == null ? undefined : ret;
	},
	attrHooks: {
		type: {
			set: function( elem, value ) {
				if ( !support.radioValue && value === "radio" &&
					nodeName( elem, "input" ) ) {
					var val = elem.value;
					elem.setAttribute( "type", value );
					if ( val ) {
						elem.value = val;
					}
					return value;
				}
			}
		}
	},
	removeAttr: function( elem, value ) {
		var name,
			i = 0,
			// Attribute names can contain non-HTML whitespace characters
			// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2
			attrNames = value && value.match( rnothtmlwhite );
		if ( attrNames && elem.nodeType === 1 ) {
			while ( ( name = attrNames[ i++ ] ) ) {
				elem.removeAttribute( name );
			}
		}
	}
} );
// Hooks for boolean attributes
boolHook = {
	set: function( elem, value, name ) {
		if ( value === false ) {
			// Remove boolean attributes when set to false
			jQuery.removeAttr( elem, name );
		} else {
			elem.setAttribute( name, name );
		}
		return name;
	}
};
jQuery.each( jQuery.expr.match.bool.source.match( /\w+/g ), function( i, name ) {
	var getter = attrHandle[ name ] || jQuery.find.attr;
	attrHandle[ name ] = function( elem, name, isXML ) {
		var ret, handle,
			lowercaseName = name.toLowerCase();
		if ( !isXML ) {
			// Avoid an infinite loop by temporarily removing this function from the getter
			handle = attrHandle[ lowercaseName ];
			attrHandle[ lowercaseName ] = ret;
			ret = getter( elem, name, isXML ) != null ?
				lowercaseName :
				null;
			attrHandle[ lowercaseName ] = handle;
		}
		return ret;
	};
} );
var rfocusable = /^(?:input|select|textarea|button)$/i,
	rclickable = /^(?:a|area)$/i;
jQuery.fn.extend( {
	prop: function( name, value ) {
		return access( this, jQuery.prop, name, value, arguments.length > 1 );
	},
	removeProp: function( name ) {
		return this.each( function() {
			delete this[ jQuery.propFix[ name ] || name ];
		} );
	}
} );
jQuery.extend( {
	prop: function( elem, name, value ) {
		var ret, hooks,
			nType = elem.nodeType;
		// Don't get/set properties on text, comment and attribute nodes
		if ( nType === 3 || nType === 8 || nType === 2 ) {
			return;
		}
		if ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {
			// Fix name and attach hooks
			name = jQuery.propFix[ name ] || name;
			hooks = jQuery.propHooks[ name ];
		}
		if ( value !== undefined ) {
			if ( hooks && "set" in hooks &&
				( ret = hooks.set( elem, value, name ) ) !== undefined ) {
				return ret;
			}
			return ( elem[ name ] = value );
		}
		if ( hooks && "get" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {
			return ret;
		}
		return elem[ name ];
	},
	propHooks: {
		tabIndex: {
			get: function( elem ) {
				// Support: IE <=9 - 11 only
				// elem.tabIndex doesn't always return the
				// correct value when it hasn't been explicitly set
				// https://web.archive.org/web/20141116233347/http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/
				// Use proper attribute retrieval(#12072)
				var tabindex = jQuery.find.attr( elem, "tabindex" );
				if ( tabindex ) {
					return parseInt( tabindex, 10 );
				}
				if (
					rfocusable.test( elem.nodeName ) ||
					rclickable.test( elem.nodeName ) &&
					elem.href
				) {
					return 0;
				}
				return -1;
			}
		}
	},
	propFix: {
		"for": "htmlFor",
		"class": "className"
	}
} );
// Support: IE <=11 only
// Accessing the selectedIndex property
// forces the browser to respect setting selected
// on the option
// The getter ensures a default option is selected
// when in an optgroup
// eslint rule "no-unused-expressions" is disabled for this code
// since it considers such accessions noop
if ( !support.optSelected ) {
	jQuery.propHooks.selected = {
		get: function( elem ) {
			/* eslint no-unused-expressions: "off" */
			var parent = elem.parentNode;
			if ( parent && parent.parentNode ) {
				parent.parentNode.selectedIndex;
			}
			return null;
		},
		set: function( elem ) {
			/* eslint no-unused-expressions: "off" */
			var parent = elem.parentNode;
			if ( parent ) {
				parent.selectedIndex;
				if ( parent.parentNode ) {
					parent.parentNode.selectedIndex;
				}
			}
		}
	};
}
jQuery.each( [
	"tabIndex",
	"readOnly",
	"maxLength",
	"cellSpacing",
	"cellPadding",
	"rowSpan",
	"colSpan",
	"useMap",
	"frameBorder",
	"contentEditable"
], function() {
	jQuery.propFix[ this.toLowerCase() ] = this;
} );
	// Strip and collapse whitespace according to HTML spec
	// https://infra.spec.whatwg.org/#strip-and-collapse-ascii-whitespace
	function stripAndCollapse( value ) {
		var tokens = value.match( rnothtmlwhite ) || [];
		return tokens.join( " " );
	}
function getClass( elem ) {
	return elem.getAttribute && elem.getAttribute( "class" ) || "";
}
function classesToArray( value ) {
	if ( Array.isArray( value ) ) {
		return value;
	}
	if ( typeof value === "string" ) {
		return value.match( rnothtmlwhite ) || [];
	}
	return [];
}
jQuery.fn.extend( {
	addClass: function( value ) {
		var classes, elem, cur, curValue, clazz, j, finalValue,
			i = 0;
		if ( isFunction( value ) ) {
			return this.each( function( j ) {
				jQuery( this ).addClass( value.call( this, j, getClass( this ) ) );
			} );
		}
		classes = classesToArray( value );
		if ( classes.length ) {
			while ( ( elem = this[ i++ ] ) ) {
				curValue = getClass( elem );
				cur = elem.nodeType === 1 && ( " " + stripAndCollapse( curValue ) + " " );
				if ( cur ) {
					j = 0;
					while ( ( clazz = classes[ j++ ] ) ) {
						if ( cur.indexOf( " " + clazz + " " ) < 0 ) {
							cur += clazz + " ";
						}
					}
					// Only assign if different to avoid unneeded rendering.
					finalValue = stripAndCollapse( cur );
					if ( curValue !== finalValue ) {
						elem.setAttribute( "class", finalValue );
					}
				}
			}
		}
		return this;
	},
	removeClass: function( value ) {
		var classes, elem, cur, curValue, clazz, j, finalValue,
			i = 0;
		if ( isFunction( value ) ) {
			return this.each( function( j ) {
				jQuery( this ).removeClass( value.call( this, j, getClass( this ) ) );
			} );
		}
		if ( !arguments.length ) {
			return this.attr( "class", "" );
		}
		classes = classesToArray( value );
		if ( classes.length ) {
			while ( ( elem = this[ i++ ] ) ) {
				curValue = getClass( elem );
				// This expression is here for better compressibility (see addClass)
				cur = elem.nodeType === 1 && ( " " + stripAndCollapse( curValue ) + " " );
				if ( cur ) {
					j = 0;
					while ( ( clazz = classes[ j++ ] ) ) {
						// Remove *all* instances
						while ( cur.indexOf( " " + clazz + " " ) > -1 ) {
							cur = cur.replace( " " + clazz + " ", " " );
						}
					}
					// Only assign if different to avoid unneeded rendering.
					finalValue = stripAndCollapse( cur );
					if ( curValue !== finalValue ) {
						elem.setAttribute( "class", finalValue );
					}
				}
			}
		}
		return this;
	},
	toggleClass: function( value, stateVal ) {
		var type = typeof value,
			isValidValue = type === "string" || Array.isArray( value );
		if ( typeof stateVal === "boolean" && isValidValue ) {
			return stateVal ? this.addClass( value ) : this.removeClass( value );
		}
		if ( isFunction( value ) ) {
			return this.each( function( i ) {
				jQuery( this ).toggleClass(
					value.call( this, i, getClass( this ), stateVal ),
					stateVal
				);
			} );
		}
		return this.each( function() {
			var className, i, self, classNames;
			if ( isValidValue ) {
				// Toggle individual class names
				i = 0;
				self = jQuery( this );
				classNames = classesToArray( value );
				while ( ( className = classNames[ i++ ] ) ) {
					// Check each className given, space separated list
					if ( self.hasClass( className ) ) {
						self.removeClass( className );
					} else {
						self.addClass( className );
					}
				}
			// Toggle whole class name
			} else if ( value === undefined || type === "boolean" ) {
				className = getClass( this );
				if ( className ) {
					// Store className if set
					dataPriv.set( this, "__className__", className );
				}
				// If the element has a class name or if we're passed `false`,
				// then remove the whole classname (if there was one, the above saved it).
				// Otherwise bring back whatever was previously saved (if anything),
				// falling back to the empty string if nothing was stored.
				if ( this.setAttribute ) {
					this.setAttribute( "class",
						className || value === false ?
						"" :
						dataPriv.get( this, "__className__" ) || ""
					);
				}
			}
		} );
	},
	hasClass: function( selector ) {
		var className, elem,
			i = 0;
		className = " " + selector + " ";
		while ( ( elem = this[ i++ ] ) ) {
			if ( elem.nodeType === 1 &&
				( " " + stripAndCollapse( getClass( elem ) ) + " " ).indexOf( className ) > -1 ) {
					return true;
			}
		}
		return false;
	}
} );
var rreturn = /\r/g;
jQuery.fn.extend( {
	val: function( value ) {
		var hooks, ret, valueIsFunction,
			elem = this[ 0 ];
		if ( !arguments.length ) {
			if ( elem ) {
				hooks = jQuery.valHooks[ elem.type ] ||
					jQuery.valHooks[ elem.nodeName.toLowerCase() ];
				if ( hooks &&
					"get" in hooks &&
					( ret = hooks.get( elem, "value" ) ) !== undefined
				) {
					return ret;
				}
				ret = elem.value;
				// Handle most common string cases
				if ( typeof ret === "string" ) {
					return ret.replace( rreturn, "" );
				}
				// Handle cases where value is null/undef or number
				return ret == null ? "" : ret;
			}
			return;
		}
		valueIsFunction = isFunction( value );
		return this.each( function( i ) {
			var val;
			if ( this.nodeType !== 1 ) {
				return;
			}
			if ( valueIsFunction ) {
				val = value.call( this, i, jQuery( this ).val() );
			} else {
				val = value;
			}
			// Treat null/undefined as ""; convert numbers to string
			if ( val == null ) {
				val = "";
			} else if ( typeof val === "number" ) {
				val += "";
			} else if ( Array.isArray( val ) ) {
				val = jQuery.map( val, function( value ) {
					return value == null ? "" : value + "";
				} );
			}
			hooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];
			// If set returns undefined, fall back to normal setting
			if ( !hooks || !( "set" in hooks ) || hooks.set( this, val, "value" ) === undefined ) {
				this.value = val;
			}
		} );
	}
} );
jQuery.extend( {
	valHooks: {
		option: {
			get: function( elem ) {
				var val = jQuery.find.attr( elem, "value" );
				return val != null ?
					val :
					// Support: IE <=10 - 11 only
					// option.text throws exceptions (#14686, #14858)
					// Strip and collapse whitespace
					// https://html.spec.whatwg.org/#strip-and-collapse-whitespace
					stripAndCollapse( jQuery.text( elem ) );
			}
		},
		select: {
			get: function( elem ) {
				var value, option, i,
					options = elem.options,
					index = elem.selectedIndex,
					one = elem.type === "select-one",
					values = one ? null : [],
					max = one ? index + 1 : options.length;
				if ( index < 0 ) {
					i = max;
				} else {
					i = one ? index : 0;
				}
				// Loop through all the selected options
				for ( ; i < max; i++ ) {
					option = options[ i ];
					// Support: IE <=9 only
					// IE8-9 doesn't update selected after form reset (#2551)
					if ( ( option.selected || i === index ) &&
							// Don't return options that are disabled or in a disabled optgroup
							!option.disabled &&
							( !option.parentNode.disabled ||
								!nodeName( option.parentNode, "optgroup" ) ) ) {
						// Get the specific value for the option
						value = jQuery( option ).val();
						// We don't need an array for one selects
						if ( one ) {
							return value;
						}
						// Multi-Selects return an array
						values.push( value );
					}
				}
				return values;
			},
			set: function( elem, value ) {
				var optionSet, option,
					options = elem.options,
					values = jQuery.makeArray( value ),
					i = options.length;
				while ( i-- ) {
					option = options[ i ];
					/* eslint-disable no-cond-assign */
					if ( option.selected =
						jQuery.inArray( jQuery.valHooks.option.get( option ), values ) > -1
					) {
						optionSet = true;
					}
					/* eslint-enable no-cond-assign */
				}
				// Force browsers to behave consistently when non-matching value is set
				if ( !optionSet ) {
					elem.selectedIndex = -1;
				}
				return values;
			}
		}
	}
} );
// Radios and checkboxes getter/setter
jQuery.each( [ "radio", "checkbox" ], function() {
	jQuery.valHooks[ this ] = {
		set: function( elem, value ) {
			if ( Array.isArray( value ) ) {
				return ( elem.checked = jQuery.inArray( jQuery( elem ).val(), value ) > -1 );
			}
		}
	};
	if ( !support.checkOn ) {
		jQuery.valHooks[ this ].get = function( elem ) {
			return elem.getAttribute( "value" ) === null ? "on" : elem.value;
		};
	}
} );
// Return jQuery for attributes-only inclusion
support.focusin = "onfocusin" in window;
var rfocusMorph = /^(?:focusinfocus|focusoutblur)$/,
	stopPropagationCallback = function( e ) {
		e.stopPropagation();
	};
jQuery.extend( jQuery.event, {
	trigger: function( event, data, elem, onlyHandlers ) {
		var i, cur, tmp, bubbleType, ontype, handle, special, lastElement,
			eventPath = [ elem || document ],
			type = hasOwn.call( event, "type" ) ? event.type : event,
			namespaces = hasOwn.call( event, "namespace" ) ? event.namespace.split( "." ) : [];
		cur = lastElement = tmp = elem = elem || document;
		// Don't do events on text and comment nodes
		if ( elem.nodeType === 3 || elem.nodeType === 8 ) {
			return;
		}
		// focus/blur morphs to focusin/out; ensure we're not firing them right now
		if ( rfocusMorph.test( type + jQuery.event.triggered ) ) {
			return;
		}
		if ( type.indexOf( "." ) > -1 ) {
			// Namespaced trigger; create a regexp to match event type in handle()
			namespaces = type.split( "." );
			type = namespaces.shift();
			namespaces.sort();
		}
		ontype = type.indexOf( ":" ) < 0 && "on" + type;
		// Caller can pass in a jQuery.Event object, Object, or just an event type string
		event = event[ jQuery.expando ] ?
			event :
			new jQuery.Event( type, typeof event === "object" && event );
		// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)
		event.isTrigger = onlyHandlers ? 2 : 3;
		event.namespace = namespaces.join( "." );
		event.rnamespace = event.namespace ?
			new RegExp( "(^|\\.)" + namespaces.join( "\\.(?:.*\\.|)" ) + "(\\.|$)" ) :
			null;
		// Clean up the event in case it is being reused
		event.result = undefined;
		if ( !event.target ) {
			event.target = elem;
		}
		// Clone any incoming data and prepend the event, creating the handler arg list
		data = data == null ?
			[ event ] :
			jQuery.makeArray( data, [ event ] );
		// Allow special events to draw outside the lines
		special = jQuery.event.special[ type ] || {};
		if ( !onlyHandlers && special.trigger && special.trigger.apply( elem, data ) === false ) {
			return;
		}
		// Determine event propagation path in advance, per W3C events spec (#9951)
		// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)
		if ( !onlyHandlers && !special.noBubble && !isWindow( elem ) ) {
			bubbleType = special.delegateType || type;
			if ( !rfocusMorph.test( bubbleType + type ) ) {
				cur = cur.parentNode;
			}
			for ( ; cur; cur = cur.parentNode ) {
				eventPath.push( cur );
				tmp = cur;
			}
			// Only add window if we got to document (e.g., not plain obj or detached DOM)
			if ( tmp === ( elem.ownerDocument || document ) ) {
				eventPath.push( tmp.defaultView || tmp.parentWindow || window );
			}
		}
		// Fire handlers on the event path
		i = 0;
		while ( ( cur = eventPath[ i++ ] ) && !event.isPropagationStopped() ) {
			lastElement = cur;
			event.type = i > 1 ?
				bubbleType :
				special.bindType || type;
			// jQuery handler
			handle = ( dataPriv.get( cur, "events" ) || {} )[ event.type ] &&
				dataPriv.get( cur, "handle" );
			if ( handle ) {
				handle.apply( cur, data );
			}
			// Native handler
			handle = ontype && cur[ ontype ];
			if ( handle && handle.apply && acceptData( cur ) ) {
				event.result = handle.apply( cur, data );
				if ( event.result === false ) {
					event.preventDefault();
				}
			}
		}
		event.type = type;
		// If nobody prevented the default action, do it now
		if ( !onlyHandlers && !event.isDefaultPrevented() ) {
			if ( ( !special._default ||
				special._default.apply( eventPath.pop(), data ) === false ) &&
				acceptData( elem ) ) {
				// Call a native DOM method on the target with the same name as the event.
				// Don't do default actions on window, that's where global variables be (#6170)
				if ( ontype && isFunction( elem[ type ] ) && !isWindow( elem ) ) {
					// Don't re-trigger an onFOO event when we call its FOO() method
					tmp = elem[ ontype ];
					if ( tmp ) {
						elem[ ontype ] = null;
					}
					// Prevent re-triggering of the same event, since we already bubbled it above
					jQuery.event.triggered = type;
					if ( event.isPropagationStopped() ) {
						lastElement.addEventListener( type, stopPropagationCallback );
					}
					elem[ type ]();
					if ( event.isPropagationStopped() ) {
						lastElement.removeEventListener( type, stopPropagationCallback );
					}
					jQuery.event.triggered = undefined;
					if ( tmp ) {
						elem[ ontype ] = tmp;
					}
				}
			}
		}
		return event.result;
	},
	// Piggyback on a donor event to simulate a different one
	// Used only for `focus(in | out)` events
	simulate: function( type, elem, event ) {
		var e = jQuery.extend(
			new jQuery.Event(),
			event,
			{
				type: type,
				isSimulated: true
			}
		);
		jQuery.event.trigger( e, null, elem );
	}
} );
jQuery.fn.extend( {
	trigger: function( type, data ) {
		return this.each( function() {
			jQuery.event.trigger( type, data, this );
		} );
	},
	triggerHandler: function( type, data ) {
		var elem = this[ 0 ];
		if ( elem ) {
			return jQuery.event.trigger( type, data, elem, true );
		}
	}
} );
// Support: Firefox <=44
// Firefox doesn't have focus(in | out) events
// Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787
//
// Support: Chrome <=48 - 49, Safari <=9.0 - 9.1
// focus(in | out) events fire after focus & blur events,
// which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order
// Related ticket - https://bugs.chromium.org/p/chromium/issues/detail?id=449857
if ( !support.focusin ) {
	jQuery.each( { focus: "focusin", blur: "focusout" }, function( orig, fix ) {
		// Attach a single capturing handler on the document while someone wants focusin/focusout
		var handler = function( event ) {
			jQuery.event.simulate( fix, event.target, jQuery.event.fix( event ) );
		};
		jQuery.event.special[ fix ] = {
			setup: function() {
				var doc = this.ownerDocument || this,
					attaches = dataPriv.access( doc, fix );
				if ( !attaches ) {
					doc.addEventListener( orig, handler, true );
				}
				dataPriv.access( doc, fix, ( attaches || 0 ) + 1 );
			},
			teardown: function() {
				var doc = this.ownerDocument || this,
					attaches = dataPriv.access( doc, fix ) - 1;
				if ( !attaches ) {
					doc.removeEventListener( orig, handler, true );
					dataPriv.remove( doc, fix );
				} else {
					dataPriv.access( doc, fix, attaches );
				}
			}
		};
	} );
}
var location = window.location;
var nonce = Date.now();
var rquery = ( /\?/ );
// Cross-browser xml parsing
jQuery.parseXML = function( data ) {
	var xml;
	if ( !data || typeof data !== "string" ) {
		return null;
	}
	// Support: IE 9 - 11 only
	// IE throws on parseFromString with invalid input.
	try {
		xml = ( new window.DOMParser() ).parseFromString( data, "text/xml" );
	} catch ( e ) {
		xml = undefined;
	}
	if ( !xml || xml.getElementsByTagName( "parsererror" ).length ) {
		jQuery.error( "Invalid XML: " + data );
	}
	return xml;
};
var
	rbracket = /\[\]$/,
	rCRLF = /\r?\n/g,
	rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,
	rsubmittable = /^(?:input|select|textarea|keygen)/i;
function buildParams( prefix, obj, traditional, add ) {
	var name;
	if ( Array.isArray( obj ) ) {
		// Serialize array item.
		jQuery.each( obj, function( i, v ) {
			if ( traditional || rbracket.test( prefix ) ) {
				// Treat each array item as a scalar.
				add( prefix, v );
			} else {
				// Item is non-scalar (array or object), encode its numeric index.
				buildParams(
					prefix + "[" + ( typeof v === "object" && v != null ? i : "" ) + "]",
					v,
					traditional,
					add
				);
			}
		} );
	} else if ( !traditional && toType( obj ) === "object" ) {
		// Serialize object item.
		for ( name in obj ) {
			buildParams( prefix + "[" + name + "]", obj[ name ], traditional, add );
		}
	} else {
		// Serialize scalar item.
		add( prefix, obj );
	}
}
// Serialize an array of form elements or a set of
// key/values into a query string
jQuery.param = function( a, traditional ) {
	var prefix,
		s = [],
		add = function( key, valueOrFunction ) {
			// If value is a function, invoke it and use its return value
			var value = isFunction( valueOrFunction ) ?
				valueOrFunction() :
				valueOrFunction;
			s[ s.length ] = encodeURIComponent( key ) + "=" +
				encodeURIComponent( value == null ? "" : value );
		};
	// If an array was passed in, assume that it is an array of form elements.
	if ( Array.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {
		// Serialize the form elements
		jQuery.each( a, function() {
			add( this.name, this.value );
		} );
	} else {
		// If traditional, encode the "old" way (the way 1.3.2 or older
		// did it), otherwise encode params recursively.
		for ( prefix in a ) {
			buildParams( prefix, a[ prefix ], traditional, add );
		}
	}
	// Return the resulting serialization
	return s.join( "&" );
};
jQuery.fn.extend( {
	serialize: function() {
		return jQuery.param( this.serializeArray() );
	},
	serializeArray: function() {
		return this.map( function() {
			// Can add propHook for "elements" to filter or add form elements
			var elements = jQuery.prop( this, "elements" );
			return elements ? jQuery.makeArray( elements ) : this;
		} )
		.filter( function() {
			var type = this.type;
			// Use .is( ":disabled" ) so that fieldset[disabled] works
			return this.name && !jQuery( this ).is( ":disabled" ) &&
				rsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&
				( this.checked || !rcheckableType.test( type ) );
		} )
		.map( function( i, elem ) {
			var val = jQuery( this ).val();
			if ( val == null ) {
				return null;
			}
			if ( Array.isArray( val ) ) {
				return jQuery.map( val, function( val ) {
					return { name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
				} );
			}
			return { name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
		} ).get();
	}
} );
var
	r20 = /%20/g,
	rhash = /#.*$/,
	rantiCache = /([?&])_=[^&]*/,
	rheaders = /^(.*?):[ \t]*([^\r\n]*)$/mg,
	// #7653, #8125, #8152: local protocol detection
	rlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,
	rnoContent = /^(?:GET|HEAD)$/,
	rprotocol = /^\/\//,
	/* Prefilters
	 * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)
	 * 2) These are called:
	 *    - BEFORE asking for a transport
	 *    - AFTER param serialization (s.data is a string if s.processData is true)
	 * 3) key is the dataType
	 * 4) the catchall symbol "*" can be used
	 * 5) execution will start with transport dataType and THEN continue down to "*" if needed
	 */
	prefilters = {},
	/* Transports bindings
	 * 1) key is the dataType
	 * 2) the catchall symbol "*" can be used
	 * 3) selection will start with transport dataType and THEN go to "*" if needed
	 */
	transports = {},
	// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression
	allTypes = "*/".concat( "*" ),
	// Anchor tag for parsing the document origin
	originAnchor = document.createElement( "a" );
	originAnchor.href = location.href;
// Base "constructor" for jQuery.ajaxPrefilter and jQuery.ajaxTransport
function addToPrefiltersOrTransports( structure ) {
	// dataTypeExpression is optional and defaults to "*"
	return function( dataTypeExpression, func ) {
		if ( typeof dataTypeExpression !== "string" ) {
			func = dataTypeExpression;
			dataTypeExpression = "*";
		}
		var dataType,
			i = 0,
			dataTypes = dataTypeExpression.toLowerCase().match( rnothtmlwhite ) || [];
		if ( isFunction( func ) ) {
			// For each dataType in the dataTypeExpression
			while ( ( dataType = dataTypes[ i++ ] ) ) {
				// Prepend if requested
				if ( dataType[ 0 ] === "+" ) {
					dataType = dataType.slice( 1 ) || "*";
					( structure[ dataType ] = structure[ dataType ] || [] ).unshift( func );
				// Otherwise append
				} else {
					( structure[ dataType ] = structure[ dataType ] || [] ).push( func );
				}
			}
		}
	};
}
// Base inspection function for prefilters and transports
function inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {
	var inspected = {},
		seekingTransport = ( structure === transports );
	function inspect( dataType ) {
		var selected;
		inspected[ dataType ] = true;
		jQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {
			var dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );
			if ( typeof dataTypeOrTransport === "string" &&
				!seekingTransport && !inspected[ dataTypeOrTransport ] ) {
				options.dataTypes.unshift( dataTypeOrTransport );
				inspect( dataTypeOrTransport );
				return false;
			} else if ( seekingTransport ) {
				return !( selected = dataTypeOrTransport );
			}
		} );
		return selected;
	}
	return inspect( options.dataTypes[ 0 ] ) || !inspected[ "*" ] && inspect( "*" );
}
// A special extend for ajax options
// that takes "flat" options (not to be deep extended)
// Fixes #9887
function ajaxExtend( target, src ) {
	var key, deep,
		flatOptions = jQuery.ajaxSettings.flatOptions || {};
	for ( key in src ) {
		if ( src[ key ] !== undefined ) {
			( flatOptions[ key ] ? target : ( deep || ( deep = {} ) ) )[ key ] = src[ key ];
		}
	}
	if ( deep ) {
		jQuery.extend( true, target, deep );
	}
	return target;
}
/* Handles responses to an ajax request:
 * - finds the right dataType (mediates between content-type and expected dataType)
 * - returns the corresponding response
 */
function ajaxHandleResponses( s, jqXHR, responses ) {
	var ct, type, finalDataType, firstDataType,
		contents = s.contents,
		dataTypes = s.dataTypes;
	// Remove auto dataType and get content-type in the process
	while ( dataTypes[ 0 ] === "*" ) {
		dataTypes.shift();
		if ( ct === undefined ) {
			ct = s.mimeType || jqXHR.getResponseHeader( "Content-Type" );
		}
	}
	// Check if we're dealing with a known content-type
	if ( ct ) {
		for ( type in contents ) {
			if ( contents[ type ] && contents[ type ].test( ct ) ) {
				dataTypes.unshift( type );
				break;
			}
		}
	}
	// Check to see if we have a response for the expected dataType
	if ( dataTypes[ 0 ] in responses ) {
		finalDataType = dataTypes[ 0 ];
	} else {
		// Try convertible dataTypes
		for ( type in responses ) {
			if ( !dataTypes[ 0 ] || s.converters[ type + " " + dataTypes[ 0 ] ] ) {
				finalDataType = type;
				break;
			}
			if ( !firstDataType ) {
				firstDataType = type;
			}
		}
		// Or just use first one
		finalDataType = finalDataType || firstDataType;
	}
	// If we found a dataType
	// We add the dataType to the list if needed
	// and return the corresponding response
	if ( finalDataType ) {
		if ( finalDataType !== dataTypes[ 0 ] ) {
			dataTypes.unshift( finalDataType );
		}
		return responses[ finalDataType ];
	}
}
/* Chain conversions given the request and the original response
 * Also sets the responseXXX fields on the jqXHR instance
 */
function ajaxConvert( s, response, jqXHR, isSuccess ) {
	var conv2, current, conv, tmp, prev,
		converters = {},
		// Work with a copy of dataTypes in case we need to modify it for conversion
		dataTypes = s.dataTypes.slice();
	// Create converters map with lowercased keys
	if ( dataTypes[ 1 ] ) {
		for ( conv in s.converters ) {
			converters[ conv.toLowerCase() ] = s.converters[ conv ];
		}
	}
	current = dataTypes.shift();
	// Convert to each sequential dataType
	while ( current ) {
		if ( s.responseFields[ current ] ) {
			jqXHR[ s.responseFields[ current ] ] = response;
		}
		// Apply the dataFilter if provided
		if ( !prev && isSuccess && s.dataFilter ) {
			response = s.dataFilter( response, s.dataType );
		}
		prev = current;
		current = dataTypes.shift();
		if ( current ) {
			// There's only work to do if current dataType is non-auto
			if ( current === "*" ) {
				current = prev;
			// Convert response if prev dataType is non-auto and differs from current
			} else if ( prev !== "*" && prev !== current ) {
				// Seek a direct converter
				conv = converters[ prev + " " + current ] || converters[ "* " + current ];
				// If none found, seek a pair
				if ( !conv ) {
					for ( conv2 in converters ) {
						// If conv2 outputs current
						tmp = conv2.split( " " );
						if ( tmp[ 1 ] === current ) {
							// If prev can be converted to accepted input
							conv = converters[ prev + " " + tmp[ 0 ] ] ||
								converters[ "* " + tmp[ 0 ] ];
							if ( conv ) {
								// Condense equivalence converters
								if ( conv === true ) {
									conv = converters[ conv2 ];
								// Otherwise, insert the intermediate dataType
								} else if ( converters[ conv2 ] !== true ) {
									current = tmp[ 0 ];
									dataTypes.unshift( tmp[ 1 ] );
								}
								break;
							}
						}
					}
				}
				// Apply converter (if not an equivalence)
				if ( conv !== true ) {
					// Unless errors are allowed to bubble, catch and return them
					if ( conv && s.throws ) {
						response = conv( response );
					} else {
						try {
							response = conv( response );
						} catch ( e ) {
							return {
								state: "parsererror",
								error: conv ? e : "No conversion from " + prev + " to " + current
							};
						}
					}
				}
			}
		}
	}
	return { state: "success", data: response };
}
jQuery.extend( {
	// Counter for holding the number of active queries
	active: 0,
	// Last-Modified header cache for next request
	lastModified: {},
	etag: {},
	ajaxSettings: {
		url: location.href,
		type: "GET",
		isLocal: rlocalProtocol.test( location.protocol ),
		global: true,
		processData: true,
		async: true,
		contentType: "application/x-www-form-urlencoded; charset=UTF-8",
		/*
		timeout: 0,
		data: null,
		dataType: null,
		username: null,
		password: null,
		cache: null,
		throws: false,
		traditional: false,
		headers: {},
		*/
		accepts: {
			"*": allTypes,
			text: "text/plain",
			html: "text/html",
			xml: "application/xml, text/xml",
			json: "application/json, text/javascript"
		},
		contents: {
			xml: /\bxml\b/,
			html: /\bhtml/,
			json: /\bjson\b/
		},
		responseFields: {
			xml: "responseXML",
			text: "responseText",
			json: "responseJSON"
		},
		// Data converters
		// Keys separate source (or catchall "*") and destination types with a single space
		converters: {
			// Convert anything to text
			"* text": String,
			// Text to html (true = no transformation)
			"text html": true,
			// Evaluate text as a json expression
			"text json": JSON.parse,
			// Parse text as xml
			"text xml": jQuery.parseXML
		},
		// For options that shouldn't be deep extended:
		// you can add your own custom options here if
		// and when you create one that shouldn't be
		// deep extended (see ajaxExtend)
		flatOptions: {
			url: true,
			context: true
		}
	},
	// Creates a full fledged settings object into target
	// with both ajaxSettings and settings fields.
	// If target is omitted, writes into ajaxSettings.
	ajaxSetup: function( target, settings ) {
		return settings ?
			// Building a settings object
			ajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :
			// Extending ajaxSettings
			ajaxExtend( jQuery.ajaxSettings, target );
	},
	ajaxPrefilter: addToPrefiltersOrTransports( prefilters ),
	ajaxTransport: addToPrefiltersOrTransports( transports ),
	// Main method
	ajax: function( url, options ) {
		// If url is an object, simulate pre-1.5 signature
		if ( typeof url === "object" ) {
			options = url;
			url = undefined;
		}
		// Force options to be an object
		options = options || {};
		var transport,
			// URL without anti-cache param
			cacheURL,
			// Response headers
			responseHeadersString,
			responseHeaders,
			// timeout handle
			timeoutTimer,
			// Url cleanup var
			urlAnchor,
			// Request state (becomes false upon send and true upon completion)
			completed,
			// To know if global events are to be dispatched
			fireGlobals,
			// Loop variable
			i,
			// uncached part of the url
			uncached,
			// Create the final options object
			s = jQuery.ajaxSetup( {}, options ),
			// Callbacks context
			callbackContext = s.context || s,
			// Context for global events is callbackContext if it is a DOM node or jQuery collection
			globalEventContext = s.context &&
				( callbackContext.nodeType || callbackContext.jquery ) ?
					jQuery( callbackContext ) :
					jQuery.event,
			// Deferreds
			deferred = jQuery.Deferred(),
			completeDeferred = jQuery.Callbacks( "once memory" ),
			// Status-dependent callbacks
			statusCode = s.statusCode || {},
			// Headers (they are sent all at once)
			requestHeaders = {},
			requestHeadersNames = {},
			// Default abort message
			strAbort = "canceled",
			// Fake xhr
			jqXHR = {
				readyState: 0,
				// Builds headers hashtable if needed
				getResponseHeader: function( key ) {
					var match;
					if ( completed ) {
						if ( !responseHeaders ) {
							responseHeaders = {};
							while ( ( match = rheaders.exec( responseHeadersString ) ) ) {
								responseHeaders[ match[ 1 ].toLowerCase() ] = match[ 2 ];
							}
						}
						match = responseHeaders[ key.toLowerCase() ];
					}
					return match == null ? null : match;
				},
				// Raw string
				getAllResponseHeaders: function() {
					return completed ? responseHeadersString : null;
				},
				// Caches the header
				setRequestHeader: function( name, value ) {
					if ( completed == null ) {
						name = requestHeadersNames[ name.toLowerCase() ] =
							requestHeadersNames[ name.toLowerCase() ] || name;
						requestHeaders[ name ] = value;
					}
					return this;
				},
				// Overrides response content-type header
				overrideMimeType: function( type ) {
					if ( completed == null ) {
						s.mimeType = type;
					}
					return this;
				},
				// Status-dependent callbacks
				statusCode: function( map ) {
					var code;
					if ( map ) {
						if ( completed ) {
							// Execute the appropriate callbacks
							jqXHR.always( map[ jqXHR.status ] );
						} else {
							// Lazy-add the new callbacks in a way that preserves old ones
							for ( code in map ) {
								statusCode[ code ] = [ statusCode[ code ], map[ code ] ];
							}
						}
					}
					return this;
				},
				// Cancel the request
				abort: function( statusText ) {
					var finalText = statusText || strAbort;
					if ( transport ) {
						transport.abort( finalText );
					}
					done( 0, finalText );
					return this;
				}
			};
		// Attach deferreds
		deferred.promise( jqXHR );
		// Add protocol if not provided (prefilters might expect it)
		// Handle falsy url in the settings object (#10093: consistency with old signature)
		// We also use the url parameter if available
		s.url = ( ( url || s.url || location.href ) + "" )
			.replace( rprotocol, location.protocol + "//" );
		// Alias method option to type as per ticket #12004
		s.type = options.method || options.type || s.method || s.type;
		// Extract dataTypes list
		s.dataTypes = ( s.dataType || "*" ).toLowerCase().match( rnothtmlwhite ) || [ "" ];
		// A cross-domain request is in order when the origin doesn't match the current origin.
		if ( s.crossDomain == null ) {
			urlAnchor = document.createElement( "a" );
			// Support: IE <=8 - 11, Edge 12 - 15
			// IE throws exception on accessing the href property if url is malformed,
			// e.g. http://example.com:80x/
			try {
				urlAnchor.href = s.url;
				// Support: IE <=8 - 11 only
				// Anchor's host property isn't correctly set when s.url is relative
				urlAnchor.href = urlAnchor.href;
				s.crossDomain = originAnchor.protocol + "//" + originAnchor.host !==
					urlAnchor.protocol + "//" + urlAnchor.host;
			} catch ( e ) {
				// If there is an error parsing the URL, assume it is crossDomain,
				// it can be rejected by the transport if it is invalid
				s.crossDomain = true;
			}
		}
		// Convert data if not already a string
		if ( s.data && s.processData && typeof s.data !== "string" ) {
			s.data = jQuery.param( s.data, s.traditional );
		}
		// Apply prefilters
		inspectPrefiltersOrTransports( prefilters, s, options, jqXHR );
		// If request was aborted inside a prefilter, stop there
		if ( completed ) {
			return jqXHR;
		}
		// We can fire global events as of now if asked to
		// Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)
		fireGlobals = jQuery.event && s.global;
		// Watch for a new set of requests
		if ( fireGlobals && jQuery.active++ === 0 ) {
			jQuery.event.trigger( "ajaxStart" );
		}
		// Uppercase the type
		s.type = s.type.toUpperCase();
		// Determine if request has content
		s.hasContent = !rnoContent.test( s.type );
		// Save the URL in case we're toying with the If-Modified-Since
		// and/or If-None-Match header later on
		// Remove hash to simplify url manipulation
		cacheURL = s.url.replace( rhash, "" );
		// More options handling for requests with no content
		if ( !s.hasContent ) {
			// Remember the hash so we can put it back
			uncached = s.url.slice( cacheURL.length );
			// If data is available and should be processed, append data to url
			if ( s.data && ( s.processData || typeof s.data === "string" ) ) {
				cacheURL += ( rquery.test( cacheURL ) ? "&" : "?" ) + s.data;
				// #9682: remove data so that it's not used in an eventual retry
				delete s.data;
			}
			// Add or update anti-cache param if needed
			if ( s.cache === false ) {
				cacheURL = cacheURL.replace( rantiCache, "$1" );
				uncached = ( rquery.test( cacheURL ) ? "&" : "?" ) + "_=" + ( nonce++ ) + uncached;
			}
			// Put hash and anti-cache on the URL that will be requested (gh-1732)
			s.url = cacheURL + uncached;
		// Change '%20' to '+' if this is encoded form body content (gh-2658)
		} else if ( s.data && s.processData &&
			( s.contentType || "" ).indexOf( "application/x-www-form-urlencoded" ) === 0 ) {
			s.data = s.data.replace( r20, "+" );
		}
		// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
		if ( s.ifModified ) {
			if ( jQuery.lastModified[ cacheURL ] ) {
				jqXHR.setRequestHeader( "If-Modified-Since", jQuery.lastModified[ cacheURL ] );
			}
			if ( jQuery.etag[ cacheURL ] ) {
				jqXHR.setRequestHeader( "If-None-Match", jQuery.etag[ cacheURL ] );
			}
		}
		// Set the correct header, if data is being sent
		if ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {
			jqXHR.setRequestHeader( "Content-Type", s.contentType );
		}
		// Set the Accepts header for the server, depending on the dataType
		jqXHR.setRequestHeader(
			"Accept",
			s.dataTypes[ 0 ] && s.accepts[ s.dataTypes[ 0 ] ] ?
				s.accepts[ s.dataTypes[ 0 ] ] +
					( s.dataTypes[ 0 ] !== "*" ? ", " + allTypes + "; q=0.01" : "" ) :
				s.accepts[ "*" ]
		);
		// Check for headers option
		for ( i in s.headers ) {
			jqXHR.setRequestHeader( i, s.headers[ i ] );
		}
		// Allow custom headers/mimetypes and early abort
		if ( s.beforeSend &&
			( s.beforeSend.call( callbackContext, jqXHR, s ) === false || completed ) ) {
			// Abort if not done already and return
			return jqXHR.abort();
		}
		// Aborting is no longer a cancellation
		strAbort = "abort";
		// Install callbacks on deferreds
		completeDeferred.add( s.complete );
		jqXHR.done( s.success );
		jqXHR.fail( s.error );
		// Get transport
		transport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );
		// If no transport, we auto-abort
		if ( !transport ) {
			done( -1, "No Transport" );
		} else {
			jqXHR.readyState = 1;
			// Send global event
			if ( fireGlobals ) {
				globalEventContext.trigger( "ajaxSend", [ jqXHR, s ] );
			}
			// If request was aborted inside ajaxSend, stop there
			if ( completed ) {
				return jqXHR;
			}
			// Timeout
			if ( s.async && s.timeout > 0 ) {
				timeoutTimer = window.setTimeout( function() {
					jqXHR.abort( "timeout" );
				}, s.timeout );
			}
			try {
				completed = false;
				transport.send( requestHeaders, done );
			} catch ( e ) {
				// Rethrow post-completion exceptions
				if ( completed ) {
					throw e;
				}
				// Propagate others as results
				done( -1, e );
			}
		}
		// Callback for when everything is done
		function done( status, nativeStatusText, responses, headers ) {
			var isSuccess, success, error, response, modified,
				statusText = nativeStatusText;
			// Ignore repeat invocations
			if ( completed ) {
				return;
			}
			completed = true;
			// Clear timeout if it exists
			if ( timeoutTimer ) {
				window.clearTimeout( timeoutTimer );
			}
			// Dereference transport for early garbage collection
			// (no matter how long the jqXHR object will be used)
			transport = undefined;
			// Cache response headers
			responseHeadersString = headers || "";
			// Set readyState
			jqXHR.readyState = status > 0 ? 4 : 0;
			// Determine if successful
			isSuccess = status >= 200 && status < 300 || status === 304;
			// Get response data
			if ( responses ) {
				response = ajaxHandleResponses( s, jqXHR, responses );
			}
			// Convert no matter what (that way responseXXX fields are always set)
			response = ajaxConvert( s, response, jqXHR, isSuccess );
			// If successful, handle type chaining
			if ( isSuccess ) {
				// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
				if ( s.ifModified ) {
					modified = jqXHR.getResponseHeader( "Last-Modified" );
					if ( modified ) {
						jQuery.lastModified[ cacheURL ] = modified;
					}
					modified = jqXHR.getResponseHeader( "etag" );
					if ( modified ) {
						jQuery.etag[ cacheURL ] = modified;
					}
				}
				// if no content
				if ( status === 204 || s.type === "HEAD" ) {
					statusText = "nocontent";
				// if not modified
				} else if ( status === 304 ) {
					statusText = "notmodified";
				// If we have data, let's convert it
				} else {
					statusText = response.state;
					success = response.data;
					error = response.error;
					isSuccess = !error;
				}
			} else {
				// Extract error from statusText and normalize for non-aborts
				error = statusText;
				if ( status || !statusText ) {
					statusText = "error";
					if ( status < 0 ) {
						status = 0;
					}
				}
			}
			// Set data for the fake xhr object
			jqXHR.status = status;
			jqXHR.statusText = ( nativeStatusText || statusText ) + "";
			// Success/Error
			if ( isSuccess ) {
				deferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );
			} else {
				deferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );
			}
			// Status-dependent callbacks
			jqXHR.statusCode( statusCode );
			statusCode = undefined;
			if ( fireGlobals ) {
				globalEventContext.trigger( isSuccess ? "ajaxSuccess" : "ajaxError",
					[ jqXHR, s, isSuccess ? success : error ] );
			}
			// Complete
			completeDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );
			if ( fireGlobals ) {
				globalEventContext.trigger( "ajaxComplete", [ jqXHR, s ] );
				// Handle the global AJAX counter
				if ( !( --jQuery.active ) ) {
					jQuery.event.trigger( "ajaxStop" );
				}
			}
		}
		return jqXHR;
	},
	getJSON: function( url, data, callback ) {
		return jQuery.get( url, data, callback, "json" );
	},
	getScript: function( url, callback ) {
		return jQuery.get( url, undefined, callback, "script" );
	}
} );
jQuery.each( [ "get", "post" ], function( i, method ) {
	jQuery[ method ] = function( url, data, callback, type ) {
		// Shift arguments if data argument was omitted
		if ( isFunction( data ) ) {
			type = type || callback;
			callback = data;
			data = undefined;
		}
		// The url can be an options object (which then must have .url)
		return jQuery.ajax( jQuery.extend( {
			url: url,
			type: method,
			dataType: type,
			data: data,
			success: callback
		}, jQuery.isPlainObject( url ) && url ) );
	};
} );
jQuery._evalUrl = function( url ) {
	return jQuery.ajax( {
		url: url,
		// Make this explicit, since user can override this through ajaxSetup (#11264)
		type: "GET",
		dataType: "script",
		cache: true,
		async: false,
		global: false,
		"throws": true
	} );
};
jQuery.fn.extend( {
	wrapAll: function( html ) {
		var wrap;
		if ( this[ 0 ] ) {
			if ( isFunction( html ) ) {
				html = html.call( this[ 0 ] );
			}
			// The elements to wrap the target around
			wrap = jQuery( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );
			if ( this[ 0 ].parentNode ) {
				wrap.insertBefore( this[ 0 ] );
			}
			wrap.map( function() {
				var elem = this;
				while ( elem.firstElementChild ) {
					elem = elem.firstElementChild;
				}
				return elem;
			} ).append( this );
		}
		return this;
	},
	wrapInner: function( html ) {
		if ( isFunction( html ) ) {
			return this.each( function( i ) {
				jQuery( this ).wrapInner( html.call( this, i ) );
			} );
		}
		return this.each( function() {
			var self = jQuery( this ),
				contents = self.contents();
			if ( contents.length ) {
				contents.wrapAll( html );
			} else {
				self.append( html );
			}
		} );
	},
	wrap: function( html ) {
		var htmlIsFunction = isFunction( html );
		return this.each( function( i ) {
			jQuery( this ).wrapAll( htmlIsFunction ? html.call( this, i ) : html );
		} );
	},
	unwrap: function( selector ) {
		this.parent( selector ).not( "body" ).each( function() {
			jQuery( this ).replaceWith( this.childNodes );
		} );
		return this;
	}
} );
jQuery.expr.pseudos.hidden = function( elem ) {
	return !jQuery.expr.pseudos.visible( elem );
};
jQuery.expr.pseudos.visible = function( elem ) {
	return !!( elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length );
};
jQuery.ajaxSettings.xhr = function() {
	try {
		return new window.XMLHttpRequest();
	} catch ( e ) {}
};
var xhrSuccessStatus = {
		// File protocol always yields status code 0, assume 200
		0: 200,
		// Support: IE <=9 only
		// #1450: sometimes IE returns 1223 when it should be 204
		1223: 204
	},
	xhrSupported = jQuery.ajaxSettings.xhr();
support.cors = !!xhrSupported && ( "withCredentials" in xhrSupported );
support.ajax = xhrSupported = !!xhrSupported;
jQuery.ajaxTransport( function( options ) {
	var callback, errorCallback;
	// Cross domain only allowed if supported through XMLHttpRequest
	if ( support.cors || xhrSupported && !options.crossDomain ) {
		return {
			send: function( headers, complete ) {
				var i,
					xhr = options.xhr();
				xhr.open(
					options.type,
					options.url,
					options.async,
					options.username,
					options.password
				);
				// Apply custom fields if provided
				if ( options.xhrFields ) {
					for ( i in options.xhrFields ) {
						xhr[ i ] = options.xhrFields[ i ];
					}
				}
				// Override mime type if needed
				if ( options.mimeType && xhr.overrideMimeType ) {
					xhr.overrideMimeType( options.mimeType );
				}
				// X-Requested-With header
				// For cross-domain requests, seeing as conditions for a preflight are
				// akin to a jigsaw puzzle, we simply never set it to be sure.
				// (it can always be set on a per-request basis or even using ajaxSetup)
				// For same-domain requests, won't change header if already provided.
				if ( !options.crossDomain && !headers[ "X-Requested-With" ] ) {
					headers[ "X-Requested-With" ] = "XMLHttpRequest";
				}
				// Set headers
				for ( i in headers ) {
					xhr.setRequestHeader( i, headers[ i ] );
				}
				// Callback
				callback = function( type ) {
					return function() {
						if ( callback ) {
							callback = errorCallback = xhr.onload =
								xhr.onerror = xhr.onabort = xhr.ontimeout =
									xhr.onreadystatechange = null;
							if ( type === "abort" ) {
								xhr.abort();
							} else if ( type === "error" ) {
								// Support: IE <=9 only
								// On a manual native abort, IE9 throws
								// errors on any property access that is not readyState
								if ( typeof xhr.status !== "number" ) {
									complete( 0, "error" );
								} else {
									complete(
										// File: protocol always yields status 0; see #8605, #14207
										xhr.status,
										xhr.statusText
									);
								}
							} else {
								complete(
									xhrSuccessStatus[ xhr.status ] || xhr.status,
									xhr.statusText,
									// Support: IE <=9 only
									// IE9 has no XHR2 but throws on binary (trac-11426)
									// For XHR2 non-text, let the caller handle it (gh-2498)
									( xhr.responseType || "text" ) !== "text"  ||
									typeof xhr.responseText !== "string" ?
										{ binary: xhr.response } :
										{ text: xhr.responseText },
									xhr.getAllResponseHeaders()
								);
							}
						}
					};
				};
				// Listen to events
				xhr.onload = callback();
				errorCallback = xhr.onerror = xhr.ontimeout = callback( "error" );
				// Support: IE 9 only
				// Use onreadystatechange to replace onabort
				// to handle uncaught aborts
				if ( xhr.onabort !== undefined ) {
					xhr.onabort = errorCallback;
				} else {
					xhr.onreadystatechange = function() {
						// Check readyState before timeout as it changes
						if ( xhr.readyState === 4 ) {
							// Allow onerror to be called first,
							// but that will not handle a native abort
							// Also, save errorCallback to a variable
							// as xhr.onerror cannot be accessed
							window.setTimeout( function() {
								if ( callback ) {
									errorCallback();
								}
							} );
						}
					};
				}
				// Create the abort callback
				callback = callback( "abort" );
				try {
					// Do send the request (this may raise an exception)
					xhr.send( options.hasContent && options.data || null );
				} catch ( e ) {
					// #14683: Only rethrow if this hasn't been notified as an error yet
					if ( callback ) {
						throw e;
					}
				}
			},
			abort: function() {
				if ( callback ) {
					callback();
				}
			}
		};
	}
} );
// Prevent auto-execution of scripts when no explicit dataType was provided (See gh-2432)
jQuery.ajaxPrefilter( function( s ) {
	if ( s.crossDomain ) {
		s.contents.script = false;
	}
} );
// Install script dataType
jQuery.ajaxSetup( {
	accepts: {
		script: "text/javascript, application/javascript, " +
			"application/ecmascript, application/x-ecmascript"
	},
	contents: {
		script: /\b(?:java|ecma)script\b/
	},
	converters: {
		"text script": function( text ) {
			jQuery.globalEval( text );
			return text;
		}
	}
} );
// Handle cache's special case and crossDomain
jQuery.ajaxPrefilter( "script", function( s ) {
	if ( s.cache === undefined ) {
		s.cache = false;
	}
	if ( s.crossDomain ) {
		s.type = "GET";
	}
} );
// Bind script tag hack transport
jQuery.ajaxTransport( "script", function( s ) {
	// This transport only deals with cross domain requests
	if ( s.crossDomain ) {
		var script, callback;
		return {
			send: function( _, complete ) {
				script = jQuery( "<script>" ).prop( {
					charset: s.scriptCharset,
					src: s.url
				} ).on(
					"load error",
					callback = function( evt ) {
						script.remove();
						callback = null;
						if ( evt ) {
							complete( evt.type === "error" ? 404 : 200, evt.type );
						}
					}
				);
				// Use native DOM manipulation to avoid our domManip AJAX trickery
				document.head.appendChild( script[ 0 ] );
			},
			abort: function() {
				if ( callback ) {
					callback();
				}
			}
		};
	}
} );
var oldCallbacks = [],
	rjsonp = /(=)\?(?=&|$)|\?\?/;
// Default jsonp settings
jQuery.ajaxSetup( {
	jsonp: "callback",
	jsonpCallback: function() {
		var callback = oldCallbacks.pop() || ( jQuery.expando + "_" + ( nonce++ ) );
		this[ callback ] = true;
		return callback;
	}
} );
// Detect, normalize options and install callbacks for jsonp requests
jQuery.ajaxPrefilter( "json jsonp", function( s, originalSettings, jqXHR ) {
	var callbackName, overwritten, responseContainer,
		jsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?
			"url" :
			typeof s.data === "string" &&
				( s.contentType || "" )
					.indexOf( "application/x-www-form-urlencoded" ) === 0 &&
				rjsonp.test( s.data ) && "data"
		);
	// Handle iff the expected data type is "jsonp" or we have a parameter to set
	if ( jsonProp || s.dataTypes[ 0 ] === "jsonp" ) {
		// Get callback name, remembering preexisting value associated with it
		callbackName = s.jsonpCallback = isFunction( s.jsonpCallback ) ?
			s.jsonpCallback() :
			s.jsonpCallback;
		// Insert callback into url or form data
		if ( jsonProp ) {
			s[ jsonProp ] = s[ jsonProp ].replace( rjsonp, "$1" + callbackName );
		} else if ( s.jsonp !== false ) {
			s.url += ( rquery.test( s.url ) ? "&" : "?" ) + s.jsonp + "=" + callbackName;
		}
		// Use data converter to retrieve json after script execution
		s.converters[ "script json" ] = function() {
			if ( !responseContainer ) {
				jQuery.error( callbackName + " was not called" );
			}
			return responseContainer[ 0 ];
		};
		// Force json dataType
		s.dataTypes[ 0 ] = "json";
		// Install callback
		overwritten = window[ callbackName ];
		window[ callbackName ] = function() {
			responseContainer = arguments;
		};
		// Clean-up function (fires after converters)
		jqXHR.always( function() {
			// If previous value didn't exist - remove it
			if ( overwritten === undefined ) {
				jQuery( window ).removeProp( callbackName );
			// Otherwise restore preexisting value
			} else {
				window[ callbackName ] = overwritten;
			}
			// Save back as free
			if ( s[ callbackName ] ) {
				// Make sure that re-using the options doesn't screw things around
				s.jsonpCallback = originalSettings.jsonpCallback;
				// Save the callback name for future use
				oldCallbacks.push( callbackName );
			}
			// Call if it was a function and we have a response
			if ( responseContainer && isFunction( overwritten ) ) {
				overwritten( responseContainer[ 0 ] );
			}
			responseContainer = overwritten = undefined;
		} );
		// Delegate to script
		return "script";
	}
} );
// Support: Safari 8 only
// In Safari 8 documents created via document.implementation.createHTMLDocument
// collapse sibling forms: the second one becomes a child of the first one.
// Because of that, this security measure has to be disabled in Safari 8.
// https://bugs.webkit.org/show_bug.cgi?id=137337
support.createHTMLDocument = ( function() {
	var body = document.implementation.createHTMLDocument( "" ).body;
	body.innerHTML = "<form></form><form></form>";
	return body.childNodes.length === 2;
} )();
// Argument "data" should be string of html
// context (optional): If specified, the fragment will be created in this context,
// defaults to document
// keepScripts (optional): If true, will include scripts passed in the html string
jQuery.parseHTML = function( data, context, keepScripts ) {
	if ( typeof data !== "string" ) {
		return [];
	}
	if ( typeof context === "boolean" ) {
		keepScripts = context;
		context = false;
	}
	var base, parsed, scripts;
	if ( !context ) {
		// Stop scripts or inline event handlers from being executed immediately
		// by using document.implementation
		if ( support.createHTMLDocument ) {
			context = document.implementation.createHTMLDocument( "" );
			// Set the base href for the created document
			// so any parsed elements with URLs
			// are based on the document's URL (gh-2965)
			base = context.createElement( "base" );
			base.href = document.location.href;
			context.head.appendChild( base );
		} else {
			context = document;
		}
	}
	parsed = rsingleTag.exec( data );
	scripts = !keepScripts && [];
	// Single tag
	if ( parsed ) {
		return [ context.createElement( parsed[ 1 ] ) ];
	}
	parsed = buildFragment( [ data ], context, scripts );
	if ( scripts && scripts.length ) {
		jQuery( scripts ).remove();
	}
	return jQuery.merge( [], parsed.childNodes );
};
/**
 * Load a url into a page
 */
jQuery.fn.load = function( url, params, callback ) {
	var selector, type, response,
		self = this,
		off = url.indexOf( " " );
	if ( off > -1 ) {
		selector = stripAndCollapse( url.slice( off ) );
		url = url.slice( 0, off );
	}
	// If it's a function
	if ( isFunction( params ) ) {
		// We assume that it's the callback
		callback = params;
		params = undefined;
	// Otherwise, build a param string
	} else if ( params && typeof params === "object" ) {
		type = "POST";
	}
	// If we have elements to modify, make the request
	if ( self.length > 0 ) {
		jQuery.ajax( {
			url: url,
			// If "type" variable is undefined, then "GET" method will be used.
			// Make value of this field explicit since
			// user can override it through ajaxSetup method
			type: type || "GET",
			dataType: "html",
			data: params
		} ).done( function( responseText ) {
			// Save response for use in complete callback
			response = arguments;
			self.html( selector ?
				// If a selector was specified, locate the right elements in a dummy div
				// Exclude scripts to avoid IE 'Permission Denied' errors
				jQuery( "<div>" ).append( jQuery.parseHTML( responseText ) ).find( selector ) :
				// Otherwise use the full result
				responseText );
		// If the request succeeds, this function gets "data", "status", "jqXHR"
		// but they are ignored because response was set above.
		// If it fails, this function gets "jqXHR", "status", "error"
		} ).always( callback && function( jqXHR, status ) {
			self.each( function() {
				callback.apply( this, response || [ jqXHR.responseText, status, jqXHR ] );
			} );
		} );
	}
	return this;
};
// Attach a bunch of functions for handling common AJAX events
jQuery.each( [
	"ajaxStart",
	"ajaxStop",
	"ajaxComplete",
	"ajaxError",
	"ajaxSuccess",
	"ajaxSend"
], function( i, type ) {
	jQuery.fn[ type ] = function( fn ) {
		return this.on( type, fn );
	};
} );
jQuery.expr.pseudos.animated = function( elem ) {
	return jQuery.grep( jQuery.timers, function( fn ) {
		return elem === fn.elem;
	} ).length;
};
jQuery.offset = {
	setOffset: function( elem, options, i ) {
		var curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition,
			position = jQuery.css( elem, "position" ),
			curElem = jQuery( elem ),
			props = {};
		// Set position first, in-case top/left are set even on static elem
		if ( position === "static" ) {
			elem.style.position = "relative";
		}
		curOffset = curElem.offset();
		curCSSTop = jQuery.css( elem, "top" );
		curCSSLeft = jQuery.css( elem, "left" );
		calculatePosition = ( position === "absolute" || position === "fixed" ) &&
			( curCSSTop + curCSSLeft ).indexOf( "auto" ) > -1;
		// Need to be able to calculate position if either
		// top or left is auto and position is either absolute or fixed
		if ( calculatePosition ) {
			curPosition = curElem.position();
			curTop = curPosition.top;
			curLeft = curPosition.left;
		} else {
			curTop = parseFloat( curCSSTop ) || 0;
			curLeft = parseFloat( curCSSLeft ) || 0;
		}
		if ( isFunction( options ) ) {
			// Use jQuery.extend here to allow modification of coordinates argument (gh-1848)
			options = options.call( elem, i, jQuery.extend( {}, curOffset ) );
		}
		if ( options.top != null ) {
			props.top = ( options.top - curOffset.top ) + curTop;
		}
		if ( options.left != null ) {
			props.left = ( options.left - curOffset.left ) + curLeft;
		}
		if ( "using" in options ) {
			options.using.call( elem, props );
		} else {
			curElem.css( props );
		}
	}
};
jQuery.fn.extend( {
	// offset() relates an element's border box to the document origin
	offset: function( options ) {
		// Preserve chaining for setter
		if ( arguments.length ) {
			return options === undefined ?
				this :
				this.each( function( i ) {
					jQuery.offset.setOffset( this, options, i );
				} );
		}
		var rect, win,
			elem = this[ 0 ];
		if ( !elem ) {
			return;
		}
		// Return zeros for disconnected and hidden (display: none) elements (gh-2310)
		// Support: IE <=11 only
		// Running getBoundingClientRect on a
		// disconnected node in IE throws an error
		if ( !elem.getClientRects().length ) {
			return { top: 0, left: 0 };
		}
		// Get document-relative position by adding viewport scroll to viewport-relative gBCR
		rect = elem.getBoundingClientRect();
		win = elem.ownerDocument.defaultView;
		return {
			top: rect.top + win.pageYOffset,
			left: rect.left + win.pageXOffset
		};
	},
	// position() relates an element's margin box to its offset parent's padding box
	// This corresponds to the behavior of CSS absolute positioning
	position: function() {
		if ( !this[ 0 ] ) {
			return;
		}
		var offsetParent, offset, doc,
			elem = this[ 0 ],
			parentOffset = { top: 0, left: 0 };
		// position:fixed elements are offset from the viewport, which itself always has zero offset
		if ( jQuery.css( elem, "position" ) === "fixed" ) {
			// Assume position:fixed implies availability of getBoundingClientRect
			offset = elem.getBoundingClientRect();
		} else {
			offset = this.offset();
			// Account for the *real* offset parent, which can be the document or its root element
			// when a statically positioned element is identified
			doc = elem.ownerDocument;
			offsetParent = elem.offsetParent || doc.documentElement;
			while ( offsetParent &&
				( offsetParent === doc.body || offsetParent === doc.documentElement ) &&
				jQuery.css( offsetParent, "position" ) === "static" ) {
				offsetParent = offsetParent.parentNode;
			}
			if ( offsetParent && offsetParent !== elem && offsetParent.nodeType === 1 ) {
				// Incorporate borders into its offset, since they are outside its content origin
				parentOffset = jQuery( offsetParent ).offset();
				parentOffset.top += jQuery.css( offsetParent, "borderTopWidth", true );
				parentOffset.left += jQuery.css( offsetParent, "borderLeftWidth", true );
			}
		}
		// Subtract parent offsets and element margins
		return {
			top: offset.top - parentOffset.top - jQuery.css( elem, "marginTop", true ),
			left: offset.left - parentOffset.left - jQuery.css( elem, "marginLeft", true )
		};
	},
	// This method will return documentElement in the following cases:
	// 1) For the element inside the iframe without offsetParent, this method will return
	//    documentElement of the parent window
	// 2) For the hidden or detached element
	// 3) For body or html element, i.e. in case of the html node - it will return itself
	//
	// but those exceptions were never presented as a real life use-cases
	// and might be considered as more preferable results.
	//
	// This logic, however, is not guaranteed and can change at any point in the future
	offsetParent: function() {
		return this.map( function() {
			var offsetParent = this.offsetParent;
			while ( offsetParent && jQuery.css( offsetParent, "position" ) === "static" ) {
				offsetParent = offsetParent.offsetParent;
			}
			return offsetParent || documentElement;
		} );
	}
} );
// Create scrollLeft and scrollTop methods
jQuery.each( { scrollLeft: "pageXOffset", scrollTop: "pageYOffset" }, function( method, prop ) {
	var top = "pageYOffset" === prop;
	jQuery.fn[ method ] = function( val ) {
		return access( this, function( elem, method, val ) {
			// Coalesce documents and windows
			var win;
			if ( isWindow( elem ) ) {
				win = elem;
			} else if ( elem.nodeType === 9 ) {
				win = elem.defaultView;
			}
			if ( val === undefined ) {
				return win ? win[ prop ] : elem[ method ];
			}
			if ( win ) {
				win.scrollTo(
					!top ? val : win.pageXOffset,
					top ? val : win.pageYOffset
				);
			} else {
				elem[ method ] = val;
			}
		}, method, val, arguments.length );
	};
} );
// Support: Safari <=7 - 9.1, Chrome <=37 - 49
// Add the top/left cssHooks using jQuery.fn.position
// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084
// Blink bug: https://bugs.chromium.org/p/chromium/issues/detail?id=589347
// getComputedStyle returns percent when specified for top/left/bottom/right;
// rather than make the css module depend on the offset module, just check for it here
jQuery.each( [ "top", "left" ], function( i, prop ) {
	jQuery.cssHooks[ prop ] = addGetHookIf( support.pixelPosition,
		function( elem, computed ) {
			if ( computed ) {
				computed = curCSS( elem, prop );
				// If curCSS returns percentage, fallback to offset
				return rnumnonpx.test( computed ) ?
					jQuery( elem ).position()[ prop ] + "px" :
					computed;
			}
		}
	);
} );
// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods
jQuery.each( { Height: "height", Width: "width" }, function( name, type ) {
	jQuery.each( { padding: "inner" + name, content: type, "": "outer" + name },
		function( defaultExtra, funcName ) {
		// Margin is only for outerHeight, outerWidth
		jQuery.fn[ funcName ] = function( margin, value ) {
			var chainable = arguments.length && ( defaultExtra || typeof margin !== "boolean" ),
				extra = defaultExtra || ( margin === true || value === true ? "margin" : "border" );
			return access( this, function( elem, type, value ) {
				var doc;
				if ( isWindow( elem ) ) {
					// $( window ).outerWidth/Height return w/h including scrollbars (gh-1729)
					return funcName.indexOf( "outer" ) === 0 ?
						elem[ "inner" + name ] :
						elem.document.documentElement[ "client" + name ];
				}
				// Get document width or height
				if ( elem.nodeType === 9 ) {
					doc = elem.documentElement;
					// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],
					// whichever is greatest
					return Math.max(
						elem.body[ "scroll" + name ], doc[ "scroll" + name ],
						elem.body[ "offset" + name ], doc[ "offset" + name ],
						doc[ "client" + name ]
					);
				}
				return value === undefined ?
					// Get width or height on the element, requesting but not forcing parseFloat
					jQuery.css( elem, type, extra ) :
					// Set width or height on the element
					jQuery.style( elem, type, value, extra );
			}, type, chainable ? margin : undefined, chainable );
		};
	} );
} );
jQuery.each( ( "blur focus focusin focusout resize scroll click dblclick " +
	"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave " +
	"change select submit keydown keypress keyup contextmenu" ).split( " " ),
	function( i, name ) {
	// Handle event binding
	jQuery.fn[ name ] = function( data, fn ) {
		return arguments.length > 0 ?
			this.on( name, null, data, fn ) :
			this.trigger( name );
	};
} );
jQuery.fn.extend( {
	hover: function( fnOver, fnOut ) {
		return this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );
	}
} );
jQuery.fn.extend( {
	bind: function( types, data, fn ) {
		return this.on( types, null, data, fn );
	},
	unbind: function( types, fn ) {
		return this.off( types, null, fn );
	},
	delegate: function( selector, types, data, fn ) {
		return this.on( types, selector, data, fn );
	},
	undelegate: function( selector, types, fn ) {
		// ( namespace ) or ( selector, types [, fn] )
		return arguments.length === 1 ?
			this.off( selector, "**" ) :
			this.off( types, selector || "**", fn );
	}
} );
// Bind a function to a context, optionally partially applying any
// arguments.
// jQuery.proxy is deprecated to promote standards (specifically Function#bind)
// However, it is not slated for removal any time soon
jQuery.proxy = function( fn, context ) {
	var tmp, args, proxy;
	if ( typeof context === "string" ) {
		tmp = fn[ context ];
		context = fn;
		fn = tmp;
	}
	// Quick check to determine if target is callable, in the spec
	// this throws a TypeError, but we will just return undefined.
	if ( !isFunction( fn ) ) {
		return undefined;
	}
	// Simulated bind
	args = slice.call( arguments, 2 );
	proxy = function() {
		return fn.apply( context || this, args.concat( slice.call( arguments ) ) );
	};
	// Set the guid of unique handler to the same of original handler, so it can be removed
	proxy.guid = fn.guid = fn.guid || jQuery.guid++;
	return proxy;
};
jQuery.holdReady = function( hold ) {
	if ( hold ) {
		jQuery.readyWait++;
	} else {
		jQuery.ready( true );
	}
};
jQuery.isArray = Array.isArray;
jQuery.parseJSON = JSON.parse;
jQuery.nodeName = nodeName;
jQuery.isFunction = isFunction;
jQuery.isWindow = isWindow;
jQuery.camelCase = camelCase;
jQuery.type = toType;
jQuery.now = Date.now;
jQuery.isNumeric = function( obj ) {
	// As of jQuery 3.0, isNumeric is limited to
	// strings and numbers (primitives or objects)
	// that can be coerced to finite numbers (gh-2662)
	var type = jQuery.type( obj );
	return ( type === "number" || type === "string" ) &&
		// parseFloat NaNs numeric-cast false positives ("")
		// ...but misinterprets leading-number strings, particularly hex literals ("0x...")
		// subtraction forces infinities to NaN
		!isNaN( obj - parseFloat( obj ) );
};
// Register as a named AMD module, since jQuery can be concatenated with other
// files that may use define, but not via a proper concatenation script that
// understands anonymous AMD modules. A named AMD is safest and most robust
// way to register. Lowercase jquery is used because AMD module names are
// derived from file names, and jQuery is normally delivered in a lowercase
// file name. Do this after creating the global so that if an AMD module wants
// to call noConflict to hide this version of jQuery, it will work.
// Note that for maximum portability, libraries that are not jQuery should
// declare themselves as anonymous modules, and avoid setting a global if an
// AMD loader is present. jQuery is a special case. For more information, see
// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon
if ( typeof define === "function" && define.amd ) {
	define( "jquery", [], function() {
		return jQuery;
	} );
}
var
	// Map over jQuery in case of overwrite
	_jQuery = window.jQuery,
	// Map over the $ in case of overwrite
	_$ = window.$;
jQuery.noConflict = function( deep ) {
	if ( window.$ === jQuery ) {
		window.$ = _$;
	}
	if ( deep && window.jQuery === jQuery ) {
		window.jQuery = _jQuery;
	}
	return jQuery;
};
// Expose jQuery and $ identifiers, even in AMD
// (#7102#comment:10, https://github.com/jquery/jquery/pull/557)
// and CommonJS for browser emulators (#13566)
if ( !noGlobal ) {
	window.jQuery = window.$ = jQuery;
}
return jQuery;
} );
/*! jQuery Validation Plugin - v1.19.0 - 11/28/2018
 * https://jqueryvalidation.org/
 * Copyright (c) 2018 Jörn Zaefferer; Licensed MIT */
!function(a){"function"==typeof define&&define.amd?define(["jquery"],a):"object"==typeof module&&module.exports?module.exports=a(require("jquery")):a(jQuery)}(function(a){a.extend(a.fn,{validate:function(b){if(!this.length)return void(b&&b.debug&&window.console&&console.warn("Nothing selected, can't validate, returning nothing."));var c=a.data(this[0],"validator");return c?c:(this.attr("novalidate","novalidate"),c=new a.validator(b,this[0]),a.data(this[0],"validator",c),c.settings.onsubmit&&(this.on("click.validate",":submit",function(b){c.submitButton=b.currentTarget,a(this).hasClass("cancel")&&(c.cancelSubmit=!0),void 0!==a(this).attr("formnovalidate")&&(c.cancelSubmit=!0)}),this.on("submit.validate",function(b){function d(){var d,e;return c.submitButton&&(c.settings.submitHandler||c.formSubmitted)&&(d=a("<input type='hidden'/>").attr("name",c.submitButton.name).val(a(c.submitButton).val()).appendTo(c.currentForm)),!(c.settings.submitHandler&&!c.settings.debug)||(e=c.settings.submitHandler.call(c,c.currentForm,b),d&&d.remove(),void 0!==e&&e)}return c.settings.debug&&b.preventDefault(),c.cancelSubmit?(c.cancelSubmit=!1,d()):c.form()?c.pendingRequest?(c.formSubmitted=!0,!1):d():(c.focusInvalid(),!1)})),c)},valid:function(){var b,c,d;return a(this[0]).is("form")?b=this.validate().form():(d=[],b=!0,c=a(this[0].form).validate(),this.each(function(){b=c.element(this)&&b,b||(d=d.concat(c.errorList))}),c.errorList=d),b},rules:function(b,c){var d,e,f,g,h,i,j=this[0],k="undefined"!=typeof this.attr("contenteditable")&&"false"!==this.attr("contenteditable");if(null!=j&&(!j.form&&k&&(j.form=this.closest("form")[0],j.name=this.attr("name")),null!=j.form)){if(b)switch(d=a.data(j.form,"validator").settings,e=d.rules,f=a.validator.staticRules(j),b){case"add":a.extend(f,a.validator.normalizeRule(c)),delete f.messages,e[j.name]=f,c.messages&&(d.messages[j.name]=a.extend(d.messages[j.name],c.messages));break;case"remove":return c?(i={},a.each(c.split(/\s/),function(a,b){i[b]=f[b],delete f[b]}),i):(delete e[j.name],f)}return g=a.validator.normalizeRules(a.extend({},a.validator.classRules(j),a.validator.attributeRules(j),a.validator.dataRules(j),a.validator.staticRules(j)),j),g.required&&(h=g.required,delete g.required,g=a.extend({required:h},g)),g.remote&&(h=g.remote,delete g.remote,g=a.extend(g,{remote:h})),g}}}),a.extend(a.expr.pseudos||a.expr[":"],{blank:function(b){return!a.trim(""+a(b).val())},filled:function(b){var c=a(b).val();return null!==c&&!!a.trim(""+c)},unchecked:function(b){return!a(b).prop("checked")}}),a.validator=function(b,c){this.settings=a.extend(!0,{},a.validator.defaults,b),this.currentForm=c,this.init()},a.validator.format=function(b,c){return 1===arguments.length?function(){var c=a.makeArray(arguments);return c.unshift(b),a.validator.format.apply(this,c)}:void 0===c?b:(arguments.length>2&&c.constructor!==Array&&(c=a.makeArray(arguments).slice(1)),c.constructor!==Array&&(c=[c]),a.each(c,function(a,c){b=b.replace(new RegExp("\\{"+a+"\\}","g"),function(){return c})}),b)},a.extend(a.validator,{defaults:{messages:{},groups:{},rules:{},errorClass:"error",pendingClass:"pending",validClass:"valid",errorElement:"label",focusCleanup:!1,focusInvalid:!0,errorContainer:a([]),errorLabelContainer:a([]),onsubmit:!0,ignore:":hidden",ignoreTitle:!1,onfocusin:function(a){this.lastActive=a,this.settings.focusCleanup&&(this.settings.unhighlight&&this.settings.unhighlight.call(this,a,this.settings.errorClass,this.settings.validClass),this.hideThese(this.errorsFor(a)))},onfocusout:function(a){this.checkable(a)||!(a.name in this.submitted)&&this.optional(a)||this.element(a)},onkeyup:function(b,c){var d=[16,17,18,20,35,36,37,38,39,40,45,144,225];9===c.which&&""===this.elementValue(b)||a.inArray(c.keyCode,d)!==-1||(b.name in this.submitted||b.name in this.invalid)&&this.element(b)},onclick:function(a){a.name in this.submitted?this.element(a):a.parentNode.name in this.submitted&&this.element(a.parentNode)},highlight:function(b,c,d){"radio"===b.type?this.findByName(b.name).addClass(c).removeClass(d):a(b).addClass(c).removeClass(d)},unhighlight:function(b,c,d){"radio"===b.type?this.findByName(b.name).removeClass(c).addClass(d):a(b).removeClass(c).addClass(d)}},setDefaults:function(b){a.extend(a.validator.defaults,b)},messages:{required:"This field is required.",remote:"Please fix this field.",email:"Please enter a valid email address.",url:"Please enter a valid URL.",date:"Please enter a valid date.",dateISO:"Please enter a valid date (ISO).",number:"Please enter a valid number.",digits:"Please enter only digits.",equalTo:"Please enter the same value again.",maxlength:a.validator.format("Please enter no more than {0} characters."),minlength:a.validator.format("Please enter at least {0} characters."),rangelength:a.validator.format("Please enter a value between {0} and {1} characters long."),range:a.validator.format("Please enter a value between {0} and {1}."),max:a.validator.format("Please enter a value less than or equal to {0}."),min:a.validator.format("Please enter a value greater than or equal to {0}."),step:a.validator.format("Please enter a multiple of {0}.")},autoCreateRanges:!1,prototype:{init:function(){function b(b){var c="undefined"!=typeof a(this).attr("contenteditable")&&"false"!==a(this).attr("contenteditable");if(!this.form&&c&&(this.form=a(this).closest("form")[0],this.name=a(this).attr("name")),d===this.form){var e=a.data(this.form,"validator"),f="on"+b.type.replace(/^validate/,""),g=e.settings;g[f]&&!a(this).is(g.ignore)&&g[f].call(e,this,b)}}this.labelContainer=a(this.settings.errorLabelContainer),this.errorContext=this.labelContainer.length&&this.labelContainer||a(this.currentForm),this.containers=a(this.settings.errorContainer).add(this.settings.errorLabelContainer),this.submitted={},this.valueCache={},this.pendingRequest=0,this.pending={},this.invalid={},this.reset();var c,d=this.currentForm,e=this.groups={};a.each(this.settings.groups,function(b,c){"string"==typeof c&&(c=c.split(/\s/)),a.each(c,function(a,c){e[c]=b})}),c=this.settings.rules,a.each(c,function(b,d){c[b]=a.validator.normalizeRule(d)}),a(this.currentForm).on("focusin.validate focusout.validate keyup.validate",":text, [type='password'], [type='file'], select, textarea, [type='number'], [type='search'], [type='tel'], [type='url'], [type='email'], [type='datetime'], [type='date'], [type='month'], [type='week'], [type='time'], [type='datetime-local'], [type='range'], [type='color'], [type='radio'], [type='checkbox'], [contenteditable], [type='button']",b).on("click.validate","select, option, [type='radio'], [type='checkbox']",b),this.settings.invalidHandler&&a(this.currentForm).on("invalid-form.validate",this.settings.invalidHandler)},form:function(){return this.checkForm(),a.extend(this.submitted,this.errorMap),this.invalid=a.extend({},this.errorMap),this.valid()||a(this.currentForm).triggerHandler("invalid-form",[this]),this.showErrors(),this.valid()},checkForm:function(){this.prepareForm();for(var a=0,b=this.currentElements=this.elements();b[a];a++)this.check(b[a]);return this.valid()},element:function(b){var c,d,e=this.clean(b),f=this.validationTargetFor(e),g=this,h=!0;return void 0===f?delete this.invalid[e.name]:(this.prepareElement(f),this.currentElements=a(f),d=this.groups[f.name],d&&a.each(this.groups,function(a,b){b===d&&a!==f.name&&(e=g.validationTargetFor(g.clean(g.findByName(a))),e&&e.name in g.invalid&&(g.currentElements.push(e),h=g.check(e)&&h))}),c=this.check(f)!==!1,h=h&&c,c?this.invalid[f.name]=!1:this.invalid[f.name]=!0,this.numberOfInvalids()||(this.toHide=this.toHide.add(this.containers)),this.showErrors(),a(b).attr("aria-invalid",!c)),h},showErrors:function(b){if(b){var c=this;a.extend(this.errorMap,b),this.errorList=a.map(this.errorMap,function(a,b){return{message:a,element:c.findByName(b)[0]}}),this.successList=a.grep(this.successList,function(a){return!(a.name in b)})}this.settings.showErrors?this.settings.showErrors.call(this,this.errorMap,this.errorList):this.defaultShowErrors()},resetForm:function(){a.fn.resetForm&&a(this.currentForm).resetForm(),this.invalid={},this.submitted={},this.prepareForm(),this.hideErrors();var b=this.elements().removeData("previousValue").removeAttr("aria-invalid");this.resetElements(b)},resetElements:function(a){var b;if(this.settings.unhighlight)for(b=0;a[b];b++)this.settings.unhighlight.call(this,a[b],this.settings.errorClass,""),this.findByName(a[b].name).removeClass(this.settings.validClass);else a.removeClass(this.settings.errorClass).removeClass(this.settings.validClass)},numberOfInvalids:function(){return this.objectLength(this.invalid)},objectLength:function(a){var b,c=0;for(b in a)void 0!==a[b]&&null!==a[b]&&a[b]!==!1&&c++;return c},hideErrors:function(){this.hideThese(this.toHide)},hideThese:function(a){a.not(this.containers).text(""),this.addWrapper(a).hide()},valid:function(){return 0===this.size()},size:function(){return this.errorList.length},focusInvalid:function(){if(this.settings.focusInvalid)try{a(this.findLastActive()||this.errorList.length&&this.errorList[0].element||[]).filter(":visible").focus().trigger("focusin")}catch(b){}},findLastActive:function(){var b=this.lastActive;return b&&1===a.grep(this.errorList,function(a){return a.element.name===b.name}).length&&b},elements:function(){var b=this,c={};return a(this.currentForm).find("input, select, textarea, [contenteditable]").not(":submit, :reset, :image, :disabled").not(this.settings.ignore).filter(function(){var d=this.name||a(this).attr("name"),e="undefined"!=typeof a(this).attr("contenteditable")&&"false"!==a(this).attr("contenteditable");return!d&&b.settings.debug&&window.console&&console.error("%o has no name assigned",this),e&&(this.form=a(this).closest("form")[0],this.name=d),this.form===b.currentForm&&(!(d in c||!b.objectLength(a(this).rules()))&&(c[d]=!0,!0))})},clean:function(b){return a(b)[0]},errors:function(){var b=this.settings.errorClass.split(" ").join(".");return a(this.settings.errorElement+"."+b,this.errorContext)},resetInternals:function(){this.successList=[],this.errorList=[],this.errorMap={},this.toShow=a([]),this.toHide=a([])},reset:function(){this.resetInternals(),this.currentElements=a([])},prepareForm:function(){this.reset(),this.toHide=this.errors().add(this.containers)},prepareElement:function(a){this.reset(),this.toHide=this.errorsFor(a)},elementValue:function(b){var c,d,e=a(b),f=b.type,g="undefined"!=typeof e.attr("contenteditable")&&"false"!==e.attr("contenteditable");return"radio"===f||"checkbox"===f?this.findByName(b.name).filter(":checked").val():"number"===f&&"undefined"!=typeof b.validity?b.validity.badInput?"NaN":e.val():(c=g?e.text():e.val(),"file"===f?"C:\\fakepath\\"===c.substr(0,12)?c.substr(12):(d=c.lastIndexOf("/"),d>=0?c.substr(d+1):(d=c.lastIndexOf("\\"),d>=0?c.substr(d+1):c)):"string"==typeof c?c.replace(/\r/g,""):c)},check:function(b){b=this.validationTargetFor(this.clean(b));var c,d,e,f,g=a(b).rules(),h=a.map(g,function(a,b){return b}).length,i=!1,j=this.elementValue(b);"function"==typeof g.normalizer?f=g.normalizer:"function"==typeof this.settings.normalizer&&(f=this.settings.normalizer),f&&(j=f.call(b,j),delete g.normalizer);for(d in g){e={method:d,parameters:g[d]};try{if(c=a.validator.methods[d].call(this,j,b,e.parameters),"dependency-mismatch"===c&&1===h){i=!0;continue}if(i=!1,"pending"===c)return void(this.toHide=this.toHide.not(this.errorsFor(b)));if(!c)return this.formatAndAdd(b,e),!1}catch(k){throw this.settings.debug&&window.console&&console.log("Exception occurred when checking element "+b.id+", check the '"+e.method+"' method.",k),k instanceof TypeError&&(k.message+=".  Exception occurred when checking element "+b.id+", check the '"+e.method+"' method."),k}}if(!i)return this.objectLength(g)&&this.successList.push(b),!0},customDataMessage:function(b,c){return a(b).data("msg"+c.charAt(0).toUpperCase()+c.substring(1).toLowerCase())||a(b).data("msg")},customMessage:function(a,b){var c=this.settings.messages[a];return c&&(c.constructor===String?c:c[b])},findDefined:function(){for(var a=0;a<arguments.length;a++)if(void 0!==arguments[a])return arguments[a]},defaultMessage:function(b,c){"string"==typeof c&&(c={method:c});var d=this.findDefined(this.customMessage(b.name,c.method),this.customDataMessage(b,c.method),!this.settings.ignoreTitle&&b.title||void 0,a.validator.messages[c.method],"<strong>Warning: No message defined for "+b.name+"</strong>"),e=/\$?\{(\d+)\}/g;return"function"==typeof d?d=d.call(this,c.parameters,b):e.test(d)&&(d=a.validator.format(d.replace(e,"{$1}"),c.parameters)),d},formatAndAdd:function(a,b){var c=this.defaultMessage(a,b);this.errorList.push({message:c,element:a,method:b.method}),this.errorMap[a.name]=c,this.submitted[a.name]=c},addWrapper:function(a){return this.settings.wrapper&&(a=a.add(a.parent(this.settings.wrapper))),a},defaultShowErrors:function(){var a,b,c;for(a=0;this.errorList[a];a++)c=this.errorList[a],this.settings.highlight&&this.settings.highlight.call(this,c.element,this.settings.errorClass,this.settings.validClass),this.showLabel(c.element,c.message);if(this.errorList.length&&(this.toShow=this.toShow.add(this.containers)),this.settings.success)for(a=0;this.successList[a];a++)this.showLabel(this.successList[a]);if(this.settings.unhighlight)for(a=0,b=this.validElements();b[a];a++)this.settings.unhighlight.call(this,b[a],this.settings.errorClass,this.settings.validClass);this.toHide=this.toHide.not(this.toShow),this.hideErrors(),this.addWrapper(this.toShow).show()},validElements:function(){return this.currentElements.not(this.invalidElements())},invalidElements:function(){return a(this.errorList).map(function(){return this.element})},showLabel:function(b,c){var d,e,f,g,h=this.errorsFor(b),i=this.idOrName(b),j=a(b).attr("aria-describedby");h.length?(h.removeClass(this.settings.validClass).addClass(this.settings.errorClass),h.html(c)):(h=a("<"+this.settings.errorElement+">").attr("id",i+"-error").addClass(this.settings.errorClass).html(c||""),d=h,this.settings.wrapper&&(d=h.hide().show().wrap("<"+this.settings.wrapper+"/>").parent()),this.labelContainer.length?this.labelContainer.append(d):this.settings.errorPlacement?this.settings.errorPlacement.call(this,d,a(b)):d.insertAfter(b),h.is("label")?h.attr("for",i):0===h.parents("label[for='"+this.escapeCssMeta(i)+"']").length&&(f=h.attr("id"),j?j.match(new RegExp("\\b"+this.escapeCssMeta(f)+"\\b"))||(j+=" "+f):j=f,a(b).attr("aria-describedby",j),e=this.groups[b.name],e&&(g=this,a.each(g.groups,function(b,c){c===e&&a("[name='"+g.escapeCssMeta(b)+"']",g.currentForm).attr("aria-describedby",h.attr("id"))})))),!c&&this.settings.success&&(h.text(""),"string"==typeof this.settings.success?h.addClass(this.settings.success):this.settings.success(h,b)),this.toShow=this.toShow.add(h)},errorsFor:function(b){var c=this.escapeCssMeta(this.idOrName(b)),d=a(b).attr("aria-describedby"),e="label[for='"+c+"'], label[for='"+c+"'] *";return d&&(e=e+", #"+this.escapeCssMeta(d).replace(/\s+/g,", #")),this.errors().filter(e)},escapeCssMeta:function(a){return a.replace(/([\\!"#$%&'()*+,.\/:;<=>?@\[\]^`{|}~])/g,"\\$1")},idOrName:function(a){return this.groups[a.name]||(this.checkable(a)?a.name:a.id||a.name)},validationTargetFor:function(b){return this.checkable(b)&&(b=this.findByName(b.name)),a(b).not(this.settings.ignore)[0]},checkable:function(a){return/radio|checkbox/i.test(a.type)},findByName:function(b){return a(this.currentForm).find("[name='"+this.escapeCssMeta(b)+"']")},getLength:function(b,c){switch(c.nodeName.toLowerCase()){case"select":return a("option:selected",c).length;case"input":if(this.checkable(c))return this.findByName(c.name).filter(":checked").length}return b.length},depend:function(a,b){return!this.dependTypes[typeof a]||this.dependTypes[typeof a](a,b)},dependTypes:{"boolean":function(a){return a},string:function(b,c){return!!a(b,c.form).length},"function":function(a,b){return a(b)}},optional:function(b){var c=this.elementValue(b);return!a.validator.methods.required.call(this,c,b)&&"dependency-mismatch"},startRequest:function(b){this.pending[b.name]||(this.pendingRequest++,a(b).addClass(this.settings.pendingClass),this.pending[b.name]=!0)},stopRequest:function(b,c){this.pendingRequest--,this.pendingRequest<0&&(this.pendingRequest=0),delete this.pending[b.name],a(b).removeClass(this.settings.pendingClass),c&&0===this.pendingRequest&&this.formSubmitted&&this.form()?(a(this.currentForm).submit(),this.submitButton&&a("input:hidden[name='"+this.submitButton.name+"']",this.currentForm).remove(),this.formSubmitted=!1):!c&&0===this.pendingRequest&&this.formSubmitted&&(a(this.currentForm).triggerHandler("invalid-form",[this]),this.formSubmitted=!1)},previousValue:function(b,c){return c="string"==typeof c&&c||"remote",a.data(b,"previousValue")||a.data(b,"previousValue",{old:null,valid:!0,message:this.defaultMessage(b,{method:c})})},destroy:function(){this.resetForm(),a(this.currentForm).off(".validate").removeData("validator").find(".validate-equalTo-blur").off(".validate-equalTo").removeClass("validate-equalTo-blur").find(".validate-lessThan-blur").off(".validate-lessThan").removeClass("validate-lessThan-blur").find(".validate-lessThanEqual-blur").off(".validate-lessThanEqual").removeClass("validate-lessThanEqual-blur").find(".validate-greaterThanEqual-blur").off(".validate-greaterThanEqual").removeClass("validate-greaterThanEqual-blur").find(".validate-greaterThan-blur").off(".validate-greaterThan").removeClass("validate-greaterThan-blur")}},classRuleSettings:{required:{required:!0},email:{email:!0},url:{url:!0},date:{date:!0},dateISO:{dateISO:!0},number:{number:!0},digits:{digits:!0},creditcard:{creditcard:!0}},addClassRules:function(b,c){b.constructor===String?this.classRuleSettings[b]=c:a.extend(this.classRuleSettings,b)},classRules:function(b){var c={},d=a(b).attr("class");return d&&a.each(d.split(" "),function(){this in a.validator.classRuleSettings&&a.extend(c,a.validator.classRuleSettings[this])}),c},normalizeAttributeRule:function(a,b,c,d){/min|max|step/.test(c)&&(null===b||/number|range|text/.test(b))&&(d=Number(d),isNaN(d)&&(d=void 0)),d||0===d?a[c]=d:b===c&&"range"!==b&&(a[c]=!0)},attributeRules:function(b){var c,d,e={},f=a(b),g=b.getAttribute("type");for(c in a.validator.methods)"required"===c?(d=b.getAttribute(c),""===d&&(d=!0),d=!!d):d=f.attr(c),this.normalizeAttributeRule(e,g,c,d);return e.maxlength&&/-1|2147483647|524288/.test(e.maxlength)&&delete e.maxlength,e},dataRules:function(b){var c,d,e={},f=a(b),g=b.getAttribute("type");for(c in a.validator.methods)d=f.data("rule"+c.charAt(0).toUpperCase()+c.substring(1).toLowerCase()),""===d&&(d=!0),this.normalizeAttributeRule(e,g,c,d);return e},staticRules:function(b){var c={},d=a.data(b.form,"validator");return d.settings.rules&&(c=a.validator.normalizeRule(d.settings.rules[b.name])||{}),c},normalizeRules:function(b,c){return a.each(b,function(d,e){if(e===!1)return void delete b[d];if(e.param||e.depends){var f=!0;switch(typeof e.depends){case"string":f=!!a(e.depends,c.form).length;break;case"function":f=e.depends.call(c,c)}f?b[d]=void 0===e.param||e.param:(a.data(c.form,"validator").resetElements(a(c)),delete b[d])}}),a.each(b,function(d,e){b[d]=a.isFunction(e)&&"normalizer"!==d?e(c):e}),a.each(["minlength","maxlength"],function(){b[this]&&(b[this]=Number(b[this]))}),a.each(["rangelength","range"],function(){var c;b[this]&&(a.isArray(b[this])?b[this]=[Number(b[this][0]),Number(b[this][1])]:"string"==typeof b[this]&&(c=b[this].replace(/[\[\]]/g,"").split(/[\s,]+/),b[this]=[Number(c[0]),Number(c[1])]))}),a.validator.autoCreateRanges&&(null!=b.min&&null!=b.max&&(b.range=[b.min,b.max],delete b.min,delete b.max),null!=b.minlength&&null!=b.maxlength&&(b.rangelength=[b.minlength,b.maxlength],delete b.minlength,delete b.maxlength)),b},normalizeRule:function(b){if("string"==typeof b){var c={};a.each(b.split(/\s/),function(){c[this]=!0}),b=c}return b},addMethod:function(b,c,d){a.validator.methods[b]=c,a.validator.messages[b]=void 0!==d?d:a.validator.messages[b],c.length<3&&a.validator.addClassRules(b,a.validator.normalizeRule(b))},methods:{required:function(b,c,d){if(!this.depend(d,c))return"dependency-mismatch";if("select"===c.nodeName.toLowerCase()){var e=a(c).val();return e&&e.length>0}return this.checkable(c)?this.getLength(b,c)>0:void 0!==b&&null!==b&&b.length>0},email:function(a,b){return this.optional(b)||/^[a-zA-Z0-9.!#$%&'*+\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/.test(a)},url:function(a,b){return this.optional(b)||/^(?:(?:(?:https?|ftp):)?\/\/)(?:\S+(?::\S*)?@)?(?:(?!(?:10|127)(?:\.\d{1,3}){3})(?!(?:169\.254|192\.168)(?:\.\d{1,3}){2})(?!172\.(?:1[6-9]|2\d|3[0-1])(?:\.\d{1,3}){2})(?:[1-9]\d?|1\d\d|2[01]\d|22[0-3])(?:\.(?:1?\d{1,2}|2[0-4]\d|25[0-5])){2}(?:\.(?:[1-9]\d?|1\d\d|2[0-4]\d|25[0-4]))|(?:(?:[a-z\u00a1-\uffff0-9]-*)*[a-z\u00a1-\uffff0-9]+)(?:\.(?:[a-z\u00a1-\uffff0-9]-*)*[a-z\u00a1-\uffff0-9]+)*(?:\.(?:[a-z\u00a1-\uffff]{2,})).?)(?::\d{2,5})?(?:[\/?#]\S*)?$/i.test(a)},date:function(){var a=!1;return function(b,c){return a||(a=!0,this.settings.debug&&window.console&&console.warn("The `date` method is deprecated and will be removed in version '2.0.0'.\nPlease don't use it, since it relies on the Date constructor, which\nbehaves very differently across browsers and locales. Use `dateISO`\ninstead or one of the locale specific methods in `localizations/`\nand `additional-methods.js`.")),this.optional(c)||!/Invalid|NaN/.test(new Date(b).toString())}}(),dateISO:function(a,b){return this.optional(b)||/^\d{4}[\/\-](0?[1-9]|1[012])[\/\-](0?[1-9]|[12][0-9]|3[01])$/.test(a)},number:function(a,b){return this.optional(b)||/^(?:-?\d+|-?\d{1,3}(?:,\d{3})+)?(?:\.\d+)?$/.test(a)},digits:function(a,b){return this.optional(b)||/^\d+$/.test(a)},minlength:function(b,c,d){var e=a.isArray(b)?b.length:this.getLength(b,c);return this.optional(c)||e>=d},maxlength:function(b,c,d){var e=a.isArray(b)?b.length:this.getLength(b,c);return this.optional(c)||e<=d},rangelength:function(b,c,d){var e=a.isArray(b)?b.length:this.getLength(b,c);return this.optional(c)||e>=d[0]&&e<=d[1]},min:function(a,b,c){return this.optional(b)||a>=c},max:function(a,b,c){return this.optional(b)||a<=c},range:function(a,b,c){return this.optional(b)||a>=c[0]&&a<=c[1]},step:function(b,c,d){var e,f=a(c).attr("type"),g="Step attribute on input type "+f+" is not supported.",h=["text","number","range"],i=new RegExp("\\b"+f+"\\b"),j=f&&!i.test(h.join()),k=function(a){var b=(""+a).match(/(?:\.(\d+))?$/);return b&&b[1]?b[1].length:0},l=function(a){return Math.round(a*Math.pow(10,e))},m=!0;if(j)throw new Error(g);return e=k(d),(k(b)>e||l(b)%l(d)!==0)&&(m=!1),this.optional(c)||m},equalTo:function(b,c,d){var e=a(d);return this.settings.onfocusout&&e.not(".validate-equalTo-blur").length&&e.addClass("validate-equalTo-blur").on("blur.validate-equalTo",function(){a(c).valid()}),b===e.val()},remote:function(b,c,d,e){if(this.optional(c))return"dependency-mismatch";e="string"==typeof e&&e||"remote";var f,g,h,i=this.previousValue(c,e);return this.settings.messages[c.name]||(this.settings.messages[c.name]={}),i.originalMessage=i.originalMessage||this.settings.messages[c.name][e],this.settings.messages[c.name][e]=i.message,d="string"==typeof d&&{url:d}||d,h=a.param(a.extend({data:b},d.data)),i.old===h?i.valid:(i.old=h,f=this,this.startRequest(c),g={},g[c.name]=b,a.ajax(a.extend(!0,{mode:"abort",port:"validate"+c.name,dataType:"json",data:g,context:f.currentForm,success:function(a){var d,g,h,j=a===!0||"true"===a;f.settings.messages[c.name][e]=i.originalMessage,j?(h=f.formSubmitted,f.resetInternals(),f.toHide=f.errorsFor(c),f.formSubmitted=h,f.successList.push(c),f.invalid[c.name]=!1,f.showErrors()):(d={},g=a||f.defaultMessage(c,{method:e,parameters:b}),d[c.name]=i.message=g,f.invalid[c.name]=!0,f.showErrors(d)),i.valid=j,f.stopRequest(c,j)}},d)),"pending")}}});var b,c={};return a.ajaxPrefilter?a.ajaxPrefilter(function(a,b,d){var e=a.port;"abort"===a.mode&&(c[e]&&c[e].abort(),c[e]=d)}):(b=a.ajax,a.ajax=function(d){var e=("mode"in d?d:a.ajaxSettings).mode,f=("port"in d?d:a.ajaxSettings).port;return"abort"===e?(c[f]&&c[f].abort(),c[f]=b.apply(this,arguments),c[f]):b.apply(this,arguments)}),a});/*!
 * The Final Countdown for jQuery v2.2.0 (http://hilios.github.io/jQuery.countdown/)
 * Copyright (c) 2016 Edson Hilios
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of
 * this software and associated documentation files (the "Software"), to deal in
 * the Software without restriction, including without limitation the rights to
 * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
 * the Software, and to permit persons to whom the Software is furnished to do so,
 * subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
 * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
 * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
 * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */
!function(a){"use strict";"function"==typeof define&&define.amd?define(["jquery"],a):a(jQuery)}(function(a){"use strict";function b(a){if(a instanceof Date)return a;if(String(a).match(g))return String(a).match(/^[0-9]*$/)&&(a=Number(a)),String(a).match(/\-/)&&(a=String(a).replace(/\-/g,"/")),new Date(a);throw new Error("Couldn't cast `"+a+"` to a date object.")}function c(a){var b=a.toString().replace(/([.?*+^$[\]\\(){}|-])/g,"\\$1");return new RegExp(b)}function d(a){return function(b){var d=b.match(/%(-|!)?[A-Z]{1}(:[^;]+;)?/gi);if(d)for(var f=0,g=d.length;f<g;++f){var h=d[f].match(/%(-|!)?([a-zA-Z]{1})(:[^;]+;)?/),j=c(h[0]),k=h[1]||"",l=h[3]||"",m=null;h=h[2],i.hasOwnProperty(h)&&(m=i[h],m=Number(a[m])),null!==m&&("!"===k&&(m=e(l,m)),""===k&&m<10&&(m="0"+m.toString()),b=b.replace(j,m.toString()))}return b=b.replace(/%%/,"%")}}function e(a,b){var c="s",d="";return a&&(a=a.replace(/(:|;|\s)/gi,"").split(/\,/),1===a.length?c=a[0]:(d=a[0],c=a[1])),Math.abs(b)>1?c:d}var f=[],g=[],h={precision:100,elapse:!1,defer:!1};g.push(/^[0-9]*$/.source),g.push(/([0-9]{1,2}\/){2}[0-9]{4}( [0-9]{1,2}(:[0-9]{2}){2})?/.source),g.push(/[0-9]{4}([\/\-][0-9]{1,2}){2}( [0-9]{1,2}(:[0-9]{2}){2})?/.source),g=new RegExp(g.join("|"));var i={Y:"years",m:"months",n:"daysToMonth",d:"daysToWeek",w:"weeks",W:"weeksToMonth",H:"hours",M:"minutes",S:"seconds",D:"totalDays",I:"totalHours",N:"totalMinutes",T:"totalSeconds"},j=function(b,c,d){this.el=b,this.$el=a(b),this.interval=null,this.offset={},this.options=a.extend({},h),this.instanceNumber=f.length,f.push(this),this.$el.data("countdown-instance",this.instanceNumber),d&&("function"==typeof d?(this.$el.on("update.countdown",d),this.$el.on("stoped.countdown",d),this.$el.on("finish.countdown",d)):this.options=a.extend({},h,d)),this.setFinalDate(c),this.options.defer===!1&&this.start()};a.extend(j.prototype,{start:function(){null!==this.interval&&clearInterval(this.interval);var a=this;this.update(),this.interval=setInterval(function(){a.update.call(a)},this.options.precision)},stop:function(){clearInterval(this.interval),this.interval=null,this.dispatchEvent("stoped")},toggle:function(){this.interval?this.stop():this.start()},pause:function(){this.stop()},resume:function(){this.start()},remove:function(){this.stop.call(this),f[this.instanceNumber]=null,delete this.$el.data().countdownInstance},setFinalDate:function(a){this.finalDate=b(a)},update:function(){if(0===this.$el.closest("html").length)return void this.remove();var b,c=void 0!==a._data(this.el,"events"),d=new Date;b=this.finalDate.getTime()-d.getTime(),b=Math.ceil(b/1e3),b=!this.options.elapse&&b<0?0:Math.abs(b),this.totalSecsLeft!==b&&c&&(this.totalSecsLeft=b,this.elapsed=d>=this.finalDate,this.offset={seconds:this.totalSecsLeft%60,minutes:Math.floor(this.totalSecsLeft/60)%60,hours:Math.floor(this.totalSecsLeft/60/60)%24,days:Math.floor(this.totalSecsLeft/60/60/24)%7,daysToWeek:Math.floor(this.totalSecsLeft/60/60/24)%7,daysToMonth:Math.floor(this.totalSecsLeft/60/60/24%30.4368),weeks:Math.floor(this.totalSecsLeft/60/60/24/7),weeksToMonth:Math.floor(this.totalSecsLeft/60/60/24/7)%4,months:Math.floor(this.totalSecsLeft/60/60/24/30.4368),years:Math.abs(this.finalDate.getFullYear()-d.getFullYear()),totalDays:Math.floor(this.totalSecsLeft/60/60/24),totalHours:Math.floor(this.totalSecsLeft/60/60),totalMinutes:Math.floor(this.totalSecsLeft/60),totalSeconds:this.totalSecsLeft},this.options.elapse||0!==this.totalSecsLeft?this.dispatchEvent("update"):(this.stop(),this.dispatchEvent("finish")))},dispatchEvent:function(b){var c=a.Event(b+".countdown");c.finalDate=this.finalDate,c.elapsed=this.elapsed,c.offset=a.extend({},this.offset),c.strftime=d(this.offset),this.$el.trigger(c)}}),a.fn.countdown=function(){var b=Array.prototype.slice.call(arguments,0);return this.each(function(){var c=a(this).data("countdown-instance");if(void 0!==c){var d=f[c],e=b[0];j.prototype.hasOwnProperty(e)?d[e].apply(d,b.slice(1)):null===String(e).match(/^[$A-Z_][0-9A-Z_$]*$/i)?(d.setFinalDate.call(d,e),d.start()):a.error("Method %s does not exist on jQuery.countdown".replace(/\%s/gi,e))}else new j(this,b[0],b[1])})}});//---------------------------------------//// Подключаем плагины npm//---------------------------------------////---------------------------------------//// Подключаем плагины, которые в папке ( plugins )//---------------------------------------///*!
 * jReject (jQuery Browser Rejection Plugin)
 * Version 1.1.x
 * URL: http://jreject.turnwheel.com/
 * Description: jReject is a easy method of rejecting specific browsers on your site
 * Author: Steven Bower (TurnWheel Designs) http://turnwheel.com/
 * Copyright: Copyright (c) 2009-2014 Steven Bower under dual MIT/GPLv2 license.
 */
(function($) {
$.reject = function(options) {
	var opts = $.extend(true, {
		// Specifies which browsers/versions will be blocked
		reject : {
			all: false, // Covers Everything (Nothing blocked)
			msie: 6 // Covers MSIE <= 6 (Blocked by default)
			/*
			 * Many possible combinations.
			 * You can specify browser (msie, chrome, firefox)
			 * You can specify rendering engine (geko, trident)
			 * You can specify OS (Win, Mac, Linux, Solaris, iPhone, iPad)
			 *
			 * You can specify versions of each.
			 * Examples: msie9: true, firefox8: true,
			 *
			 * You can specify the highest number to reject.
			 * Example: msie: 9 (9 and lower are rejected.
			 *
			 * There is also "unknown" that covers what isn't detected
			 * Example: unknown: true
			 */
		},
		display: [], // What browsers to display and their order (default set below)
		browserShow: true, // Should the browser options be shown?
		browserInfo: { // Settings for which browsers to display
			chrome: {
				// Text below the icon
				text: 'Google Chrome',
				// URL For icon/text link
				url: 'http://www.google.com/chrome/'
				// (Optional) Use "allow" to customized when to show this option
				// Example: to show chrome only for IE users
				// allow: { all: false, msie: true }
			},
			firefox: {
				text: 'Mozilla Firefox',
				url: 'http://www.mozilla.com/firefox/'
			},
			safari: {
				text: 'Safari',
				url: 'http://www.apple.com/safari/download/'
			},
			opera: {
				text: 'Opera',
				url: 'http://www.opera.com/download/'
			},
			msie: {
				text: 'Internet Explorer',
				url: 'http://www.microsoft.com/windows/Internet-explorer/'
			}
		},
		// Pop-up Window Text
		header: 'Did you know that your Internet Browser is out of date?',
		paragraph1: 'Your browser is out of date, and may not be compatible with '+
					'our website. A list of the most popular web browsers can be '+
					'found below.',
		paragraph2: 'Just click on the icons to get to the download page',
		// Allow closing of window
		close: true,
		// Message displayed below closing link
		closeMessage: 'By closing this window you acknowledge that your experience '+
						'on this website may be degraded',
		closeLink: 'Close This Window',
		closeURL: '#',
		// Allows closing of window with esc key
		closeESC: true,
		// Use cookies to remmember if window was closed previously?
		closeCookie: false,
		// Cookie settings are only used if closeCookie is true
		cookieSettings: {
			// Path for the cookie to be saved on
			// Should be root domain in most cases
			path: '/',
			// Expiration Date (in seconds)
			// 0 (default) means it ends with the current session
			expires: 0
		},
		// Path where images are located
		imagePath: './images/',
		// Background color for overlay
		overlayBgColor: '#000',
		// Background transparency (0-1)
		overlayOpacity: 0.8,
		// Fade in time on open ('slow','medium','fast' or integer in ms)
		fadeInTime: 'fast',
		// Fade out time on close ('slow','medium','fast' or integer in ms)
		fadeOutTime: 'fast',
		// Google Analytics Link Tracking (Optional)
		// Set to true to enable
		// Note: Analytics tracking code must be added separately
		analytics: false
	}, options);
	// Set default browsers to display if not already defined
	if (opts.display.length < 1) {
		opts.display = [ 'chrome','firefox','safari','opera','msie' ];
	}
	// beforeRject: Customized Function
	if ($.isFunction(opts.beforeReject)) {
		opts.beforeReject();
	}
	// Disable 'closeESC' if closing is disabled (mutually exclusive)
	if (!opts.close) {
		opts.closeESC = false;
	}
	// This function parses the advanced browser options
	var browserCheck = function(settings) {
		// Check 1: Look for 'all' forced setting
		// Check 2: Browser+major version (optional) (eg. 'firefox','msie','{msie: 6}')
		// Check 3: Browser+major version (eg. 'firefox3','msie7','chrome4')
		// Check 4: Rendering engine+version (eg. 'webkit', 'gecko', '{webkit: 537.36}')
		// Check 5: Operating System (eg. 'win','mac','linux','solaris','iphone')
		var layout = settings[$.layout.name],
			browser = settings[$.browser.name];
		return !!(settings['all']
			|| (browser && (browser === true || $.browser.versionNumber <= browser))
			|| settings[$.browser.className]
			|| (layout && (layout === true || $.layout.versionNumber <= layout))
			|| settings[$.os.name]);
	};
	// Determine if we need to display rejection for this browser, or exit
	if (!browserCheck(opts.reject)) {
		// onFail: Optional Callback
		if ($.isFunction(opts.onFail)) {
			opts.onFail();
		}
		return false;
	}
	// If user can close and set to remmember close, initiate cookie functions
	if (opts.close && opts.closeCookie) {
		// Local global setting for the name of the cookie used
		var COOKIE_NAME = 'jreject-close';
		// Cookies Function: Handles creating/retrieving/deleting cookies
		// Cookies are only used for opts.closeCookie parameter functionality
		var _cookie = function(name, value) {
			// Save cookie
			if (typeof value != 'undefined') {
				var expires = '';
				// Check if we need to set an expiration date
				if (opts.cookieSettings.expires !== 0) {
					var date = new Date();
					date.setTime(date.getTime()+(opts.cookieSettings.expires*1000));
					expires = "; expires="+date.toGMTString();
				}
				// Get path from settings
				var path = opts.cookieSettings.path || '/';
				// Set Cookie with parameters
				document.cookie = name+'='+
					encodeURIComponent((!value) ? '' : value)+expires+
					'; path='+path;
				return true;
			}
			// Get cookie
			else {
				var cookie,val = null;
				if (document.cookie && document.cookie !== '') {
					var cookies = document.cookie.split(';');
					// Loop through all cookie values
					var clen = cookies.length;
					for (var i = 0; i < clen; ++i) {
						cookie = $.trim(cookies[i]);
						// Does this cookie string begin with the name we want?
						if (cookie.substring(0,name.length+1) == (name+'=')) {
							var len = name.length;
							val = decodeURIComponent(cookie.substring(len+1));
							break;
						}
					}
				}
				// Returns cookie value
				return val;
			}
		};
		// If cookie is set, return false and don't display rejection
		if (_cookie(COOKIE_NAME)) {
			return false;
		}
	}
	// Load background overlay (jr_overlay) + Main wrapper (jr_wrap) +
	// Inner Wrapper (jr_inner) w/ opts.header (jr_header) +
	// opts.paragraph1/opts.paragraph2 if set
	var html = '<div id="jr_overlay"></div><div id="jr_wrap"><div id="jr_inner">'+
		'<h1 id="jr_header">'+opts.header+'</h1>'+
		(opts.paragraph1 === '' ? '' : '<p>'+opts.paragraph1+'</p>')+
		(opts.paragraph2 === '' ? '' : '<p>'+opts.paragraph2+'</p>');
	var displayNum = 0;
	if (opts.browserShow) {
		html += '<ul>';
		// Generate the browsers to display
		for (var x in opts.display) {
			var browser = opts.display[x]; // Current Browser
			var info = opts.browserInfo[browser] || false; // Browser Information
			// If no info exists for this browser
			// or if this browser is not suppose to display to this user
			// based on "allow" flag
			if (!info || (info['allow'] != undefined && !browserCheck(info['allow']))) {
				continue;
			}
			var url = info.url || '#'; // URL to link text/icon to
			// Generate HTML for this browser option
			html += '<li id="jr_'+browser+'"><div class="jr_icon"></div>'+
					'<div><a href="'+url+'">'+(info.text || 'Unknown')+'</a>'+
					'</div></li>';
			++displayNum;
		}
		html += '</ul>';
	}
	// Close list and #jr_list
	html += '<div id="jr_close">'+
	// Display close links/message if set
	(opts.close ? '<a href="'+opts.closeURL+'">'+opts.closeLink+'</a>'+
		'<p>'+opts.closeMessage+'</p>' : '')+'</div>'+
	// Close #jr_inner and #jr_wrap
	'</div></div>';
	var element = $('<div>'+html+'</div>'); // Create element
	var size = _pageSize(); // Get page size
	var scroll = _scrollSize(); // Get page scroll
	// This function handles closing this reject window
	// When clicked, fadeOut and remove all elements
	element.bind('closejr', function() {
		// Make sure the permission to close is granted
		if (!opts.close) {
			return false;
		}
		// Customized Function
		if ($.isFunction(opts.beforeClose)) {
			opts.beforeClose();
		}
		// Remove binding function so it
		// doesn't get called more than once
		$(this).unbind('closejr');
		// Fade out background and modal wrapper
		$('#jr_overlay,#jr_wrap').fadeOut(opts.fadeOutTime,function() {
			$(this).remove(); // Remove element from DOM
			// afterClose: Customized Function
			if ($.isFunction(opts.afterClose)) {
				opts.afterClose();
			}
		});
		// Show elements that were hidden for layering issues
		var elmhide = 'embed.jr_hidden, object.jr_hidden, select.jr_hidden, applet.jr_hidden';
		$(elmhide).show().removeClass('jr_hidden');
		// Set close cookie for next run
		if (opts.closeCookie) {
			_cookie(COOKIE_NAME, 'true');
		}
		return true;
	});
	// Tracks clicks in Google Analytics (category 'External Links')
	// only if opts.analytics is enabled
	var analytics = function(url) {
		if (!opts.analytics) {
			return false;
		}
		// Get just the hostname
		var host = url.split(/\/+/g)[1];
		// Send external link event to Google Analaytics
		// Attempts both versions of analytics code. (Newest first)
		try {
			// Newest analytics code
			ga('send', 'event', 'External', 'Click', host, url);
		} catch (e) {
			try {
				_gaq.push([ '_trackEvent', 'External Links',  host, url ]);
			} catch (e) { }
		}
	};
	// Called onClick for browser links (and icons)
	// Opens link in new window
	var openBrowserLinks = function(url) {
		// Send link to analytics if enabled
		analytics(url);
		// Open window, generate random id value
		window.open(url, 'jr_'+ Math.round(Math.random()*11));
		return false;
	};
	/*
	 * Trverse through element DOM and apply JS variables
	 * All CSS elements that do not require JS will be in
	 * css/jquery.jreject.css
	 */
	// Creates 'background' (div)
	element.find('#jr_overlay').css({
		width: size[0],
		height: size[1],
		background: opts.overlayBgColor,
		opacity: opts.overlayOpacity
	});
	// Wrapper for our pop-up (div)
	element.find('#jr_wrap').css({
		top: scroll[1]+(size[3]/4),
		left: scroll[0]
	});
	// Wrapper for inner centered content (div)
	element.find('#jr_inner').css({
		minWidth: displayNum*100,
		maxWidth: displayNum*140,
		// min/maxWidth not supported by IE
		width: $.layout.name == 'trident' ? displayNum*155 : 'auto'
	});
//	element.find('#jr_inner li').css({ // Browser list items (li)
//		background: 'transparent url("'+opts.imagePath+'background_browser.gif") '+
//					'no-repeat scroll left top'
//	});
	element.find('#jr_inner li .jr_icon').each(function() {
		// Dynamically sets the icon background image
		var self = $(this);
		self.css('background-image','url('+opts.imagePath+'browser_'+
				(self.parent('li').attr('id').replace(/jr_/,''))+'.svg)');
		// Send link clicks to openBrowserLinks
		self.click(function () {
			var url = $(this).next('div').children('a').attr('href');
			openBrowserLinks(url);
		});
	});
	element.find('#jr_inner li a').click(function() {
		openBrowserLinks($(this).attr('href'));
		return false;
	});
	// Bind closing event to trigger closejr
	// to be consistant with ESC key close function
	element.find('#jr_close a').click(function() {
		$(this).trigger('closejr');
		// If plain anchor is set, return false so there is no page jump
		if (opts.closeURL === '#') {
			return false;
		}
	});
	// Set focus (fixes ESC key issues with forms and other focus bugs)
	$('#jr_overlay').focus();
	// Hide elements that won't display properly
	$('embed, object, select, applet').each(function() {
		if ($(this).is(':visible')) {
			$(this).hide().addClass('jr_hidden');
		}
	});
	// Append element to body of document to display
	$('body').append(element.hide().fadeIn(opts.fadeInTime));
	// Handle window resize/scroll events and update overlay dimensions
	$(window).bind('resize scroll',function() {
		var size = _pageSize(); // Get size
		// Update overlay dimensions based on page size
		$('#jr_overlay').css({
			width: size[0],
			height: size[1]
		});
		var scroll = _scrollSize(); // Get page scroll
		// Update modal position based on scroll
		$('#jr_wrap').css({
			top: scroll[1] + (size[3]/4),
			left: scroll[0]
		});
	});
	// Add optional ESC Key functionality
	if (opts.closeESC) {
		$(document).bind('keydown',function(event) {
			// ESC = Keycode 27
			if (event.keyCode == 27) {
				element.trigger('closejr');
			}
		});
	}
	// afterReject: Customized Function
	if ($.isFunction(opts.afterReject)) {
		opts.afterReject();
	}
	return true;
};
// Based on compatibility data from quirksmode.com
// This is used to help calculate exact center of the page
var _pageSize = function() {
	var xScroll = window.innerWidth && window.scrollMaxX ?
				window.innerWidth + window.scrollMaxX :
				(document.body.scrollWidth > document.body.offsetWidth ?
				document.body.scrollWidth : document.body.offsetWidth);
	var yScroll = window.innerHeight && window.scrollMaxY ?
				window.innerHeight + window.scrollMaxY :
				(document.body.scrollHeight > document.body.offsetHeight ?
				document.body.scrollHeight : document.body.offsetHeight);
	var windowWidth = window.innerWidth ? window.innerWidth :
				(document.documentElement && document.documentElement.clientWidth ?
				document.documentElement.clientWidth : document.body.clientWidth);
	var windowHeight = window.innerHeight ? window.innerHeight :
				(document.documentElement && document.documentElement.clientHeight ?
				document.documentElement.clientHeight : document.body.clientHeight);
	return [
		xScroll < windowWidth ? xScroll : windowWidth, // Page Width
		yScroll < windowHeight ? windowHeight : yScroll, // Page Height
		windowWidth,windowHeight
	];
};
// Based on compatibility data from quirksmode.com
var _scrollSize = function() {
	return [
		// scrollSize X
		window.pageXOffset ? window.pageXOffset : (document.documentElement &&
				document.documentElement.scrollTop ?
				document.documentElement.scrollLeft : document.body.scrollLeft),
		// scrollSize Y
		window.pageYOffset ? window.pageYOffset : (document.documentElement &&
				document.documentElement.scrollTop ?
				document.documentElement.scrollTop : document.body.scrollTop)
	];
};
})(jQuery);
/*
 * jQuery Browser Plugin
 * Version 2.4 / jReject 1.0.x
 * URL: http://jquery.thewikies.com/browser
 * Description: jQuery Browser Plugin extends browser detection capabilities and
 * can assign browser selectors to CSS classes.
 * Author: Nate Cavanaugh, Minhchau Dang, Jonathan Neal, & Gregory Waxman
 * Updated By: Steven Bower for use with jReject plugin
 * Copyright: Copyright (c) 2008 Jonathan Neal under dual MIT/GPL license.
 */
(function ($) {
	$.browserTest = function (a, z) {
		var u = 'unknown',
			x = 'X',
			m = function (r, h) {
				for (var i = 0; i < h.length; i = i + 1) {
					r = r.replace(h[i][0], h[i][1]);
				}
				return r;
			}, c = function (i, a, b, c) {
				var r = {
					name: m((a.exec(i) || [u, u])[1], b)
				};
				r[r.name] = true;
				if (!r.opera) {
					r.version = (c.exec(i) || [x, x, x, x])[3];
				}
				else {
					r.version = window.opera.version();
				}
				if (/safari/.test(r.name)) {
					var safariversion = /(safari)(\/|\s)([a-z0-9\.\+]*?)(\;|dev|rel|\s|$)/;
					var res = safariversion.exec(i);
					if (res && res[3] && res[3] < 400) {
						r.version = '2.0';
					}
				}
				else if (r.name === 'presto') {
					r.version = ($.browser.version > 9.27) ? 'futhark' : 'linear_b';
				}
				if (/msie/.test(r.name) && r.version === x) {
					var ieVersion = /rv:(\d+\.\d+)/.exec(i);
					r.version = ieVersion[1];
				}
				r.versionNumber = parseFloat(r.version, 10) || 0;
				var minorStart = 1;
				if (r.versionNumber < 100 && r.versionNumber > 9) {
					minorStart = 2;
				}
				r.versionX = (r.version !== x) ? r.version.substr(0, minorStart) : x;
				r.className = r.name + r.versionX;
				return r;
			};
		a = (/Opera|Navigator|Minefield|KHTML|Chrome|CriOS/.test(a) ? m(a, [
			[/(Firefox|MSIE|KHTML,\slike\sGecko|Konqueror)/, ''],
			['Chrome Safari', 'Chrome'],
			['CriOS', 'Chrome'],
			['KHTML', 'Konqueror'],
			['Minefield', 'Firefox'],
			['Navigator', 'Netscape']
		]) : a).toLowerCase();
		$.browser = $.extend((!z) ? $.browser : {}, c(a,
			/(camino|chrome|crios|firefox|netscape|konqueror|lynx|msie|trident|opera|safari)/,
			[
				['trident', 'msie']
			],
			/(camino|chrome|crios|firefox|netscape|netscape6|opera|version|konqueror|lynx|msie|rv|safari)(:|\/|\s)([a-z0-9\.\+]*?)(\;|dev|rel|\s|$)/));
		$.layout = c(a, /(gecko|konqueror|msie|trident|opera|webkit)/, [
			['konqueror', 'khtml'],
			['msie', 'trident'],
			['opera', 'presto']
		], /(applewebkit|rv|konqueror|msie)(\:|\/|\s)([a-z0-9\.]*?)(\;|\)|\s)/);
		$.os = {
			name: (/(win|mac|linux|sunos|solaris|iphone|ipad)/.
					exec(navigator.platform.toLowerCase()) || [u])[0].replace('sunos', 'solaris')
		};
		if (!z) {
			$('html').addClass([$.os.name, $.browser.name, $.browser.className,
				$.layout.name, $.layout.className].join(' '));
		}
	};
	$.browserTest(navigator.userAgent);
}(jQuery));
/* dropDown menu */var dropMenu = (function() {	var popupObj = {		changeState: function( $this, setting) {			var modals = setting.drop,				parentBlocks = $(setting.parent),				$modal = parentBlocks.find(modals),				titleLink = $this.parent();			if ($modal.hasClass('active') && setting.overlay) {				$modal.removeClass('active');				titleLink.removeClass('active');				$(parentBlocks).removeClass('active');				$('html').removeClass('overlay-overflow');				$(setting.overlay).removeClass('active');				popupObj.removeHeight(setting);			} else if (!$modal.hasClass('active') && setting.overlay) {				$modal.addClass('active');				titleLink.addClass('active');				$(parentBlocks).addClass('active');				$('html').addClass('overlay-overflow');				$(setting.overlay).addClass('active');				popupObj.fixHeight($this, setting);			} else if ($modal.hasClass('active') && !setting.overlay) {				$modal.removeClass('active');				$(parentBlocks).removeClass('active');				titleLink.removeClass('active');			} else if (!$modal.hasClass('active') && !setting.overlay) {				$modal.addClass('active');				$(parentBlocks).addClass('active');				titleLink.addClass('active');			}			console.log('changeState popup');			$('.js-clsoe-navBar').parent().removeClass('active');		},		closePopup: function(setting) {			if ( $(setting.drop).hasClass('active') && ( $(setting.overlay).hasClass('active') && $('html').hasClass('overlay-overflow')) && !setting.noMenu ) {				$(setting.drop).removeClass('active');				$(setting.overlay).removeClass('active');				$(setting.link).parent().removeClass('active');				$(setting.parent).removeClass('active');				$('html').removeClass('overlay-overflow');				popupObj.removeHeight(setting);			}else if ( setting.noMenu &&  $(setting.drop).hasClass('active') && ( $(setting.overlay).hasClass('active')  ) ) {				$(setting.drop).removeClass('active');				$(setting.overlay).removeClass('active');				$(setting.link).parent().removeClass('active');				$(setting.parent).removeClass('active');				popupObj.removeHeight(setting);			}else if ( !setting.overlay && $(setting.drop).hasClass('active') ) {				$(setting.drop).removeClass('active');				$(setting.link).parent().removeClass('active');				$(setting.parent).removeClass('active');			}		},		fixHeight: function($this, setting) {			var windowHeight = $(window).outerHeight(),					box = $(setting.drop),					boxHeight = box.outerHeight();					boxTop = box.offset().top			function checkHeight() {				if ( windowHeight < boxHeight + boxTop ) {					box.css('height', windowHeight - boxTop );				}else {					box.css('height', '');				}			}			checkHeight();		},		removeHeight: function(setting) {			var box = $(setting.drop);			box.css('height', '');		},		changePopup: function( $this ) {			var $popupBlocks = $('.modal-lk-block');			var linkId = $this.attr('href');			$popupBlocks.each(function() {				if ( '#' + $(this).attr('id') == linkId ) {					$popupBlocks.css('display', 'none');					$popupBlocks.find('.modal-lk__form-input').val('');					$(this).css('display', 'block');				}			})		},		hidePopup: function(setting) {			if ( $(setting.drop).hasClass('active') ) {				$(setting.drop).removeClass('active');				$(setting.parent).removeClass('active');				popupObj.removeHeight(setting);				console.log('hidePopup popup');			}		},		changePos: function( $this, setting ) {			var parentBox = $this.parents(setting.parent);			var filterLink = parentBox.find(setting.link);			var dropBox = parentBox.find(setting.drop);			var windW = $(window).outerWidth();			var parentBoxW = parentBox.outerWidth();			var parentBoxL = parentBox.offset().left;			var parentBoxR = windW - parentBoxL - parentBoxW;			var dropBoxW = dropBox.outerWidth();			if ( parentBoxR < dropBoxW ) {				dropBox.addClass('position-right');				filterLink.addClass('link-pos-right');			}else {				dropBox.removeClass('position-right');				filterLink.removeClass('link-pos-right');			}		},		eventClick: function(setting) {			var openLink = $(setting.link);			var closeLink = $(setting.drop).find('.modal__close');			//open popup			openLink.on('click', function(e) {				var modal = setting.drop,						parentBlock = setting.parent;				if ( $(this).parents(parentBlock).find(modal).length ) {					popupObj.changeState( $(this), setting );					if ( setting.changePos ) {						popupObj.changePos( $(this), setting );					}					e.preventDefault();				}			});			//close popup			closeLink.on('click', function(e) {				popupObj.closePopup(setting);				e.preventDefault();			});			//change popup			$('.modal-lk__bottom-link').on('click', function(e) {				popupObj.changePopup( $(this) );				e.preventDefault();			});			//close popup			$(window).on('click', function(e) {				var $this = $(e.target);				//console.log($this);				if ( $(setting.drop).hasClass('active') && !$this.closest(setting.parent).length && !$this.closest('.js-overlay').length ) {					popupObj.closePopup(setting);				}else if (  $(setting.drop).hasClass('active') && !$this.closest(setting.parent).length && $this.closest('.js-overlay').length ) {					popupObj.hidePopup(setting);				}				if ( $this.hasClass('overlay2') ) {					//popupObj.closePopup(setting);					//$('.js-clsoe-navBar').trigger('click');				}				if ( $(setting.drop).hasClass('active') && $this.closest('.js-overlay').length && !$this.closest('.header-mob-menu__list-item') ) {					console.log('12');				}			});			// close modal			$('.js-close-modal').on('click', function(e) {				popupObj.closePopup(setting);				e.preventDefault();			});			// mob close modal nav			$('.header-mob-menu__drop-lk .modal__close, .header-mob-menu__messengers .modal__close, .js-mob-search-parent .header-search__close').on('click', function(e) {				$('.js-clsoe-navBar').trigger('click');				e.preventDefault();			});			//mob search nav focus			$('.js-mob-search-nav-btn').on('click', function(e) {				$(this).parents('.header-search').find('.header-search__input').focus();				e.preventDefault();			});		}	};	return {		drop: function(setting) {			popupObj.eventClick(setting);		}	}}());/* exampledropMenu.drop({	link: '.js-filters-brand',	drop: '.js-filters-brand-drop', 	parent: '.js-filters-brand-parent',	noMenu: false,	overlay: false,});*//* dropDown menu end*//* filter blocks */var FilterBlocks = function(setting) {	//constructor props	this.input = $(setting.input);	this.blocks = $(setting.blocks);	this.title = $(setting.title);	this.events();};//proto methodsFilterBlocks.prototype = {	markMatch: function(text, term, $this) {		// Find where the match is    var match = text.toUpperCase().indexOf(term.toUpperCase());    //console.log(match);    var $result = $('<span></span>');    // If there is no match, move on    if (match < 0) {    	$this.hide();      return $result.text(text);    }    // Put in whatever text is before the match    $result.text(text.substring(0, match));    // Mark the match    var $match = $('<b></b>');    $match.text(text.substring(match, match + term.length));    // Append the matching text    $result.append($match);    // Put in whatever is after the match    $result.append(text.substring(match + term.length));    $this.show();    return $result;	},	filterBlocks: function(val) {		var thet = this;		var $title = this.title;		var val = val.toLowerCase();		var $blocks = this.blocks;		$blocks.show();		$blocks.each(function() {			var thisText = $(this).find($title).text();			var result = thet.markMatch(thisText, val, $(this));			$(this).find($title).html(result)		})	},	events: function() {		var _this = this;		this.input.on('input', function() {			_this.filterBlocks( $(this).val() )		})	}}/* examplevar mySearch = new FilterBlocks({	input: '.js-filter-input',	blocks: '.product-filter-check__row',	title: '.checkbox__text'});*//* filter blocks end*/$.fn.spinner = function(options) {	options = $.extend({     min: 0  }, options);  var make = function() {			var self = $(this),				$input = self.find('input'),				$plus = self.find('.js-spinner-plus'),				$minus = self.find('.js-spinner-minus'),				min = self.data('min'),				max = self.data('max');			function disable() {				if (parseInt($input.val(), 10) <= min) {					$minus.addClass('disable');					$input.val(min)				} else if (parseInt($input.val(), 10) >= max) {					$plus.addClass('disable');				} else {					$minus.removeClass('disable');					$plus.removeClass('disable');				}			} 			disable();			$input.val(min).on('keydown', function(e){e.preventDefault()});			$plus.on('click', function(e) {				e.preventDefault();				if(parseInt($input.val(), 10) >= max){					return false;				} else {					$input.val( parseInt($input.val(), 10) + 1);					disable();					self.trigger('plus');					self.trigger('update');				}			});			$minus.on('click', function(e) {				e.preventDefault();				if(parseInt($input.val(), 10) <= min){					return false;				} else {					$input.val( parseInt($input.val(), 10) - 1);					disable();					self.trigger('minus');					self.trigger('update');				}			});		}  return this.each(make); }function checkMaskPhone(val) {	var arr = val.split('_');	for(var i = 0; i < arr.length; i++) {		if( arr[i] == '' ) {			return false		}	}	return true;}function openPopup( form ) {	var $btn = $(form).find('button[type="submit"]'),			popupPath = $btn.data('src');	$.fancybox.open({		src: popupPath	});};/*! * Simple jQuery Equal Heights * * Copyright (c) 2013 Matt Banks * Dual licensed under the MIT and GPL licenses. * Uses the same license as jQuery, see: * http://docs.jquery.com/License * * @version 1.5.1 */(function($) {    $.fn.equalHeights = function() {        var maxHeight = 0,            $this = $(this);        $this.each( function() {            var height = $(this).innerHeight();            if ( height > maxHeight ) { maxHeight = height; }        });        return $this.css('height', maxHeight);    };    // auto-initialize plugin    $('[data-equal]').each(function(){        var $this = $(this),            target = $this.data('equal');        $this.find(target).equalHeights();    });})(jQuery);$.fn.dropDown = function(options) {	options = $.extend({    dropClass: '.js-drop-cont',    linkClass: '.js-drop-link'  }, options);	$links = this.find(options.linkClass);	$links.on('click', function(e) {		var $drop = $(this).parent().find(options.dropClass);		$(this).parent().find(options.dropClass).slideToggle();		$links.not($(this)).parent().find(options.dropClass).slideUp();		$links.not($(this)).removeClass('active');		$(this).toggleClass('active');		e.preventDefault();	})	return this;}function formatNumber(val) {	return val.toString().replace(/(\d)(?=(\d\d\d)+([^\d]|$))/g, '$1 ');}function formatStringToNumber(val) {	val = val.replace(' ', '');	val = parseInt( val , 10 )	return val;}var keys = {37: 1, 38: 1, 39: 1, 40: 1};function preventDefault(e) {  e = e || window.event;  if (e.preventDefault)      e.preventDefault();  e.returnValue = false;  }function preventDefaultForScrollKeys(e) {    if (keys[e.keyCode]) {        preventDefault(e);        return false;    }}function disableScroll() {  if (window.addEventListener) // older FF      window.addEventListener('DOMMouseScroll', preventDefault, false);  window.onwheel = preventDefault; // modern standard  window.onmousewheel = document.onmousewheel = preventDefault; // older browsers, IE  window.ontouchmove  = preventDefault; // mobile  document.onkeydown  = preventDefaultForScrollKeys;}function enableScroll() {    if (window.removeEventListener)        window.removeEventListener('DOMMouseScroll', preventDefault, false);    window.onmousewheel = document.onmousewheel = null;     window.onwheel = null;     window.ontouchmove = null;      document.onkeydown = null;  };// Numeric only control handlerjQuery.fn.ForceNumericOnly =function(){    return this.each(function()    {        $(this).keydown(function(e)        {            var key = e.charCode || e.keyCode || 0;            // allow backspace, tab, delete, enter, arrows, numbers and keypad numbers ONLY            // home, end, period, and numpad decimal            return (                key == 8 ||                 key == 9 ||                key == 13 ||                key == 46 ||                key == 110 ||                key == 190 ||                (key >= 35 && key <= 40) ||                (key >= 48 && key <= 57) ||                (key >= 96 && key <= 105));        });    });};/*!
* inputmask.js
* https://github.com/RobinHerbots/Inputmask
* Copyright (c) 2010 - 2018 Robin Herbots
* Licensed under the MIT license (http://www.opensource.org/licenses/mit-license.php)
* Version: 4.0.0-beta.64
*/
!function(factory) {
    "function" == typeof define && define.amd ? define([ "./dependencyLibs/inputmask.dependencyLib", "./global/window", "./global/document" ], factory) : "object" == typeof exports ? module.exports = factory(require("./dependencyLibs/inputmask.dependencyLib"), require("./global/window"), require("./global/document")) : window.Inputmask = factory(window.dependencyLib || jQuery, window, document);
}(function($, window, document, undefined) {
    var ua = navigator.userAgent, mobile = isInputEventSupported("touchstart"), iemobile = /iemobile/i.test(ua), iphone = /iphone/i.test(ua) && !iemobile;
    function Inputmask(alias, options, internal) {
        if (!(this instanceof Inputmask)) return new Inputmask(alias, options, internal);
        this.el = undefined, this.events = {}, this.maskset = undefined, this.refreshValue = !1, 
        !0 !== internal && ($.isPlainObject(alias) ? options = alias : (options = options || {}, 
        alias && (options.alias = alias)), this.opts = $.extend(!0, {}, this.defaults, options), 
        this.noMasksCache = options && options.definitions !== undefined, this.userOptions = options || {}, 
        this.isRTL = this.opts.numericInput, resolveAlias(this.opts.alias, options, this.opts));
    }
    function resolveAlias(aliasStr, options, opts) {
        var aliasDefinition = Inputmask.prototype.aliases[aliasStr];
        return aliasDefinition ? (aliasDefinition.alias && resolveAlias(aliasDefinition.alias, undefined, opts), 
        $.extend(!0, opts, aliasDefinition), $.extend(!0, opts, options), !0) : (null === opts.mask && (opts.mask = aliasStr), 
        !1);
    }
    function generateMaskSet(opts, nocache) {
        function generateMask(mask, metadata, opts) {
            var regexMask = !1;
            if (null !== mask && "" !== mask || ((regexMask = null !== opts.regex) ? mask = (mask = opts.regex).replace(/^(\^)(.*)(\$)$/, "$2") : (regexMask = !0, 
            mask = ".*")), 1 === mask.length && !1 === opts.greedy && 0 !== opts.repeat && (opts.placeholder = ""), 
            opts.repeat > 0 || "*" === opts.repeat || "+" === opts.repeat) {
                var repeatStart = "*" === opts.repeat ? 0 : "+" === opts.repeat ? 1 : opts.repeat;
                mask = opts.groupmarker[0] + mask + opts.groupmarker[1] + opts.quantifiermarker[0] + repeatStart + "," + opts.repeat + opts.quantifiermarker[1];
            }
            var masksetDefinition, maskdefKey = regexMask ? "regex_" + opts.regex : opts.numericInput ? mask.split("").reverse().join("") : mask;
            return Inputmask.prototype.masksCache[maskdefKey] === undefined || !0 === nocache ? (masksetDefinition = {
                mask: mask,
                maskToken: Inputmask.prototype.analyseMask(mask, regexMask, opts),
                validPositions: {},
                _buffer: undefined,
                buffer: undefined,
                tests: {},
                excludes: {},
                metadata: metadata,
                maskLength: undefined
            }, !0 !== nocache && (Inputmask.prototype.masksCache[maskdefKey] = masksetDefinition, 
            masksetDefinition = $.extend(!0, {}, Inputmask.prototype.masksCache[maskdefKey]))) : masksetDefinition = $.extend(!0, {}, Inputmask.prototype.masksCache[maskdefKey]), 
            masksetDefinition;
        }
        if ($.isFunction(opts.mask) && (opts.mask = opts.mask(opts)), $.isArray(opts.mask)) {
            if (opts.mask.length > 1) {
                if (null === opts.keepStatic) {
                    opts.keepStatic = "auto";
                    for (var i = 0; i < opts.mask.length; i++) if (opts.mask[i].charAt(0) !== opts.mask[0].charAt(0)) {
                        opts.keepStatic = !0;
                        break;
                    }
                }
                var altMask = opts.groupmarker[0];
                return $.each(opts.isRTL ? opts.mask.reverse() : opts.mask, function(ndx, msk) {
                    altMask.length > 1 && (altMask += opts.groupmarker[1] + opts.alternatormarker + opts.groupmarker[0]), 
                    msk.mask === undefined || $.isFunction(msk.mask) ? altMask += msk : altMask += msk.mask;
                }), generateMask(altMask += opts.groupmarker[1], opts.mask, opts);
            }
            opts.mask = opts.mask.pop();
        }
        return opts.mask && opts.mask.mask !== undefined && !$.isFunction(opts.mask.mask) ? generateMask(opts.mask.mask, opts.mask, opts) : generateMask(opts.mask, opts.mask, opts);
    }
    function isInputEventSupported(eventName) {
        var el = document.createElement("input"), evName = "on" + eventName, isSupported = evName in el;
        return isSupported || (el.setAttribute(evName, "return;"), isSupported = "function" == typeof el[evName]), 
        el = null, isSupported;
    }
    function maskScope(actionObj, maskset, opts) {
        maskset = maskset || this.maskset, opts = opts || this.opts;
        var undoValue, $el, maxLength, colorMask, jitPos, inputmask = this, el = this.el, isRTL = this.isRTL, skipKeyPressEvent = !1, skipInputEvent = !1, ignorable = !1, mouseEnter = !1, jitOffset = 0;
        function getMaskTemplate(baseOnInput, minimalPos, includeMode, noJit, clearOptionalTail) {
            !0 !== noJit && (jitPos = undefined, jitOffset = 0);
            var greedy = opts.greedy;
            clearOptionalTail && (opts.greedy = !1), minimalPos = minimalPos || 0;
            var ndxIntlzr, test, testPos, maskTemplate = [], pos = 0, lvp = getLastValidPosition();
            do {
                if (!0 === baseOnInput && getMaskSet().validPositions[pos]) test = (testPos = clearOptionalTail && !0 === getMaskSet().validPositions[pos].match.optionality && getMaskSet().validPositions[pos + 1] === undefined && (!0 === getMaskSet().validPositions[pos].generatedInput || getMaskSet().validPositions[pos].input == opts.skipOptionalPartCharacter && pos > 0) ? determineTestTemplate(pos, getTests(pos, ndxIntlzr, pos - 1)) : getMaskSet().validPositions[pos]).match, 
                ndxIntlzr = testPos.locator.slice(), maskTemplate.push(!0 === includeMode ? testPos.input : !1 === includeMode ? test.nativeDef : getPlaceholder(pos, test)); else {
                    test = (testPos = getTestTemplate(pos, ndxIntlzr, pos - 1)).match, ndxIntlzr = testPos.locator.slice();
                    var jitMasking = !0 !== noJit && (!1 !== opts.jitMasking ? opts.jitMasking : test.jit);
                    !1 === jitMasking || jitMasking === undefined || pos < lvp || "number" == typeof jitMasking && isFinite(jitMasking) && jitMasking > pos ? maskTemplate.push(!1 === includeMode ? test.nativeDef : getPlaceholder(pos, test)) : test.jit && test.optionalQuantifier !== undefined && (jitPos = pos, 
                    jitOffset++);
                }
                "auto" === opts.keepStatic && test.newBlockMarker && null !== test.fn && (opts.keepStatic = pos - 1), 
                pos++;
            } while ((maxLength === undefined || pos < maxLength) && (null !== test.fn || "" !== test.def) || minimalPos > pos);
            return "" === maskTemplate[maskTemplate.length - 1] && maskTemplate.pop(), !1 === includeMode && getMaskSet().maskLength !== undefined || (getMaskSet().maskLength = pos - 1), 
            opts.greedy = greedy, maskTemplate;
        }
        function getMaskSet() {
            return maskset;
        }
        function resetMaskSet(soft) {
            var maskset = getMaskSet();
            maskset.buffer = undefined, !0 !== soft && (maskset.validPositions = {}, maskset.p = 0);
        }
        function getLastValidPosition(closestTo, strict, validPositions) {
            var before = -1, after = -1, valids = validPositions || getMaskSet().validPositions;
            for (var posNdx in closestTo === undefined && (closestTo = -1), valids) {
                var psNdx = parseInt(posNdx);
                valids[psNdx] && (strict || !0 !== valids[psNdx].generatedInput) && (psNdx <= closestTo && (before = psNdx), 
                psNdx >= closestTo && (after = psNdx));
            }
            return -1 === before || before == closestTo ? after : -1 == after ? before : closestTo - before < after - closestTo ? before : after;
        }
        function getDecisionTaker(tst) {
            var decisionTaker = tst.locator[tst.alternation];
            return "string" == typeof decisionTaker && decisionTaker.length > 0 && (decisionTaker = decisionTaker.split(",")[0]), 
            decisionTaker !== undefined ? decisionTaker.toString() : "";
        }
        function getLocator(tst, align) {
            var locator = (tst.alternation != undefined ? tst.mloc[getDecisionTaker(tst)] : tst.locator).join("");
            if ("" !== locator) for (;locator.length < align; ) locator += "0";
            return locator;
        }
        function determineTestTemplate(pos, tests) {
            for (var tstLocator, closest, bestMatch, targetLocator = getLocator(getTest(pos = pos > 0 ? pos - 1 : 0)), ndx = 0; ndx < tests.length; ndx++) {
                var tst = tests[ndx];
                tstLocator = getLocator(tst, targetLocator.length);
                var distance = Math.abs(tstLocator - targetLocator);
                (closest === undefined || "" !== tstLocator && distance < closest || bestMatch && bestMatch.match.optionality && "master" === bestMatch.match.newBlockMarker && (!tst.match.optionality || !tst.match.newBlockMarker) || bestMatch && bestMatch.match.optionalQuantifier && !tst.match.optionalQuantifier) && (closest = distance, 
                bestMatch = tst);
            }
            return bestMatch;
        }
        function getTestTemplate(pos, ndxIntlzr, tstPs) {
            return getMaskSet().validPositions[pos] || determineTestTemplate(pos, getTests(pos, ndxIntlzr ? ndxIntlzr.slice() : ndxIntlzr, tstPs));
        }
        function getTest(pos, tests) {
            return getMaskSet().validPositions[pos] ? getMaskSet().validPositions[pos] : (tests || getTests(pos))[0];
        }
        function positionCanMatchDefinition(pos, def) {
            for (var valid = !1, tests = getTests(pos), tndx = 0; tndx < tests.length; tndx++) if (tests[tndx].match && tests[tndx].match.def === def) {
                valid = !0;
                break;
            }
            return valid;
        }
        function getTests(pos, ndxIntlzr, tstPs) {
            var latestMatch, maskTokens = getMaskSet().maskToken, testPos = ndxIntlzr ? tstPs : 0, ndxInitializer = ndxIntlzr ? ndxIntlzr.slice() : [ 0 ], matches = [], insertStop = !1, cacheDependency = ndxIntlzr ? ndxIntlzr.join("") : "";
            function resolveTestFromToken(maskToken, ndxInitializer, loopNdx, quantifierRecurse) {
                function handleMatch(match, loopNdx, quantifierRecurse) {
                    function isFirstMatch(latestMatch, tokenGroup) {
                        var firstMatch = 0 === $.inArray(latestMatch, tokenGroup.matches);
                        return firstMatch || $.each(tokenGroup.matches, function(ndx, match) {
                            if (!0 === match.isQuantifier ? firstMatch = isFirstMatch(latestMatch, tokenGroup.matches[ndx - 1]) : !0 === match.isOptional ? firstMatch = isFirstMatch(latestMatch, match) : !0 === match.isAlternate && (firstMatch = isFirstMatch(latestMatch, match)), 
                            firstMatch) return !1;
                        }), firstMatch;
                    }
                    function resolveNdxInitializer(pos, alternateNdx, targetAlternation) {
                        var bestMatch, indexPos;
                        if ((getMaskSet().tests[pos] || getMaskSet().validPositions[pos]) && $.each(getMaskSet().tests[pos] || [ getMaskSet().validPositions[pos] ], function(ndx, lmnt) {
                            if (lmnt.mloc[alternateNdx]) return bestMatch = lmnt, !1;
                            var alternation = targetAlternation !== undefined ? targetAlternation : lmnt.alternation, ndxPos = lmnt.locator[alternation] !== undefined ? lmnt.locator[alternation].toString().indexOf(alternateNdx) : -1;
                            (indexPos === undefined || ndxPos < indexPos) && -1 !== ndxPos && (bestMatch = lmnt, 
                            indexPos = ndxPos);
                        }), bestMatch) {
                            var bestMatchAltIndex = bestMatch.locator[bestMatch.alternation];
                            return (bestMatch.mloc[alternateNdx] || bestMatch.mloc[bestMatchAltIndex] || bestMatch.locator).slice((targetAlternation !== undefined ? targetAlternation : bestMatch.alternation) + 1);
                        }
                        return targetAlternation !== undefined ? resolveNdxInitializer(pos, alternateNdx) : undefined;
                    }
                    function isSubsetOf(source, target) {
                        function expand(pattern) {
                            for (var start, end, expanded = [], i = 0, l = pattern.length; i < l; i++) if ("-" === pattern.charAt(i)) for (end = pattern.charCodeAt(i + 1); ++start < end; ) expanded.push(String.fromCharCode(start)); else start = pattern.charCodeAt(i), 
                            expanded.push(pattern.charAt(i));
                            return expanded.join("");
                        }
                        return opts.regex && null !== source.match.fn && null !== target.match.fn ? -1 !== expand(target.match.def.replace(/[\[\]]/g, "")).indexOf(expand(source.match.def.replace(/[\[\]]/g, ""))) : source.match.def === target.match.nativeDef;
                    }
                    function setMergeLocators(targetMatch, altMatch) {
                        if (altMatch === undefined || targetMatch.alternation === altMatch.alternation && -1 === targetMatch.locator[targetMatch.alternation].toString().indexOf(altMatch.locator[altMatch.alternation])) {
                            targetMatch.mloc = targetMatch.mloc || {};
                            var locNdx = targetMatch.locator[targetMatch.alternation];
                            if (locNdx !== undefined) {
                                if ("string" == typeof locNdx && (locNdx = locNdx.split(",")[0]), targetMatch.mloc[locNdx] === undefined && (targetMatch.mloc[locNdx] = targetMatch.locator.slice()), 
                                altMatch !== undefined) {
                                    for (var ndx in altMatch.mloc) "string" == typeof ndx && (ndx = ndx.split(",")[0]), 
                                    targetMatch.mloc[ndx] === undefined && (targetMatch.mloc[ndx] = altMatch.mloc[ndx]);
                                    targetMatch.locator[targetMatch.alternation] = Object.keys(targetMatch.mloc).join(",");
                                }
                                return !0;
                            }
                            targetMatch.alternation = undefined;
                        }
                        return !1;
                    }
                    if (testPos > 5e3) throw "Inputmask: There is probably an error in your mask definition or in the code. Create an issue on github with an example of the mask you are using. " + getMaskSet().mask;
                    if (testPos === pos && match.matches === undefined) return matches.push({
                        match: match,
                        locator: loopNdx.reverse(),
                        cd: cacheDependency,
                        mloc: {}
                    }), !0;
                    if (match.matches !== undefined) {
                        if (match.isGroup && quantifierRecurse !== match) {
                            if (match = handleMatch(maskToken.matches[$.inArray(match, maskToken.matches) + 1], loopNdx, quantifierRecurse)) return !0;
                        } else if (match.isOptional) {
                            var optionalToken = match;
                            if (match = resolveTestFromToken(match, ndxInitializer, loopNdx, quantifierRecurse)) {
                                if ($.each(matches, function(ndx, mtch) {
                                    mtch.match.optionality = !0;
                                }), latestMatch = matches[matches.length - 1].match, quantifierRecurse !== undefined || !isFirstMatch(latestMatch, optionalToken)) return !0;
                                insertStop = !0, testPos = pos;
                            }
                        } else if (match.isAlternator) {
                            var maltMatches, alternateToken = match, malternateMatches = [], currentMatches = matches.slice(), loopNdxCnt = loopNdx.length, altIndex = ndxInitializer.length > 0 ? ndxInitializer.shift() : -1;
                            if (-1 === altIndex || "string" == typeof altIndex) {
                                var amndx, currentPos = testPos, ndxInitializerClone = ndxInitializer.slice(), altIndexArr = [];
                                if ("string" == typeof altIndex) altIndexArr = altIndex.split(","); else for (amndx = 0; amndx < alternateToken.matches.length; amndx++) altIndexArr.push(amndx.toString());
                                if (getMaskSet().excludes[pos]) {
                                    for (var altIndexArrClone = altIndexArr.slice(), i = 0, el = getMaskSet().excludes[pos].length; i < el; i++) altIndexArr.splice(altIndexArr.indexOf(getMaskSet().excludes[pos][i].toString()), 1);
                                    0 === altIndexArr.length && (getMaskSet().excludes[pos] = undefined, altIndexArr = altIndexArrClone);
                                }
                                (!0 === opts.keepStatic || isFinite(parseInt(opts.keepStatic)) && currentPos >= opts.keepStatic) && (altIndexArr = altIndexArr.slice(0, 1));
                                for (var unMatchedAlternation = !1, ndx = 0; ndx < altIndexArr.length; ndx++) {
                                    amndx = parseInt(altIndexArr[ndx]), matches = [], ndxInitializer = "string" == typeof altIndex && resolveNdxInitializer(testPos, amndx, loopNdxCnt) || ndxInitializerClone.slice(), 
                                    alternateToken.matches[amndx] && handleMatch(alternateToken.matches[amndx], [ amndx ].concat(loopNdx), quantifierRecurse) ? match = !0 : 0 === ndx && (unMatchedAlternation = !0), 
                                    maltMatches = matches.slice(), testPos = currentPos, matches = [];
                                    for (var ndx1 = 0; ndx1 < maltMatches.length; ndx1++) {
                                        var altMatch = maltMatches[ndx1], dropMatch = !1;
                                        altMatch.match.jit = altMatch.match.jit || unMatchedAlternation, altMatch.alternation = altMatch.alternation || loopNdxCnt, 
                                        setMergeLocators(altMatch);
                                        for (var ndx2 = 0; ndx2 < malternateMatches.length; ndx2++) {
                                            var altMatch2 = malternateMatches[ndx2];
                                            if ("string" != typeof altIndex || altMatch.alternation !== undefined && -1 !== $.inArray(altMatch.locator[altMatch.alternation].toString(), altIndexArr)) {
                                                if (altMatch.match.nativeDef === altMatch2.match.nativeDef) {
                                                    dropMatch = !0, setMergeLocators(altMatch2, altMatch);
                                                    break;
                                                }
                                                if (isSubsetOf(altMatch, altMatch2)) {
                                                    setMergeLocators(altMatch, altMatch2) && (dropMatch = !0, malternateMatches.splice(malternateMatches.indexOf(altMatch2), 0, altMatch));
                                                    break;
                                                }
                                                if (isSubsetOf(altMatch2, altMatch)) {
                                                    setMergeLocators(altMatch2, altMatch);
                                                    break;
                                                }
                                                if (target = altMatch2, null === (source = altMatch).match.fn && null !== target.match.fn && target.match.fn.test(source.match.def, getMaskSet(), pos, !1, opts, !1)) {
                                                    setMergeLocators(altMatch, altMatch2) && (dropMatch = !0, malternateMatches.splice(malternateMatches.indexOf(altMatch2), 0, altMatch));
                                                    break;
                                                }
                                            }
                                        }
                                        dropMatch || malternateMatches.push(altMatch);
                                    }
                                }
                                matches = currentMatches.concat(malternateMatches), testPos = pos, insertStop = matches.length > 0, 
                                match = malternateMatches.length > 0, ndxInitializer = ndxInitializerClone.slice();
                            } else match = handleMatch(alternateToken.matches[altIndex] || maskToken.matches[altIndex], [ altIndex ].concat(loopNdx), quantifierRecurse);
                            if (match) return !0;
                        } else if (match.isQuantifier && quantifierRecurse !== maskToken.matches[$.inArray(match, maskToken.matches) - 1]) for (var qt = match, qndx = ndxInitializer.length > 0 ? ndxInitializer.shift() : 0; qndx < (isNaN(qt.quantifier.max) ? qndx + 1 : qt.quantifier.max) && testPos <= pos; qndx++) {
                            var tokenGroup = maskToken.matches[$.inArray(qt, maskToken.matches) - 1];
                            if (match = handleMatch(tokenGroup, [ qndx ].concat(loopNdx), tokenGroup)) {
                                if ((latestMatch = matches[matches.length - 1].match).optionalQuantifier = qndx > qt.quantifier.min - 1, 
                                latestMatch.jit = qndx + tokenGroup.matches.indexOf(latestMatch) >= qt.quantifier.jit, 
                                isFirstMatch(latestMatch, tokenGroup) && qndx > qt.quantifier.min - 1) {
                                    insertStop = !0, testPos = pos;
                                    break;
                                }
                                if (qt.quantifier.jit !== undefined && isNaN(qt.quantifier.max) && latestMatch.optionalQuantifier && getMaskSet().validPositions[pos - 1] === undefined) {
                                    matches.pop(), insertStop = !0, testPos = pos, cacheDependency = undefined;
                                    break;
                                }
                                return !0;
                            }
                        } else if (match = resolveTestFromToken(match, ndxInitializer, loopNdx, quantifierRecurse)) return !0;
                    } else testPos++;
                    var source, target;
                }
                for (var tndx = ndxInitializer.length > 0 ? ndxInitializer.shift() : 0; tndx < maskToken.matches.length; tndx++) if (!0 !== maskToken.matches[tndx].isQuantifier) {
                    var match = handleMatch(maskToken.matches[tndx], [ tndx ].concat(loopNdx), quantifierRecurse);
                    if (match && testPos === pos) return match;
                    if (testPos > pos) break;
                }
            }
            if (pos > -1) {
                if (ndxIntlzr === undefined) {
                    for (var test, previousPos = pos - 1; (test = getMaskSet().validPositions[previousPos] || getMaskSet().tests[previousPos]) === undefined && previousPos > -1; ) previousPos--;
                    test !== undefined && previousPos > -1 && (ndxInitializer = function(pos, tests) {
                        var locator = [];
                        return $.isArray(tests) || (tests = [ tests ]), tests.length > 0 && (tests[0].alternation === undefined ? 0 === (locator = determineTestTemplate(pos, tests.slice()).locator.slice()).length && (locator = tests[0].locator.slice()) : $.each(tests, function(ndx, tst) {
                            if ("" !== tst.def) if (0 === locator.length) locator = tst.locator.slice(); else for (var i = 0; i < locator.length; i++) tst.locator[i] && -1 === locator[i].toString().indexOf(tst.locator[i]) && (locator[i] += "," + tst.locator[i]);
                        })), locator;
                    }(previousPos, test), cacheDependency = ndxInitializer.join(""), testPos = previousPos);
                }
                if (getMaskSet().tests[pos] && getMaskSet().tests[pos][0].cd === cacheDependency) return getMaskSet().tests[pos];
                for (var mtndx = ndxInitializer.shift(); mtndx < maskTokens.length; mtndx++) {
                    if (resolveTestFromToken(maskTokens[mtndx], ndxInitializer, [ mtndx ]) && testPos === pos || testPos > pos) break;
                }
            }
            return (0 === matches.length || insertStop) && matches.push({
                match: {
                    fn: null,
                    optionality: !1,
                    casing: null,
                    def: "",
                    placeholder: ""
                },
                locator: [],
                mloc: {},
                cd: cacheDependency
            }), ndxIntlzr !== undefined && getMaskSet().tests[pos] ? $.extend(!0, [], matches) : (getMaskSet().tests[pos] = $.extend(!0, [], matches), 
            getMaskSet().tests[pos]);
        }
        function getBufferTemplate() {
            return getMaskSet()._buffer === undefined && (getMaskSet()._buffer = getMaskTemplate(!1, 1), 
            getMaskSet().buffer === undefined && (getMaskSet().buffer = getMaskSet()._buffer.slice())), 
            getMaskSet()._buffer;
        }
        function getBuffer(noCache) {
            return getMaskSet().buffer !== undefined && !0 !== noCache || (getMaskSet().buffer = getMaskTemplate(!0, getLastValidPosition(), !0)), 
            getMaskSet().buffer;
        }
        function refreshFromBuffer(start, end, buffer) {
            var i, p;
            if (!0 === start) resetMaskSet(), start = 0, end = buffer.length; else for (i = start; i < end; i++) delete getMaskSet().validPositions[i];
            for (p = start, i = start; i < end; i++) if (resetMaskSet(!0), buffer[i] !== opts.skipOptionalPartCharacter) {
                var valResult = isValid(p, buffer[i], !0, !0);
                !1 !== valResult && (resetMaskSet(!0), p = valResult.caret !== undefined ? valResult.caret : valResult.pos + 1);
            }
        }
        function checkAlternationMatch(altArr1, altArr2, na) {
            for (var naNdx, altArrC = opts.greedy ? altArr2 : altArr2.slice(0, 1), isMatch = !1, naArr = na !== undefined ? na.split(",") : [], i = 0; i < naArr.length; i++) -1 !== (naNdx = altArr1.indexOf(naArr[i])) && altArr1.splice(naNdx, 1);
            for (var alndx = 0; alndx < altArr1.length; alndx++) if (-1 !== $.inArray(altArr1[alndx], altArrC)) {
                isMatch = !0;
                break;
            }
            return isMatch;
        }
        function alternate(pos, c, strict, fromSetValid, rAltPos) {
            var lastAlt, alternation, altPos, prevAltPos, i, validPos, decisionPos, validPsClone = $.extend(!0, {}, getMaskSet().validPositions), isValidRslt = !1, lAltPos = rAltPos !== undefined ? rAltPos : getLastValidPosition();
            if (-1 === lAltPos && rAltPos === undefined) alternation = (prevAltPos = getTest(lastAlt = 0)).alternation; else for (;lAltPos >= 0; lAltPos--) if ((altPos = getMaskSet().validPositions[lAltPos]) && altPos.alternation !== undefined) {
                if (prevAltPos && prevAltPos.locator[altPos.alternation] !== altPos.locator[altPos.alternation]) break;
                lastAlt = lAltPos, alternation = getMaskSet().validPositions[lastAlt].alternation, 
                prevAltPos = altPos;
            }
            if (alternation !== undefined) {
                decisionPos = parseInt(lastAlt), getMaskSet().excludes[decisionPos] = getMaskSet().excludes[decisionPos] || [], 
                !0 !== pos && getMaskSet().excludes[decisionPos].push(getDecisionTaker(prevAltPos));
                var validInputsClone = [], staticInputsBeforePos = 0;
                for (i = decisionPos; i < getLastValidPosition(undefined, !0) + 1; i++) (validPos = getMaskSet().validPositions[i]) && !0 !== validPos.generatedInput ? validInputsClone.push(validPos.input) : i < pos && staticInputsBeforePos++, 
                delete getMaskSet().validPositions[i];
                for (;getMaskSet().excludes[decisionPos] && getMaskSet().excludes[decisionPos].length < 10; ) {
                    var posOffset = -1 * staticInputsBeforePos, validInputs = validInputsClone.slice();
                    for (getMaskSet().tests[decisionPos] = undefined, resetMaskSet(!0), isValidRslt = !0; validInputs.length > 0; ) {
                        var input = validInputs.shift();
                        if (!(isValidRslt = isValid(getLastValidPosition(undefined, !0) + 1, input, !1, fromSetValid, !0))) break;
                    }
                    if (isValidRslt && c !== undefined) {
                        var targetLvp = getLastValidPosition(pos) + 1;
                        for (i = decisionPos; i < getLastValidPosition() + 1; i++) ((validPos = getMaskSet().validPositions[i]) === undefined || null == validPos.match.fn) && i < pos + posOffset && posOffset++;
                        isValidRslt = isValid((pos += posOffset) > targetLvp ? targetLvp : pos, c, strict, fromSetValid, !0);
                    }
                    if (isValidRslt) break;
                    if (resetMaskSet(), prevAltPos = getTest(decisionPos), getMaskSet().validPositions = $.extend(!0, {}, validPsClone), 
                    !getMaskSet().excludes[decisionPos]) {
                        isValidRslt = alternate(pos, c, strict, fromSetValid, decisionPos - 1);
                        break;
                    }
                    var decisionTaker = getDecisionTaker(prevAltPos);
                    if (-1 !== getMaskSet().excludes[decisionPos].indexOf(decisionTaker)) {
                        isValidRslt = alternate(pos, c, strict, fromSetValid, decisionPos - 1);
                        break;
                    }
                    for (getMaskSet().excludes[decisionPos].push(decisionTaker), i = decisionPos; i < getLastValidPosition(undefined, !0) + 1; i++) delete getMaskSet().validPositions[i];
                }
            }
            return getMaskSet().excludes[decisionPos] = undefined, isValidRslt;
        }
        function isValid(pos, c, strict, fromSetValid, fromAlternate, validateOnly) {
            function isSelection(posObj) {
                return isRTL ? posObj.begin - posObj.end > 1 || posObj.begin - posObj.end == 1 : posObj.end - posObj.begin > 1 || posObj.end - posObj.begin == 1;
            }
            strict = !0 === strict;
            var maskPos = pos;
            function _isValid(position, c, strict) {
                var rslt = !1;
                return $.each(getTests(position + (position == jitPos ? jitOffset : 0)), function(ndx, tst) {
                    var test = tst.match;
                    if (getBuffer(!0), !1 !== (rslt = null != test.fn ? test.fn.test(c, getMaskSet(), position, strict, opts, isSelection(pos)) : (c === test.def || c === opts.skipOptionalPartCharacter) && "" !== test.def && {
                        c: getPlaceholder(position, test, !0) || test.def,
                        pos: position
                    })) {
                        var elem = rslt.c !== undefined ? rslt.c : c, validatedPos = position;
                        return elem = elem === opts.skipOptionalPartCharacter && null === test.fn ? getPlaceholder(position, test, !0) || test.def : elem, 
                        rslt.remove !== undefined && ($.isArray(rslt.remove) || (rslt.remove = [ rslt.remove ]), 
                        $.each(rslt.remove.sort(function(a, b) {
                            return b - a;
                        }), function(ndx, lmnt) {
                            revalidateMask({
                                begin: lmnt,
                                end: lmnt + 1
                            });
                        })), rslt.insert !== undefined && ($.isArray(rslt.insert) || (rslt.insert = [ rslt.insert ]), 
                        $.each(rslt.insert.sort(function(a, b) {
                            return a - b;
                        }), function(ndx, lmnt) {
                            isValid(lmnt.pos, lmnt.c, !0, fromSetValid);
                        })), !0 !== rslt && rslt.pos !== undefined && rslt.pos !== position && (validatedPos = rslt.pos), 
                        !0 !== rslt && rslt.pos === undefined && rslt.c === undefined ? !1 : (revalidateMask(pos, $.extend({}, tst, {
                            input: function(elem, test, pos) {
                                switch (opts.casing || test.casing) {
                                  case "upper":
                                    elem = elem.toUpperCase();
                                    break;
                                  case "lower":
                                    elem = elem.toLowerCase();
                                    break;
                                  case "title":
                                    var posBefore = getMaskSet().validPositions[pos - 1];
                                    elem = 0 === pos || posBefore && posBefore.input === String.fromCharCode(Inputmask.keyCode.SPACE) ? elem.toUpperCase() : elem.toLowerCase();
                                    break;
                                  default:
                                    if ($.isFunction(opts.casing)) {
                                        var args = Array.prototype.slice.call(arguments);
                                        args.push(getMaskSet().validPositions), elem = opts.casing.apply(this, args);
                                    }
                                }
                                return elem;
                            }(elem, test, validatedPos)
                        }), fromSetValid, validatedPos) || (rslt = !1), !1);
                    }
                }), rslt;
            }
            pos.begin !== undefined && (maskPos = isRTL ? pos.end : pos.begin);
            var result = !0, positionsClone = $.extend(!0, {}, getMaskSet().validPositions);
            if ($.isFunction(opts.preValidation) && !strict && !0 !== fromSetValid && !0 !== validateOnly && (result = opts.preValidation(getBuffer(), maskPos, c, isSelection(pos), opts, getMaskSet())), 
            !0 === result) {
                if (trackbackPositions(undefined, maskPos, !0), (maxLength === undefined || maskPos < maxLength) && (result = _isValid(maskPos, c, strict), 
                (!strict || !0 === fromSetValid) && !1 === result && !0 !== validateOnly)) {
                    var currentPosValid = getMaskSet().validPositions[maskPos];
                    if (!currentPosValid || null !== currentPosValid.match.fn || currentPosValid.match.def !== c && c !== opts.skipOptionalPartCharacter) {
                        if ((opts.insertMode || getMaskSet().validPositions[seekNext(maskPos)] === undefined) && !isMask(maskPos, !0)) for (var nPos = maskPos + 1, snPos = seekNext(maskPos); nPos <= snPos; nPos++) if (!1 !== (result = _isValid(nPos, c, strict))) {
                            result = trackbackPositions(maskPos, result.pos !== undefined ? result.pos : nPos) || result, 
                            maskPos = nPos;
                            break;
                        }
                    } else result = {
                        caret: seekNext(maskPos)
                    };
                }
                !1 !== result || !1 === opts.keepStatic || null != opts.regex && !isComplete(getBuffer()) || strict || !0 === fromAlternate || (result = alternate(maskPos, c, strict, fromSetValid)), 
                !0 === result && (result = {
                    pos: maskPos
                });
            }
            if ($.isFunction(opts.postValidation) && !1 !== result && !strict && !0 !== fromSetValid && !0 !== validateOnly) {
                var postResult = opts.postValidation(getBuffer(!0), result, opts);
                if (postResult !== undefined) {
                    if (postResult.refreshFromBuffer && postResult.buffer) {
                        var refresh = postResult.refreshFromBuffer;
                        refreshFromBuffer(!0 === refresh ? refresh : refresh.start, refresh.end, postResult.buffer);
                    }
                    result = !0 === postResult ? result : postResult;
                }
            }
            return result && result.pos === undefined && (result.pos = maskPos), !1 !== result && !0 !== validateOnly || (resetMaskSet(!0), 
            getMaskSet().validPositions = $.extend(!0, {}, positionsClone)), result;
        }
        function trackbackPositions(originalPos, newPos, fillOnly) {
            var result;
            if (originalPos === undefined) for (originalPos = newPos - 1; originalPos > 0 && !getMaskSet().validPositions[originalPos]; originalPos--) ;
            for (var ps = originalPos; ps < newPos; ps++) {
                if (getMaskSet().validPositions[ps] === undefined && !isMask(ps, !0)) if (0 == ps ? getTest(ps) : getMaskSet().validPositions[ps - 1]) {
                    var tests = getTests(ps).slice();
                    "" === tests[tests.length - 1].match.def && tests.pop();
                    var bestMatch = determineTestTemplate(ps, tests);
                    if ((bestMatch = $.extend({}, bestMatch, {
                        input: getPlaceholder(ps, bestMatch.match, !0) || bestMatch.match.def
                    })).generatedInput = !0, revalidateMask(ps, bestMatch, !0), !0 !== fillOnly) {
                        var cvpInput = getMaskSet().validPositions[newPos].input;
                        getMaskSet().validPositions[newPos] = undefined, result = isValid(newPos, cvpInput, !0, !0);
                    }
                }
            }
            return result;
        }
        function revalidateMask(pos, validTest, fromSetValid, validatedPos) {
            function IsEnclosedStatic(pos, valids, selection) {
                var posMatch = valids[pos];
                if (posMatch !== undefined && (null === posMatch.match.fn && !0 !== posMatch.match.optionality || posMatch.input === opts.radixPoint)) {
                    var prevMatch = selection.begin <= pos - 1 ? valids[pos - 1] && null === valids[pos - 1].match.fn && valids[pos - 1] : valids[pos - 1], nextMatch = selection.end > pos + 1 ? valids[pos + 1] && null === valids[pos + 1].match.fn && valids[pos + 1] : valids[pos + 1];
                    return prevMatch && nextMatch;
                }
                return !1;
            }
            var begin = pos.begin !== undefined ? pos.begin : pos, end = pos.end !== undefined ? pos.end : pos;
            if (pos.begin > pos.end && (begin = pos.end, end = pos.begin), validatedPos = validatedPos !== undefined ? validatedPos : begin, 
            begin !== end || opts.insertMode && getMaskSet().validPositions[validatedPos] !== undefined && fromSetValid === undefined) {
                var positionsClone = $.extend(!0, {}, getMaskSet().validPositions), lvp = getLastValidPosition(undefined, !0);
                for (getMaskSet().p = begin, i = lvp; i >= begin; i--) getMaskSet().validPositions[i] && "+" === getMaskSet().validPositions[i].match.nativeDef && (opts.isNegative = !1), 
                delete getMaskSet().validPositions[i];
                var valid = !0, j = validatedPos, needsValidation = (getMaskSet().validPositions, 
                !1), posMatch = j, i = j;
                for (validTest && (getMaskSet().validPositions[validatedPos] = $.extend(!0, {}, validTest), 
                posMatch++, j++, begin < end && i++); i <= lvp; i++) {
                    var t = positionsClone[i];
                    if (t !== undefined && (i >= end || i >= begin && !0 !== t.generatedInput && IsEnclosedStatic(i, positionsClone, {
                        begin: begin,
                        end: end
                    }))) {
                        for (;"" !== getTest(posMatch).match.def; ) {
                            if (!1 === needsValidation && positionsClone[posMatch] && positionsClone[posMatch].match.nativeDef === t.match.nativeDef) getMaskSet().validPositions[posMatch] = $.extend(!0, {}, positionsClone[posMatch]), 
                            getMaskSet().validPositions[posMatch].input = t.input, trackbackPositions(undefined, posMatch, !0), 
                            j = posMatch + 1, valid = !0; else if (positionCanMatchDefinition(posMatch, t.match.def)) {
                                var result = isValid(posMatch, t.input, !0, !0);
                                valid = !1 !== result, j = result.caret || result.insert ? getLastValidPosition() : posMatch + 1, 
                                needsValidation = !0;
                            } else if (!(valid = !0 === t.generatedInput || t.input === opts.radixPoint && !0 === opts.numericInput) && "" === getTest(posMatch).match.def) break;
                            if (valid) break;
                            posMatch++;
                        }
                        "" == getTest(posMatch).match.def && (valid = !1), posMatch = j;
                    }
                    if (!valid) break;
                }
                if (!valid) return getMaskSet().validPositions = $.extend(!0, {}, positionsClone), 
                resetMaskSet(!0), !1;
            } else validTest && (getMaskSet().validPositions[validatedPos] = $.extend(!0, {}, validTest));
            return resetMaskSet(!0), !0;
        }
        function isMask(pos, strict) {
            var test = getTestTemplate(pos).match;
            if ("" === test.def && (test = getTest(pos).match), null != test.fn) return test.fn;
            if (!0 !== strict && pos > -1) {
                var tests = getTests(pos);
                return tests.length > 1 + ("" === tests[tests.length - 1].match.def ? 1 : 0);
            }
            return !1;
        }
        function seekNext(pos, newBlock) {
            for (var position = pos + 1; "" !== getTest(position).match.def && (!0 === newBlock && (!0 !== getTest(position).match.newBlockMarker || !isMask(position)) || !0 !== newBlock && !isMask(position)); ) position++;
            return position;
        }
        function seekPrevious(pos, newBlock) {
            var tests, position = pos;
            if (position <= 0) return 0;
            for (;--position > 0 && (!0 === newBlock && !0 !== getTest(position).match.newBlockMarker || !0 !== newBlock && !isMask(position) && ((tests = getTests(position)).length < 2 || 2 === tests.length && "" === tests[1].match.def)); ) ;
            return position;
        }
        function writeBuffer(input, buffer, caretPos, event, triggerEvents) {
            if (event && $.isFunction(opts.onBeforeWrite)) {
                var result = opts.onBeforeWrite.call(inputmask, event, buffer, caretPos, opts);
                if (result) {
                    if (result.refreshFromBuffer) {
                        var refresh = result.refreshFromBuffer;
                        refreshFromBuffer(!0 === refresh ? refresh : refresh.start, refresh.end, result.buffer || buffer), 
                        buffer = getBuffer(!0);
                    }
                    caretPos !== undefined && (caretPos = result.caret !== undefined ? result.caret : caretPos);
                }
            }
            if (input !== undefined && (input.inputmask._valueSet(buffer.join("")), caretPos === undefined || event !== undefined && "blur" === event.type ? renderColorMask(input, caretPos, 0 === buffer.length) : caret(input, caretPos), 
            !0 === triggerEvents)) {
                var $input = $(input), nptVal = input.inputmask._valueGet();
                skipInputEvent = !0, $input.trigger("input"), setTimeout(function() {
                    nptVal === getBufferTemplate().join("") ? $input.trigger("cleared") : !0 === isComplete(buffer) && $input.trigger("complete");
                }, 0);
            }
        }
        function getPlaceholder(pos, test, returnPL) {
            if ((test = test || getTest(pos).match).placeholder !== undefined || !0 === returnPL) return $.isFunction(test.placeholder) ? test.placeholder(opts) : test.placeholder;
            if (null === test.fn) {
                if (pos > -1 && getMaskSet().validPositions[pos] === undefined) {
                    var prevTest, tests = getTests(pos), staticAlternations = [];
                    if (tests.length > 1 + ("" === tests[tests.length - 1].match.def ? 1 : 0)) for (var i = 0; i < tests.length; i++) if (!0 !== tests[i].match.optionality && !0 !== tests[i].match.optionalQuantifier && (null === tests[i].match.fn || prevTest === undefined || !1 !== tests[i].match.fn.test(prevTest.match.def, getMaskSet(), pos, !0, opts)) && (staticAlternations.push(tests[i]), 
                    null === tests[i].match.fn && (prevTest = tests[i]), staticAlternations.length > 1 && /[0-9a-bA-Z]/.test(staticAlternations[0].match.def))) return opts.placeholder.charAt(pos % opts.placeholder.length);
                }
                return test.def;
            }
            return opts.placeholder.charAt(pos % opts.placeholder.length);
        }
        var valueBuffer, EventRuler = {
            on: function(input, eventName, eventHandler) {
                var ev = function(e) {
                    var that = this;
                    if (that.inputmask === undefined && "FORM" !== this.nodeName) {
                        var imOpts = $.data(that, "_inputmask_opts");
                        imOpts ? new Inputmask(imOpts).mask(that) : EventRuler.off(that);
                    } else {
                        if ("setvalue" === e.type || "FORM" === this.nodeName || !(that.disabled || that.readOnly && !("keydown" === e.type && e.ctrlKey && 67 === e.keyCode || !1 === opts.tabThrough && e.keyCode === Inputmask.keyCode.TAB))) {
                            switch (e.type) {
                              case "input":
                                if (!0 === skipInputEvent) return skipInputEvent = !1, e.preventDefault();
                                if (mobile) {
                                    var args = arguments;
                                    return setTimeout(function() {
                                        eventHandler.apply(that, args), caret(that, that.inputmask.caretPos, undefined, !0);
                                    }, 0), !1;
                                }
                                break;
                              case "keydown":
                                skipKeyPressEvent = !1, skipInputEvent = !1;
                                break;
                              case "keypress":
                                if (!0 === skipKeyPressEvent) return e.preventDefault();
                                skipKeyPressEvent = !0;
                                break;
                              case "click":
                                if (iemobile || iphone) {
                                    args = arguments;
                                    return setTimeout(function() {
                                        eventHandler.apply(that, args);
                                    }, 0), !1;
                                }
                            }
                            var returnVal = eventHandler.apply(that, arguments);
                            return !1 === returnVal && (e.preventDefault(), e.stopPropagation()), returnVal;
                        }
                        e.preventDefault();
                    }
                };
                input.inputmask.events[eventName] = input.inputmask.events[eventName] || [], input.inputmask.events[eventName].push(ev), 
                -1 !== $.inArray(eventName, [ "submit", "reset" ]) ? null !== input.form && $(input.form).on(eventName, ev) : $(input).on(eventName, ev);
            },
            off: function(input, event) {
                var events;
                input.inputmask && input.inputmask.events && (event ? (events = [])[event] = input.inputmask.events[event] : events = input.inputmask.events, 
                $.each(events, function(eventName, evArr) {
                    for (;evArr.length > 0; ) {
                        var ev = evArr.pop();
                        -1 !== $.inArray(eventName, [ "submit", "reset" ]) ? null !== input.form && $(input.form).off(eventName, ev) : $(input).off(eventName, ev);
                    }
                    delete input.inputmask.events[eventName];
                }));
            }
        }, EventHandlers = {
            keydownEvent: function(e) {
                var input = this, $input = $(input), k = e.keyCode, pos = caret(input);
                if (k === Inputmask.keyCode.BACKSPACE || k === Inputmask.keyCode.DELETE || iphone && k === Inputmask.keyCode.BACKSPACE_SAFARI || e.ctrlKey && k === Inputmask.keyCode.X && !isInputEventSupported("cut")) e.preventDefault(), 
                handleRemove(input, k, pos), writeBuffer(input, getBuffer(!0), getMaskSet().p, e, input.inputmask._valueGet() !== getBuffer().join("")); else if (k === Inputmask.keyCode.END || k === Inputmask.keyCode.PAGE_DOWN) {
                    e.preventDefault();
                    var caretPos = seekNext(getLastValidPosition());
                    opts.insertMode || caretPos !== getMaskSet().maskLength || e.shiftKey || caretPos--, 
                    caret(input, e.shiftKey ? pos.begin : caretPos, caretPos, !0);
                } else k === Inputmask.keyCode.HOME && !e.shiftKey || k === Inputmask.keyCode.PAGE_UP ? (e.preventDefault(), 
                caret(input, 0, e.shiftKey ? pos.begin : 0, !0)) : (opts.undoOnEscape && k === Inputmask.keyCode.ESCAPE || 90 === k && e.ctrlKey) && !0 !== e.altKey ? (checkVal(input, !0, !1, undoValue.split("")), 
                $input.trigger("click")) : k !== Inputmask.keyCode.INSERT || e.shiftKey || e.ctrlKey ? !0 === opts.tabThrough && k === Inputmask.keyCode.TAB ? (!0 === e.shiftKey ? (null === getTest(pos.begin).match.fn && (pos.begin = seekNext(pos.begin)), 
                pos.end = seekPrevious(pos.begin, !0), pos.begin = seekPrevious(pos.end, !0)) : (pos.begin = seekNext(pos.begin, !0), 
                pos.end = seekNext(pos.begin, !0), pos.end < getMaskSet().maskLength && pos.end--), 
                pos.begin < getMaskSet().maskLength && (e.preventDefault(), caret(input, pos.begin, pos.end))) : e.shiftKey || !1 === opts.insertMode && (k === Inputmask.keyCode.RIGHT ? setTimeout(function() {
                    var caretPos = caret(input);
                    caret(input, caretPos.begin);
                }, 0) : k === Inputmask.keyCode.LEFT && setTimeout(function() {
                    var caretPos = caret(input);
                    caret(input, isRTL ? caretPos.begin + 1 : caretPos.begin - 1);
                }, 0)) : (opts.insertMode = !opts.insertMode, caret(input, opts.insertMode || pos.begin !== getMaskSet().maskLength ? pos.begin : pos.begin - 1));
                opts.onKeyDown.call(this, e, getBuffer(), caret(input).begin, opts), ignorable = -1 !== $.inArray(k, opts.ignorables);
            },
            keypressEvent: function(e, checkval, writeOut, strict, ndx) {
                var input = this, $input = $(input), k = e.which || e.charCode || e.keyCode;
                if (!(!0 === checkval || e.ctrlKey && e.altKey) && (e.ctrlKey || e.metaKey || ignorable)) return k === Inputmask.keyCode.ENTER && undoValue !== getBuffer().join("") && (undoValue = getBuffer().join(""), 
                setTimeout(function() {
                    $input.trigger("change");
                }, 0)), !0;
                if (k) {
                    46 === k && !1 === e.shiftKey && "" !== opts.radixPoint && (k = opts.radixPoint.charCodeAt(0));
                    var forwardPosition, pos = checkval ? {
                        begin: ndx,
                        end: ndx
                    } : caret(input), c = String.fromCharCode(k), offset = 0;
                    if (opts._radixDance && opts.numericInput) {
                        var caretPos = getBuffer().indexOf(opts.radixPoint.charAt(0)) + 1;
                        pos.begin <= caretPos && (k === opts.radixPoint.charCodeAt(0) && (offset = 1), pos.begin -= 1, 
                        pos.end -= 1);
                    }
                    getMaskSet().writeOutBuffer = !0;
                    var valResult = isValid(pos, c, strict);
                    if (!1 !== valResult && (resetMaskSet(!0), forwardPosition = valResult.caret !== undefined ? valResult.caret : seekNext(valResult.pos.begin ? valResult.pos.begin : valResult.pos), 
                    getMaskSet().p = forwardPosition), forwardPosition = (opts.numericInput && valResult.caret === undefined ? seekPrevious(forwardPosition) : forwardPosition) + offset, 
                    !1 !== writeOut && (setTimeout(function() {
                        opts.onKeyValidation.call(input, k, valResult, opts);
                    }, 0), getMaskSet().writeOutBuffer && !1 !== valResult)) {
                        var buffer = getBuffer();
                        writeBuffer(input, buffer, forwardPosition, e, !0 !== checkval);
                    }
                    if (e.preventDefault(), checkval) return !1 !== valResult && (valResult.forwardPosition = forwardPosition), 
                    valResult;
                }
            },
            pasteEvent: function(e) {
                var tempValue, ev = e.originalEvent || e, inputValue = ($(this), this.inputmask._valueGet(!0)), caretPos = caret(this);
                isRTL && (tempValue = caretPos.end, caretPos.end = caretPos.begin, caretPos.begin = tempValue);
                var valueBeforeCaret = inputValue.substr(0, caretPos.begin), valueAfterCaret = inputValue.substr(caretPos.end, inputValue.length);
                if (valueBeforeCaret === (isRTL ? getBufferTemplate().reverse() : getBufferTemplate()).slice(0, caretPos.begin).join("") && (valueBeforeCaret = ""), 
                valueAfterCaret === (isRTL ? getBufferTemplate().reverse() : getBufferTemplate()).slice(caretPos.end).join("") && (valueAfterCaret = ""), 
                window.clipboardData && window.clipboardData.getData) inputValue = valueBeforeCaret + window.clipboardData.getData("Text") + valueAfterCaret; else {
                    if (!ev.clipboardData || !ev.clipboardData.getData) return !0;
                    inputValue = valueBeforeCaret + ev.clipboardData.getData("text/plain") + valueAfterCaret;
                }
                var pasteValue = inputValue;
                if ($.isFunction(opts.onBeforePaste)) {
                    if (!1 === (pasteValue = opts.onBeforePaste.call(inputmask, inputValue, opts))) return e.preventDefault();
                    pasteValue || (pasteValue = inputValue);
                }
                return checkVal(this, !1, !1, pasteValue.toString().split("")), writeBuffer(this, getBuffer(), seekNext(getLastValidPosition()), e, undoValue !== getBuffer().join("")), 
                e.preventDefault();
            },
            inputFallBackEvent: function(e) {
                var input = this, inputValue = input.inputmask._valueGet();
                if (getBuffer().join("") !== inputValue) {
                    var caretPos = caret(input);
                    if (inputValue = function(input, inputValue, caretPos) {
                        if (iemobile) {
                            var inputChar = inputValue.replace(getBuffer().join(""), "");
                            if (1 === inputChar.length) {
                                var iv = inputValue.split("");
                                iv.splice(caretPos.begin, 0, inputChar), inputValue = iv.join("");
                            }
                        }
                        return inputValue;
                    }(0, inputValue = function(input, inputValue, caretPos) {
                        return "." === inputValue.charAt(caretPos.begin - 1) && "" !== opts.radixPoint && ((inputValue = inputValue.split(""))[caretPos.begin - 1] = opts.radixPoint.charAt(0), 
                        inputValue = inputValue.join("")), inputValue;
                    }(0, inputValue, caretPos), caretPos), getBuffer().join("") !== inputValue) {
                        var buffer = getBuffer().join(""), offset = !opts.numericInput && inputValue.length > buffer.length ? -1 : 0, frontPart = inputValue.substr(0, caretPos.begin), backPart = inputValue.substr(caretPos.begin), frontBufferPart = buffer.substr(0, caretPos.begin + offset), backBufferPart = buffer.substr(caretPos.begin + offset), selection = caretPos, entries = "", isEntry = !1;
                        if (frontPart !== frontBufferPart) {
                            for (var fpl = (isEntry = frontPart.length >= frontBufferPart.length) ? frontPart.length : frontBufferPart.length, i = 0; frontPart.charAt(i) === frontBufferPart.charAt(i) && i < fpl; i++) ;
                            isEntry && (0 === offset && (selection.begin = i), entries += frontPart.slice(i, selection.end));
                        }
                        if (backPart !== backBufferPart && (backPart.length > backBufferPart.length ? entries += backPart.slice(0, 1) : backPart.length < backBufferPart.length && (selection.end += backBufferPart.length - backPart.length, 
                        isEntry || "" === opts.radixPoint || "" !== backPart || frontPart.charAt(selection.begin + offset - 1) !== opts.radixPoint || (selection.begin--, 
                        entries = opts.radixPoint))), writeBuffer(input, getBuffer(), {
                            begin: selection.begin + offset,
                            end: selection.end + offset
                        }), entries.length > 0) $.each(entries.split(""), function(ndx, entry) {
                            var keypress = new $.Event("keypress");
                            keypress.which = entry.charCodeAt(0), ignorable = !1, EventHandlers.keypressEvent.call(input, keypress);
                        }); else {
                            selection.begin === selection.end - 1 && (selection.begin = seekPrevious(selection.begin + 1), 
                            selection.begin === selection.end - 1 ? caret(input, selection.begin) : caret(input, selection.begin, selection.end));
                            var keydown = new $.Event("keydown");
                            keydown.keyCode = opts.numericInput ? Inputmask.keyCode.BACKSPACE : Inputmask.keyCode.DELETE, 
                            EventHandlers.keydownEvent.call(input, keydown), !1 === opts.insertMode && caret(input, caret(input).begin - 1);
                        }
                        e.preventDefault();
                    }
                }
            },
            beforeInputEvent: function(e) {
                if (e.cancelable) {
                    var input = this;
                    switch (e.inputType) {
                      case "insertText":
                        return $.each(e.data.split(""), function(ndx, entry) {
                            var keypress = new $.Event("keypress");
                            keypress.which = entry.charCodeAt(0), ignorable = !1, EventHandlers.keypressEvent.call(input, keypress);
                        }), e.preventDefault();
                      case "deleteContentBackward":
                        return (keydown = new $.Event("keydown")).keyCode = Inputmask.keyCode.BACKSPACE, 
                        EventHandlers.keydownEvent.call(input, keydown), e.preventDefault();
                      case "deleteContentForward":
                        var keydown;
                        return (keydown = new $.Event("keydown")).keyCode = Inputmask.keyCode.DELETE, EventHandlers.keydownEvent.call(input, keydown), 
                        e.preventDefault();
                    }
                }
            },
            setValueEvent: function(e) {
                this.inputmask.refreshValue = !1;
                var value = (value = e && e.detail ? e.detail[0] : arguments[1]) || this.inputmask._valueGet(!0);
                $.isFunction(opts.onBeforeMask) && (value = opts.onBeforeMask.call(inputmask, value, opts) || value), 
                checkVal(this, !0, !1, value = value.split("")), undoValue = getBuffer().join(""), 
                (opts.clearMaskOnLostFocus || opts.clearIncomplete) && this.inputmask._valueGet() === getBufferTemplate().join("") && this.inputmask._valueSet("");
            },
            focusEvent: function(e) {
                var nptValue = this.inputmask._valueGet();
                opts.showMaskOnFocus && (!opts.showMaskOnHover || opts.showMaskOnHover && "" === nptValue) && (this.inputmask._valueGet() !== getBuffer().join("") ? writeBuffer(this, getBuffer(), seekNext(getLastValidPosition())) : !1 === mouseEnter && caret(this, seekNext(getLastValidPosition()))), 
                !0 === opts.positionCaretOnTab && !1 === mouseEnter && EventHandlers.clickEvent.apply(this, [ e, !0 ]), 
                undoValue = getBuffer().join("");
            },
            mouseleaveEvent: function(e) {
                if (mouseEnter = !1, opts.clearMaskOnLostFocus && document.activeElement !== this) {
                    var buffer = getBuffer().slice(), nptValue = this.inputmask._valueGet();
                    nptValue !== this.getAttribute("placeholder") && "" !== nptValue && (-1 === getLastValidPosition() && nptValue === getBufferTemplate().join("") ? buffer = [] : clearOptionalTail(buffer), 
                    writeBuffer(this, buffer));
                }
            },
            clickEvent: function(e, tabbed) {
                var input = this;
                setTimeout(function() {
                    if (document.activeElement === input) {
                        var selectedCaret = caret(input);
                        if (tabbed && (isRTL ? selectedCaret.end = selectedCaret.begin : selectedCaret.begin = selectedCaret.end), 
                        selectedCaret.begin === selectedCaret.end) switch (opts.positionCaretOnClick) {
                          case "none":
                            break;
                          case "select":
                            caret(input, 0, getBuffer().length);
                            break;
                          case "ignore":
                            caret(input, seekNext(getLastValidPosition()));
                            break;
                          case "radixFocus":
                            if (function(clickPos) {
                                if ("" !== opts.radixPoint) {
                                    var vps = getMaskSet().validPositions;
                                    if (vps[clickPos] === undefined || vps[clickPos].input === getPlaceholder(clickPos)) {
                                        if (clickPos < seekNext(-1)) return !0;
                                        var radixPos = $.inArray(opts.radixPoint, getBuffer());
                                        if (-1 !== radixPos) {
                                            for (var vp in vps) if (radixPos < vp && vps[vp].input !== getPlaceholder(vp)) return !1;
                                            return !0;
                                        }
                                    }
                                }
                                return !1;
                            }(selectedCaret.begin)) {
                                var radixPos = getBuffer().join("").indexOf(opts.radixPoint);
                                caret(input, opts.numericInput ? seekNext(radixPos) : radixPos);
                                break;
                            }
                          default:
                            var clickPosition = selectedCaret.begin, lvclickPosition = getLastValidPosition(clickPosition, !0), lastPosition = seekNext(lvclickPosition);
                            if (clickPosition < lastPosition) caret(input, isMask(clickPosition, !0) || isMask(clickPosition - 1, !0) ? clickPosition : seekNext(clickPosition)); else {
                                var lvp = getMaskSet().validPositions[lvclickPosition], tt = getTestTemplate(lastPosition, lvp ? lvp.match.locator : undefined, lvp), placeholder = getPlaceholder(lastPosition, tt.match);
                                if ("" !== placeholder && getBuffer()[lastPosition] !== placeholder && !0 !== tt.match.optionalQuantifier && !0 !== tt.match.newBlockMarker || !isMask(lastPosition, opts.keepStatic) && tt.match.def === placeholder) {
                                    var newPos = seekNext(lastPosition);
                                    (clickPosition >= newPos || clickPosition === lastPosition) && (lastPosition = newPos);
                                }
                                caret(input, lastPosition);
                            }
                        }
                    }
                }, 0);
            },
            dblclickEvent: function(e) {
                var input = this;
                setTimeout(function() {
                    caret(input, 0, seekNext(getLastValidPosition()));
                }, 0);
            },
            cutEvent: function(e) {
                $(this);
                var pos = caret(this), ev = e.originalEvent || e, clipboardData = window.clipboardData || ev.clipboardData, clipData = isRTL ? getBuffer().slice(pos.end, pos.begin) : getBuffer().slice(pos.begin, pos.end);
                clipboardData.setData("text", isRTL ? clipData.reverse().join("") : clipData.join("")), 
                document.execCommand && document.execCommand("copy"), handleRemove(this, Inputmask.keyCode.DELETE, pos), 
                writeBuffer(this, getBuffer(), getMaskSet().p, e, undoValue !== getBuffer().join(""));
            },
            blurEvent: function(e) {
                var $input = $(this);
                if (this.inputmask) {
                    var nptValue = this.inputmask._valueGet(), buffer = getBuffer().slice();
                    "" === nptValue && colorMask === undefined || (opts.clearMaskOnLostFocus && (-1 === getLastValidPosition() && nptValue === getBufferTemplate().join("") ? buffer = [] : clearOptionalTail(buffer)), 
                    !1 === isComplete(buffer) && (setTimeout(function() {
                        $input.trigger("incomplete");
                    }, 0), opts.clearIncomplete && (resetMaskSet(), buffer = opts.clearMaskOnLostFocus ? [] : getBufferTemplate().slice())), 
                    writeBuffer(this, buffer, undefined, e)), undoValue !== getBuffer().join("") && (undoValue = buffer.join(""), 
                    $input.trigger("change"));
                }
            },
            mouseenterEvent: function(e) {
                mouseEnter = !0, document.activeElement !== this && opts.showMaskOnHover && this.inputmask._valueGet() !== getBuffer().join("") && writeBuffer(this, getBuffer());
            },
            submitEvent: function(e) {
                undoValue !== getBuffer().join("") && $el.trigger("change"), opts.clearMaskOnLostFocus && -1 === getLastValidPosition() && el.inputmask._valueGet && el.inputmask._valueGet() === getBufferTemplate().join("") && el.inputmask._valueSet(""), 
                opts.clearIncomplete && !1 === isComplete(getBuffer()) && el.inputmask._valueSet(""), 
                opts.removeMaskOnSubmit && (el.inputmask._valueSet(el.inputmask.unmaskedvalue(), !0), 
                setTimeout(function() {
                    writeBuffer(el, getBuffer());
                }, 0));
            },
            resetEvent: function(e) {
                el.inputmask.refreshValue = !0, setTimeout(function() {
                    $el.trigger("setvalue");
                }, 0);
            }
        };
        function checkVal(input, writeOut, strict, nptvl, initiatingEvent) {
            var inputmask = this || input.inputmask, inputValue = nptvl.slice(), charCodes = "", initialNdx = -1, result = undefined;
            if (resetMaskSet(), strict || !0 === opts.autoUnmask) initialNdx = seekNext(initialNdx); else {
                var staticInput = getBufferTemplate().slice(0, seekNext(-1)).join(""), matches = inputValue.join("").match(new RegExp("^" + Inputmask.escapeRegex(staticInput), "g"));
                matches && matches.length > 0 && (inputValue.splice(0, matches.length * staticInput.length), 
                initialNdx = seekNext(initialNdx));
            }
            -1 === initialNdx ? (getMaskSet().p = seekNext(initialNdx), initialNdx = 0) : getMaskSet().p = initialNdx, 
            inputmask.caretPos = {
                begin: initialNdx
            }, $.each(inputValue, function(ndx, charCode) {
                if (charCode !== undefined) if (getMaskSet().validPositions[ndx] === undefined && inputValue[ndx] === getPlaceholder(ndx) && isMask(ndx, !0) && !1 === isValid(ndx, inputValue[ndx], !0, undefined, undefined, !0)) getMaskSet().p++; else {
                    var keypress = new $.Event("_checkval");
                    keypress.which = charCode.charCodeAt(0), charCodes += charCode;
                    var lvp = getLastValidPosition(undefined, !0);
                    !function(ndx, charCodes) {
                        return -1 !== getMaskTemplate(!0, 0, !1).slice(ndx, seekNext(ndx)).join("").replace(/'/g, "").indexOf(charCodes) && !isMask(ndx) && (getTest(ndx).match.nativeDef === charCodes.charAt(0) || null === getTest(ndx).match.fn && getTest(ndx).match.nativeDef === "'" + charCodes.charAt(0) || " " === getTest(ndx).match.nativeDef && (getTest(ndx + 1).match.nativeDef === charCodes.charAt(0) || null === getTest(ndx + 1).match.fn && getTest(ndx + 1).match.nativeDef === "'" + charCodes.charAt(0)));
                    }(initialNdx, charCodes) ? (result = EventHandlers.keypressEvent.call(input, keypress, !0, !1, strict, inputmask.caretPos.begin)) && (initialNdx = inputmask.caretPos.begin + 1, 
                    charCodes = "") : result = EventHandlers.keypressEvent.call(input, keypress, !0, !1, strict, lvp + 1), 
                    result && (writeBuffer(undefined, getBuffer(), result.forwardPosition, keypress, !1), 
                    inputmask.caretPos = {
                        begin: result.forwardPosition,
                        end: result.forwardPosition
                    });
                }
            }), writeOut && writeBuffer(input, getBuffer(), result ? result.forwardPosition : undefined, initiatingEvent || new $.Event("checkval"), initiatingEvent && "input" === initiatingEvent.type);
        }
        function unmaskedvalue(input) {
            if (input) {
                if (input.inputmask === undefined) return input.value;
                input.inputmask && input.inputmask.refreshValue && EventHandlers.setValueEvent.call(input);
            }
            var umValue = [], vps = getMaskSet().validPositions;
            for (var pndx in vps) vps[pndx].match && null != vps[pndx].match.fn && umValue.push(vps[pndx].input);
            var unmaskedValue = 0 === umValue.length ? "" : (isRTL ? umValue.reverse() : umValue).join("");
            if ($.isFunction(opts.onUnMask)) {
                var bufferValue = (isRTL ? getBuffer().slice().reverse() : getBuffer()).join("");
                unmaskedValue = opts.onUnMask.call(inputmask, bufferValue, unmaskedValue, opts);
            }
            return unmaskedValue;
        }
        function translatePosition(pos) {
            return !isRTL || "number" != typeof pos || opts.greedy && "" === opts.placeholder || !el || (pos = el.inputmask._valueGet().length - pos), 
            pos;
        }
        function caret(input, begin, end, notranslate) {
            var range;
            if (begin === undefined) return input.setSelectionRange ? (begin = input.selectionStart, 
            end = input.selectionEnd) : window.getSelection ? (range = window.getSelection().getRangeAt(0)).commonAncestorContainer.parentNode !== input && range.commonAncestorContainer !== input || (begin = range.startOffset, 
            end = range.endOffset) : document.selection && document.selection.createRange && (end = (begin = 0 - (range = document.selection.createRange()).duplicate().moveStart("character", -input.inputmask._valueGet().length)) + range.text.length), 
            {
                begin: notranslate ? begin : translatePosition(begin),
                end: notranslate ? end : translatePosition(end)
            };
            if ($.isArray(begin) && (end = isRTL ? begin[0] : begin[1], begin = isRTL ? begin[1] : begin[0]), 
            begin.begin !== undefined && (end = isRTL ? begin.begin : begin.end, begin = isRTL ? begin.end : begin.begin), 
            "number" == typeof begin) {
                begin = notranslate ? begin : translatePosition(begin), end = "number" == typeof (end = notranslate ? end : translatePosition(end)) ? end : begin;
                var scrollCalc = parseInt(((input.ownerDocument.defaultView || window).getComputedStyle ? (input.ownerDocument.defaultView || window).getComputedStyle(input, null) : input.currentStyle).fontSize) * end;
                if (input.scrollLeft = scrollCalc > input.scrollWidth ? scrollCalc : 0, iphone || !1 !== opts.insertMode || begin !== end || end++, 
                input.inputmask.caretPos = {
                    begin: begin,
                    end: end
                }, input.setSelectionRange) input.selectionStart = begin, input.selectionEnd = end; else if (window.getSelection) {
                    if (range = document.createRange(), input.firstChild === undefined || null === input.firstChild) {
                        var textNode = document.createTextNode("");
                        input.appendChild(textNode);
                    }
                    range.setStart(input.firstChild, begin < input.inputmask._valueGet().length ? begin : input.inputmask._valueGet().length), 
                    range.setEnd(input.firstChild, end < input.inputmask._valueGet().length ? end : input.inputmask._valueGet().length), 
                    range.collapse(!0);
                    var sel = window.getSelection();
                    sel.removeAllRanges(), sel.addRange(range);
                } else input.createTextRange && ((range = input.createTextRange()).collapse(!0), 
                range.moveEnd("character", end), range.moveStart("character", begin), range.select());
                renderColorMask(input, {
                    begin: begin,
                    end: end
                });
            }
        }
        function determineLastRequiredPosition(returnDefinition) {
            var pos, testPos, buffer = getMaskTemplate(!0, getLastValidPosition(), !0, !0), bl = buffer.length, lvp = getLastValidPosition(), positions = {}, lvTest = getMaskSet().validPositions[lvp], ndxIntlzr = lvTest !== undefined ? lvTest.locator.slice() : undefined;
            for (pos = lvp + 1; pos < buffer.length; pos++) ndxIntlzr = (testPos = getTestTemplate(pos, ndxIntlzr, pos - 1)).locator.slice(), 
            positions[pos] = $.extend(!0, {}, testPos);
            var lvTestAlt = lvTest && lvTest.alternation !== undefined ? lvTest.locator[lvTest.alternation] : undefined;
            for (pos = bl - 1; pos > lvp && (((testPos = positions[pos]).match.optionality || testPos.match.optionalQuantifier && testPos.match.newBlockMarker || lvTestAlt && (lvTestAlt !== positions[pos].locator[lvTest.alternation] && null != testPos.match.fn || null === testPos.match.fn && testPos.locator[lvTest.alternation] && checkAlternationMatch(testPos.locator[lvTest.alternation].toString().split(","), lvTestAlt.toString().split(",")) && "" !== getTests(pos)[0].def)) && buffer[pos] === getPlaceholder(pos, testPos.match)); pos--) bl--;
            return returnDefinition ? {
                l: bl,
                def: positions[bl] ? positions[bl].match : undefined
            } : bl;
        }
        function clearOptionalTail(buffer) {
            buffer.length = 0;
            for (var lmnt, template = getMaskTemplate(!0, 0, !0, undefined, !0); (lmnt = template.shift()) !== undefined; ) buffer.push(lmnt);
            return buffer;
        }
        function isComplete(buffer) {
            if ($.isFunction(opts.isComplete)) return opts.isComplete(buffer, opts);
            if ("*" === opts.repeat) return undefined;
            var complete = !1, lrp = determineLastRequiredPosition(!0), aml = seekPrevious(lrp.l);
            if (lrp.def === undefined || lrp.def.newBlockMarker || lrp.def.optionality || lrp.def.optionalQuantifier) {
                complete = !0;
                for (var i = 0; i <= aml; i++) {
                    var test = getTestTemplate(i).match;
                    if (null !== test.fn && getMaskSet().validPositions[i] === undefined && !0 !== test.optionality && !0 !== test.optionalQuantifier || null === test.fn && buffer[i] !== getPlaceholder(i, test)) {
                        complete = !1;
                        break;
                    }
                }
            }
            return complete;
        }
        function handleRemove(input, k, pos, strict, fromIsValid) {
            if ((opts.numericInput || isRTL) && (k === Inputmask.keyCode.BACKSPACE ? k = Inputmask.keyCode.DELETE : k === Inputmask.keyCode.DELETE && (k = Inputmask.keyCode.BACKSPACE), 
            isRTL)) {
                var pend = pos.end;
                pos.end = pos.begin, pos.begin = pend;
            }
            if (k === Inputmask.keyCode.BACKSPACE && (pos.end - pos.begin < 1 || !1 === opts.insertMode) ? (pos.begin = seekPrevious(pos.begin), 
            getMaskSet().validPositions[pos.begin] !== undefined && getMaskSet().validPositions[pos.begin].input === opts.groupSeparator && pos.begin--, 
            !1 === opts.insertMode && pos.end !== getMaskSet().maskLength && pos.end--) : k === Inputmask.keyCode.DELETE && pos.begin === pos.end && (pos.end = isMask(pos.end, !0) && getMaskSet().validPositions[pos.end] && getMaskSet().validPositions[pos.end].input !== opts.radixPoint ? pos.end + 1 : seekNext(pos.end) + 1, 
            getMaskSet().validPositions[pos.begin] !== undefined && getMaskSet().validPositions[pos.begin].input === opts.groupSeparator && pos.end++), 
            revalidateMask(pos), !0 !== strict && !1 !== opts.keepStatic || null !== opts.regex) {
                var result = alternate(!0);
                if (result) {
                    var newPos = result.caret !== undefined ? result.caret : result.pos ? seekNext(result.pos.begin ? result.pos.begin : result.pos) : getLastValidPosition(-1, !0);
                    (k !== Inputmask.keyCode.DELETE || pos.begin > newPos) && pos.begin;
                }
            }
            var lvp = getLastValidPosition(pos.begin, !0);
            if (lvp < pos.begin || -1 === pos.begin) getMaskSet().p = seekNext(lvp); else if (!0 !== strict && (getMaskSet().p = pos.begin, 
            !0 !== fromIsValid)) for (;getMaskSet().p < lvp && getMaskSet().validPositions[getMaskSet().p] === undefined; ) getMaskSet().p++;
        }
        function initializeColorMask(input) {
            var computedStyle = (input.ownerDocument.defaultView || window).getComputedStyle(input, null);
            var template = document.createElement("div");
            template.style.width = computedStyle.width, template.style.textAlign = computedStyle.textAlign, 
            colorMask = document.createElement("div"), input.inputmask.colorMask = colorMask, 
            colorMask.className = "im-colormask", input.parentNode.insertBefore(colorMask, input), 
            input.parentNode.removeChild(input), colorMask.appendChild(input), colorMask.appendChild(template), 
            input.style.left = template.offsetLeft + "px", $(colorMask).on("mouseleave", function(e) {
                return EventHandlers.mouseleaveEvent.call(input, [ e ]);
            }), $(colorMask).on("mouseenter", function(e) {
                return EventHandlers.mouseenterEvent.call(input, [ e ]);
            }), $(colorMask).on("click", function(e) {
                return caret(input, function(clientx) {
                    var caretPos, e = document.createElement("span");
                    for (var style in computedStyle) isNaN(style) && -1 !== style.indexOf("font") && (e.style[style] = computedStyle[style]);
                    e.style.textTransform = computedStyle.textTransform, e.style.letterSpacing = computedStyle.letterSpacing, 
                    e.style.position = "absolute", e.style.height = "auto", e.style.width = "auto", 
                    e.style.visibility = "hidden", e.style.whiteSpace = "nowrap", document.body.appendChild(e);
                    var itl, inputText = input.inputmask._valueGet(), previousWidth = 0;
                    for (caretPos = 0, itl = inputText.length; caretPos <= itl; caretPos++) {
                        if (e.innerHTML += inputText.charAt(caretPos) || "_", e.offsetWidth >= clientx) {
                            var offset1 = clientx - previousWidth, offset2 = e.offsetWidth - clientx;
                            e.innerHTML = inputText.charAt(caretPos), caretPos = (offset1 -= e.offsetWidth / 3) < offset2 ? caretPos - 1 : caretPos;
                            break;
                        }
                        previousWidth = e.offsetWidth;
                    }
                    return document.body.removeChild(e), caretPos;
                }(e.clientX)), EventHandlers.clickEvent.call(input, [ e ]);
            }), $(input).on("keydown", function(e) {
                e.shiftKey || !1 === opts.insertMode || setTimeout(function() {
                    renderColorMask(input);
                }, 0);
            });
        }
        function renderColorMask(input, caretPos, clear) {
            var test, testPos, ndxIntlzr, maskTemplate = [], isStatic = !1, pos = 0;
            function setEntry(entry) {
                if (entry === undefined && (entry = ""), isStatic || null !== test.fn && testPos.input !== undefined) if (isStatic && (null !== test.fn && testPos.input !== undefined || "" === test.def)) {
                    isStatic = !1;
                    var mtl = maskTemplate.length;
                    maskTemplate[mtl - 1] = maskTemplate[mtl - 1] + "</span>", maskTemplate.push(entry);
                } else maskTemplate.push(entry); else isStatic = !0, maskTemplate.push("<span class='im-static'>" + entry);
            }
            if (colorMask !== undefined) {
                var buffer = getBuffer();
                if (caretPos === undefined ? caretPos = caret(input) : caretPos.begin === undefined && (caretPos = {
                    begin: caretPos,
                    end: caretPos
                }), !0 !== clear) {
                    var lvp = getLastValidPosition();
                    do {
                        getMaskSet().validPositions[pos] ? (testPos = getMaskSet().validPositions[pos], 
                        test = testPos.match, ndxIntlzr = testPos.locator.slice(), setEntry(buffer[pos])) : (testPos = getTestTemplate(pos, ndxIntlzr, pos - 1), 
                        test = testPos.match, ndxIntlzr = testPos.locator.slice(), !1 === opts.jitMasking || pos < lvp || "number" == typeof opts.jitMasking && isFinite(opts.jitMasking) && opts.jitMasking > pos ? setEntry(getPlaceholder(pos, test)) : isStatic = !1), 
                        pos++;
                    } while ((maxLength === undefined || pos < maxLength) && (null !== test.fn || "" !== test.def) || lvp > pos || isStatic);
                    isStatic && setEntry(), document.activeElement === input && (maskTemplate.splice(caretPos.begin, 0, caretPos.begin === caretPos.end || caretPos.end > getMaskSet().maskLength ? '<mark class="im-caret" style="border-right-width: 1px;border-right-style: solid;">' : '<mark class="im-caret-select">'), 
                    maskTemplate.splice(caretPos.end + 1, 0, "</mark>"));
                }
                var template = colorMask.getElementsByTagName("div")[0];
                template.innerHTML = maskTemplate.join(""), input.inputmask.positionColorMask(input, template);
            }
        }
        if (Inputmask.prototype.positionColorMask = function(input, template) {
            input.style.left = template.offsetLeft + "px";
        }, actionObj !== undefined) switch (actionObj.action) {
          case "isComplete":
            return el = actionObj.el, isComplete(getBuffer());
          case "unmaskedvalue":
            return el !== undefined && actionObj.value === undefined || (valueBuffer = actionObj.value, 
            valueBuffer = ($.isFunction(opts.onBeforeMask) && opts.onBeforeMask.call(inputmask, valueBuffer, opts) || valueBuffer).split(""), 
            checkVal.call(this, undefined, !1, !1, valueBuffer), $.isFunction(opts.onBeforeWrite) && opts.onBeforeWrite.call(inputmask, undefined, getBuffer(), 0, opts)), 
            unmaskedvalue(el);
          case "mask":
            !function(elem) {
                EventRuler.off(elem);
                var isSupported = function(input, opts) {
                    var elementType = input.getAttribute("type"), isSupported = "INPUT" === input.tagName && -1 !== $.inArray(elementType, opts.supportsInputType) || input.isContentEditable || "TEXTAREA" === input.tagName;
                    if (!isSupported) if ("INPUT" === input.tagName) {
                        var el = document.createElement("input");
                        el.setAttribute("type", elementType), isSupported = "text" === el.type, el = null;
                    } else isSupported = "partial";
                    return !1 !== isSupported ? function(npt) {
                        var valueGet, valueSet;
                        function getter() {
                            return this.inputmask ? this.inputmask.opts.autoUnmask ? this.inputmask.unmaskedvalue() : -1 !== getLastValidPosition() || !0 !== opts.nullable ? document.activeElement === this && opts.clearMaskOnLostFocus ? (isRTL ? clearOptionalTail(getBuffer().slice()).reverse() : clearOptionalTail(getBuffer().slice())).join("") : valueGet.call(this) : "" : valueGet.call(this);
                        }
                        function setter(value) {
                            valueSet.call(this, value), this.inputmask && $(this).trigger("setvalue", [ value ]);
                        }
                        if (!npt.inputmask.__valueGet) {
                            if (!0 !== opts.noValuePatching) {
                                if (Object.getOwnPropertyDescriptor) {
                                    "function" != typeof Object.getPrototypeOf && (Object.getPrototypeOf = "object" == typeof "test".__proto__ ? function(object) {
                                        return object.__proto__;
                                    } : function(object) {
                                        return object.constructor.prototype;
                                    });
                                    var valueProperty = Object.getPrototypeOf ? Object.getOwnPropertyDescriptor(Object.getPrototypeOf(npt), "value") : undefined;
                                    valueProperty && valueProperty.get && valueProperty.set ? (valueGet = valueProperty.get, 
                                    valueSet = valueProperty.set, Object.defineProperty(npt, "value", {
                                        get: getter,
                                        set: setter,
                                        configurable: !0
                                    })) : "INPUT" !== npt.tagName && (valueGet = function() {
                                        return this.textContent;
                                    }, valueSet = function(value) {
                                        this.textContent = value;
                                    }, Object.defineProperty(npt, "value", {
                                        get: getter,
                                        set: setter,
                                        configurable: !0
                                    }));
                                } else document.__lookupGetter__ && npt.__lookupGetter__("value") && (valueGet = npt.__lookupGetter__("value"), 
                                valueSet = npt.__lookupSetter__("value"), npt.__defineGetter__("value", getter), 
                                npt.__defineSetter__("value", setter));
                                npt.inputmask.__valueGet = valueGet, npt.inputmask.__valueSet = valueSet;
                            }
                            npt.inputmask._valueGet = function(overruleRTL) {
                                return isRTL && !0 !== overruleRTL ? valueGet.call(this.el).split("").reverse().join("") : valueGet.call(this.el);
                            }, npt.inputmask._valueSet = function(value, overruleRTL) {
                                valueSet.call(this.el, null === value || value === undefined ? "" : !0 !== overruleRTL && isRTL ? value.split("").reverse().join("") : value);
                            }, valueGet === undefined && (valueGet = function() {
                                return this.value;
                            }, valueSet = function(value) {
                                this.value = value;
                            }, function(type) {
                                if ($.valHooks && ($.valHooks[type] === undefined || !0 !== $.valHooks[type].inputmaskpatch)) {
                                    var valhookGet = $.valHooks[type] && $.valHooks[type].get ? $.valHooks[type].get : function(elem) {
                                        return elem.value;
                                    }, valhookSet = $.valHooks[type] && $.valHooks[type].set ? $.valHooks[type].set : function(elem, value) {
                                        return elem.value = value, elem;
                                    };
                                    $.valHooks[type] = {
                                        get: function(elem) {
                                            if (elem.inputmask) {
                                                if (elem.inputmask.opts.autoUnmask) return elem.inputmask.unmaskedvalue();
                                                var result = valhookGet(elem);
                                                return -1 !== getLastValidPosition(undefined, undefined, elem.inputmask.maskset.validPositions) || !0 !== opts.nullable ? result : "";
                                            }
                                            return valhookGet(elem);
                                        },
                                        set: function(elem, value) {
                                            var result, $elem = $(elem);
                                            return result = valhookSet(elem, value), elem.inputmask && $elem.trigger("setvalue", [ value ]), 
                                            result;
                                        },
                                        inputmaskpatch: !0
                                    };
                                }
                            }(npt.type), function(npt) {
                                EventRuler.on(npt, "mouseenter", function(event) {
                                    var $input = $(this);
                                    this.inputmask._valueGet() !== getBuffer().join("") && $input.trigger("setvalue");
                                });
                            }(npt));
                        }
                    }(input) : input.inputmask = undefined, isSupported;
                }(elem, opts);
                if (!1 !== isSupported && ($el = $(el = elem), -1 === (maxLength = el !== undefined ? el.maxLength : undefined) && (maxLength = undefined), 
                !0 === opts.colorMask && initializeColorMask(el), mobile && ("inputmode" in el && (el.inputmode = opts.inputmode, 
                el.setAttribute("inputmode", opts.inputmode)), !0 === opts.disablePredictiveText && ("autocorrect" in el ? el.autocorrect = !1 : (!0 !== opts.colorMask && initializeColorMask(el), 
                el.type = "password"))), !0 === isSupported && (EventRuler.on(el, "submit", EventHandlers.submitEvent), 
                EventRuler.on(el, "reset", EventHandlers.resetEvent), EventRuler.on(el, "blur", EventHandlers.blurEvent), 
                EventRuler.on(el, "focus", EventHandlers.focusEvent), !0 !== opts.colorMask && (EventRuler.on(el, "click", EventHandlers.clickEvent), 
                EventRuler.on(el, "mouseleave", EventHandlers.mouseleaveEvent), EventRuler.on(el, "mouseenter", EventHandlers.mouseenterEvent)), 
                EventRuler.on(el, "dblclick", EventHandlers.dblclickEvent), EventRuler.on(el, "paste", EventHandlers.pasteEvent), 
                EventRuler.on(el, "dragdrop", EventHandlers.pasteEvent), EventRuler.on(el, "drop", EventHandlers.pasteEvent), 
                EventRuler.on(el, "cut", EventHandlers.cutEvent), EventRuler.on(el, "complete", opts.oncomplete), 
                EventRuler.on(el, "incomplete", opts.onincomplete), EventRuler.on(el, "cleared", opts.oncleared), 
                mobile || !0 === opts.inputEventOnly ? el.removeAttribute("maxLength") : (EventRuler.on(el, "keydown", EventHandlers.keydownEvent), 
                EventRuler.on(el, "keypress", EventHandlers.keypressEvent)), EventRuler.on(el, "compositionstart", $.noop), 
                EventRuler.on(el, "compositionupdate", $.noop), EventRuler.on(el, "compositionend", $.noop), 
                EventRuler.on(el, "keyup", $.noop), EventRuler.on(el, "input", EventHandlers.inputFallBackEvent), 
                EventRuler.on(el, "beforeinput", EventHandlers.beforeInputEvent)), EventRuler.on(el, "setvalue", EventHandlers.setValueEvent), 
                undoValue = getBufferTemplate().join(""), "" !== el.inputmask._valueGet(!0) || !1 === opts.clearMaskOnLostFocus || document.activeElement === el)) {
                    var initialValue = $.isFunction(opts.onBeforeMask) && opts.onBeforeMask.call(inputmask, el.inputmask._valueGet(!0), opts) || el.inputmask._valueGet(!0);
                    "" !== initialValue && checkVal(el, !0, !1, initialValue.split(""));
                    var buffer = getBuffer().slice();
                    undoValue = buffer.join(""), !1 === isComplete(buffer) && opts.clearIncomplete && resetMaskSet(), 
                    opts.clearMaskOnLostFocus && document.activeElement !== el && (-1 === getLastValidPosition() ? buffer = [] : clearOptionalTail(buffer)), 
                    (!1 === opts.clearMaskOnLostFocus || opts.showMaskOnFocus && document.activeElement === el || "" !== el.inputmask._valueGet(!0)) && writeBuffer(el, buffer), 
                    document.activeElement === el && caret(el, seekNext(getLastValidPosition()));
                }
            }(el);
            break;
          case "format":
            return valueBuffer = ($.isFunction(opts.onBeforeMask) && opts.onBeforeMask.call(inputmask, actionObj.value, opts) || actionObj.value).split(""), 
            checkVal.call(this, undefined, !0, !1, valueBuffer), actionObj.metadata ? {
                value: isRTL ? getBuffer().slice().reverse().join("") : getBuffer().join(""),
                metadata: maskScope.call(this, {
                    action: "getmetadata"
                }, maskset, opts)
            } : isRTL ? getBuffer().slice().reverse().join("") : getBuffer().join("");
          case "isValid":
            actionObj.value ? (valueBuffer = actionObj.value.split(""), checkVal.call(this, undefined, !0, !0, valueBuffer)) : actionObj.value = getBuffer().join("");
            for (var buffer = getBuffer(), rl = determineLastRequiredPosition(), lmib = buffer.length - 1; lmib > rl && !isMask(lmib); lmib--) ;
            return buffer.splice(rl, lmib + 1 - rl), isComplete(buffer) && actionObj.value === getBuffer().join("");
          case "getemptymask":
            return getBufferTemplate().join("");
          case "remove":
            if (el && el.inputmask) $.data(el, "_inputmask_opts", null), $el = $(el), el.inputmask._valueSet(opts.autoUnmask ? unmaskedvalue(el) : el.inputmask._valueGet(!0)), 
            EventRuler.off(el), el.inputmask.colorMask && ((colorMask = el.inputmask.colorMask).removeChild(el), 
            colorMask.parentNode.insertBefore(el, colorMask), colorMask.parentNode.removeChild(colorMask)), 
            Object.getOwnPropertyDescriptor && Object.getPrototypeOf ? Object.getOwnPropertyDescriptor(Object.getPrototypeOf(el), "value") && el.inputmask.__valueGet && Object.defineProperty(el, "value", {
                get: el.inputmask.__valueGet,
                set: el.inputmask.__valueSet,
                configurable: !0
            }) : document.__lookupGetter__ && el.__lookupGetter__("value") && el.inputmask.__valueGet && (el.__defineGetter__("value", el.inputmask.__valueGet), 
            el.__defineSetter__("value", el.inputmask.__valueSet)), el.inputmask = undefined;
            return el;
          case "getmetadata":
            if ($.isArray(maskset.metadata)) {
                var maskTarget = getMaskTemplate(!0, 0, !1).join("");
                return $.each(maskset.metadata, function(ndx, mtdt) {
                    if (mtdt.mask === maskTarget) return maskTarget = mtdt, !1;
                }), maskTarget;
            }
            return maskset.metadata;
        }
    }
    return Inputmask.prototype = {
        dataAttribute: "data-inputmask",
        defaults: {
            placeholder: "_",
            optionalmarker: [ "[", "]" ],
            quantifiermarker: [ "{", "}" ],
            groupmarker: [ "(", ")" ],
            alternatormarker: "|",
            escapeChar: "\\",
            mask: null,
            regex: null,
            oncomplete: $.noop,
            onincomplete: $.noop,
            oncleared: $.noop,
            repeat: 0,
            greedy: !1,
            autoUnmask: !1,
            removeMaskOnSubmit: !1,
            clearMaskOnLostFocus: !0,
            insertMode: !0,
            clearIncomplete: !1,
            alias: null,
            onKeyDown: $.noop,
            onBeforeMask: null,
            onBeforePaste: function(pastedValue, opts) {
                return $.isFunction(opts.onBeforeMask) ? opts.onBeforeMask.call(this, pastedValue, opts) : pastedValue;
            },
            onBeforeWrite: null,
            onUnMask: null,
            showMaskOnFocus: !0,
            showMaskOnHover: !0,
            onKeyValidation: $.noop,
            skipOptionalPartCharacter: " ",
            numericInput: !1,
            rightAlign: !1,
            undoOnEscape: !0,
            radixPoint: "",
            _radixDance: !1,
            groupSeparator: "",
            keepStatic: null,
            positionCaretOnTab: !0,
            tabThrough: !1,
            supportsInputType: [ "text", "tel", "password", "search" ],
            ignorables: [ 8, 9, 13, 19, 27, 33, 34, 35, 36, 37, 38, 39, 40, 45, 46, 93, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 0, 229 ],
            isComplete: null,
            preValidation: null,
            postValidation: null,
            staticDefinitionSymbol: undefined,
            jitMasking: !1,
            nullable: !0,
            inputEventOnly: !1,
            noValuePatching: !1,
            positionCaretOnClick: "lvp",
            casing: null,
            inputmode: "verbatim",
            colorMask: !1,
            disablePredictiveText: !1,
            importDataAttributes: !0
        },
        definitions: {
            9: {
                validator: "[0-9１-９]",
                definitionSymbol: "*"
            },
            a: {
                validator: "[A-Za-zА-яЁёÀ-ÿµ]",
                definitionSymbol: "*"
            },
            "*": {
                validator: "[0-9１-９A-Za-zА-яЁёÀ-ÿµ]"
            }
        },
        aliases: {},
        masksCache: {},
        mask: function(elems) {
            var that = this;
            return "string" == typeof elems && (elems = document.getElementById(elems) || document.querySelectorAll(elems)), 
            elems = elems.nodeName ? [ elems ] : elems, $.each(elems, function(ndx, el) {
                var scopedOpts = $.extend(!0, {}, that.opts);
                if (function(npt, opts, userOptions, dataAttribute) {
                    if (!0 === opts.importDataAttributes) {
                        var option, dataoptions, optionData, p, attrOptions = npt.getAttribute(dataAttribute);
                        function importOption(option, optionData) {
                            null !== (optionData = optionData !== undefined ? optionData : npt.getAttribute(dataAttribute + "-" + option)) && ("string" == typeof optionData && (0 === option.indexOf("on") ? optionData = window[optionData] : "false" === optionData ? optionData = !1 : "true" === optionData && (optionData = !0)), 
                            userOptions[option] = optionData);
                        }
                        if (attrOptions && "" !== attrOptions && (attrOptions = attrOptions.replace(/'/g, '"'), 
                        dataoptions = JSON.parse("{" + attrOptions + "}")), dataoptions) for (p in optionData = undefined, 
                        dataoptions) if ("alias" === p.toLowerCase()) {
                            optionData = dataoptions[p];
                            break;
                        }
                        for (option in importOption("alias", optionData), userOptions.alias && resolveAlias(userOptions.alias, userOptions, opts), 
                        opts) {
                            if (dataoptions) for (p in optionData = undefined, dataoptions) if (p.toLowerCase() === option.toLowerCase()) {
                                optionData = dataoptions[p];
                                break;
                            }
                            importOption(option, optionData);
                        }
                    }
                    return $.extend(!0, opts, userOptions), ("rtl" === npt.dir || opts.rightAlign) && (npt.style.textAlign = "right"), 
                    ("rtl" === npt.dir || opts.numericInput) && (npt.dir = "ltr", npt.removeAttribute("dir"), 
                    opts.isRTL = !0), Object.keys(userOptions).length;
                }(el, scopedOpts, $.extend(!0, {}, that.userOptions), that.dataAttribute)) {
                    var maskset = generateMaskSet(scopedOpts, that.noMasksCache);
                    maskset !== undefined && (el.inputmask !== undefined && (el.inputmask.opts.autoUnmask = !0, 
                    el.inputmask.remove()), el.inputmask = new Inputmask(undefined, undefined, !0), 
                    el.inputmask.opts = scopedOpts, el.inputmask.noMasksCache = that.noMasksCache, el.inputmask.userOptions = $.extend(!0, {}, that.userOptions), 
                    el.inputmask.isRTL = scopedOpts.isRTL || scopedOpts.numericInput, el.inputmask.el = el, 
                    el.inputmask.maskset = maskset, $.data(el, "_inputmask_opts", scopedOpts), maskScope.call(el.inputmask, {
                        action: "mask"
                    }));
                }
            }), elems && elems[0] && elems[0].inputmask || this;
        },
        option: function(options, noremask) {
            return "string" == typeof options ? this.opts[options] : "object" == typeof options ? ($.extend(this.userOptions, options), 
            this.el && !0 !== noremask && this.mask(this.el), this) : void 0;
        },
        unmaskedvalue: function(value) {
            return this.maskset = this.maskset || generateMaskSet(this.opts, this.noMasksCache), 
            maskScope.call(this, {
                action: "unmaskedvalue",
                value: value
            });
        },
        remove: function() {
            return maskScope.call(this, {
                action: "remove"
            });
        },
        getemptymask: function() {
            return this.maskset = this.maskset || generateMaskSet(this.opts, this.noMasksCache), 
            maskScope.call(this, {
                action: "getemptymask"
            });
        },
        hasMaskedValue: function() {
            return !this.opts.autoUnmask;
        },
        isComplete: function() {
            return this.maskset = this.maskset || generateMaskSet(this.opts, this.noMasksCache), 
            maskScope.call(this, {
                action: "isComplete"
            });
        },
        getmetadata: function() {
            return this.maskset = this.maskset || generateMaskSet(this.opts, this.noMasksCache), 
            maskScope.call(this, {
                action: "getmetadata"
            });
        },
        isValid: function(value) {
            return this.maskset = this.maskset || generateMaskSet(this.opts, this.noMasksCache), 
            maskScope.call(this, {
                action: "isValid",
                value: value
            });
        },
        format: function(value, metadata) {
            return this.maskset = this.maskset || generateMaskSet(this.opts, this.noMasksCache), 
            maskScope.call(this, {
                action: "format",
                value: value,
                metadata: metadata
            });
        },
        setValue: function(value) {
            this.el && $(this.el).trigger("setvalue", [ value ]);
        },
        analyseMask: function(mask, regexMask, opts) {
            var match, m, openingToken, currentOpeningToken, alternator, lastMatch, tokenizer = /(?:[?*+]|\{[0-9\+\*]+(?:,[0-9\+\*]*)?(?:\|[0-9\+\*]*)?\})|[^.?*+^${[]()|\\]+|./g, regexTokenizer = /\[\^?]?(?:[^\\\]]+|\\[\S\s]?)*]?|\\(?:0(?:[0-3][0-7]{0,2}|[4-7][0-7]?)?|[1-9][0-9]*|x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4}|c[A-Za-z]|[\S\s]?)|\((?:\?[:=!]?)?|(?:[?*+]|\{[0-9]+(?:,[0-9]*)?\})\??|[^.?*+^${[()|\\]+|./g, escaped = !1, currentToken = new MaskToken(), openenings = [], maskTokens = [];
            function MaskToken(isGroup, isOptional, isQuantifier, isAlternator) {
                this.matches = [], this.openGroup = isGroup || !1, this.alternatorGroup = !1, this.isGroup = isGroup || !1, 
                this.isOptional = isOptional || !1, this.isQuantifier = isQuantifier || !1, this.isAlternator = isAlternator || !1, 
                this.quantifier = {
                    min: 1,
                    max: 1
                };
            }
            function insertTestDefinition(mtoken, element, position) {
                position = position !== undefined ? position : mtoken.matches.length;
                var prevMatch = mtoken.matches[position - 1];
                if (regexMask) 0 === element.indexOf("[") || escaped && /\\d|\\s|\\w]/i.test(element) || "." === element ? mtoken.matches.splice(position++, 0, {
                    fn: new RegExp(element, opts.casing ? "i" : ""),
                    optionality: !1,
                    newBlockMarker: prevMatch === undefined ? "master" : prevMatch.def !== element,
                    casing: null,
                    def: element,
                    placeholder: undefined,
                    nativeDef: element
                }) : (escaped && (element = element[element.length - 1]), $.each(element.split(""), function(ndx, lmnt) {
                    prevMatch = mtoken.matches[position - 1], mtoken.matches.splice(position++, 0, {
                        fn: null,
                        optionality: !1,
                        newBlockMarker: prevMatch === undefined ? "master" : prevMatch.def !== lmnt && null !== prevMatch.fn,
                        casing: null,
                        def: opts.staticDefinitionSymbol || lmnt,
                        placeholder: opts.staticDefinitionSymbol !== undefined ? lmnt : undefined,
                        nativeDef: (escaped ? "'" : "") + lmnt
                    });
                })), escaped = !1; else {
                    var maskdef = (opts.definitions ? opts.definitions[element] : undefined) || Inputmask.prototype.definitions[element];
                    maskdef && !escaped ? mtoken.matches.splice(position++, 0, {
                        fn: maskdef.validator ? "string" == typeof maskdef.validator ? new RegExp(maskdef.validator, opts.casing ? "i" : "") : new function() {
                            this.test = maskdef.validator;
                        }() : new RegExp("."),
                        optionality: !1,
                        newBlockMarker: prevMatch === undefined ? "master" : prevMatch.def !== (maskdef.definitionSymbol || element),
                        casing: maskdef.casing,
                        def: maskdef.definitionSymbol || element,
                        placeholder: maskdef.placeholder,
                        nativeDef: element
                    }) : (mtoken.matches.splice(position++, 0, {
                        fn: null,
                        optionality: !1,
                        newBlockMarker: prevMatch === undefined ? "master" : prevMatch.def !== element && null !== prevMatch.fn,
                        casing: null,
                        def: opts.staticDefinitionSymbol || element,
                        placeholder: opts.staticDefinitionSymbol !== undefined ? element : undefined,
                        nativeDef: (escaped ? "'" : "") + element
                    }), escaped = !1);
                }
            }
            function defaultCase() {
                if (openenings.length > 0) {
                    if (insertTestDefinition(currentOpeningToken = openenings[openenings.length - 1], m), 
                    currentOpeningToken.isAlternator) {
                        alternator = openenings.pop();
                        for (var mndx = 0; mndx < alternator.matches.length; mndx++) alternator.matches[mndx].isGroup && (alternator.matches[mndx].isGroup = !1);
                        openenings.length > 0 ? (currentOpeningToken = openenings[openenings.length - 1]).matches.push(alternator) : currentToken.matches.push(alternator);
                    }
                } else insertTestDefinition(currentToken, m);
            }
            function groupify(matches) {
                var groupToken = new MaskToken(!0);
                return groupToken.openGroup = !1, groupToken.matches = matches, groupToken;
            }
            for (regexMask && (opts.optionalmarker[0] = undefined, opts.optionalmarker[1] = undefined); match = regexMask ? regexTokenizer.exec(mask) : tokenizer.exec(mask); ) {
                if (m = match[0], regexMask) switch (m.charAt(0)) {
                  case "?":
                    m = "{0,1}";
                    break;
                  case "+":
                  case "*":
                    m = "{" + m + "}";
                }
                if (escaped) defaultCase(); else switch (m.charAt(0)) {
                  case "(?=":
                  case "(?!":
                  case "(?<=":
                  case "(?<!":
                    break;
                  case opts.escapeChar:
                    escaped = !0, regexMask && defaultCase();
                    break;
                  case opts.optionalmarker[1]:
                  case opts.groupmarker[1]:
                    if ((openingToken = openenings.pop()).openGroup = !1, openingToken !== undefined) if (openenings.length > 0) {
                        if ((currentOpeningToken = openenings[openenings.length - 1]).matches.push(openingToken), 
                        currentOpeningToken.isAlternator) {
                            alternator = openenings.pop();
                            for (var mndx = 0; mndx < alternator.matches.length; mndx++) alternator.matches[mndx].isGroup = !1, 
                            alternator.matches[mndx].alternatorGroup = !1;
                            openenings.length > 0 ? (currentOpeningToken = openenings[openenings.length - 1]).matches.push(alternator) : currentToken.matches.push(alternator);
                        }
                    } else currentToken.matches.push(openingToken); else defaultCase();
                    break;
                  case opts.optionalmarker[0]:
                    openenings.push(new MaskToken(!1, !0));
                    break;
                  case opts.groupmarker[0]:
                    openenings.push(new MaskToken(!0));
                    break;
                  case opts.quantifiermarker[0]:
                    var quantifier = new MaskToken(!1, !1, !0), mqj = (m = m.replace(/[{}]/g, "")).split("|"), mq = mqj[0].split(","), mq0 = isNaN(mq[0]) ? mq[0] : parseInt(mq[0]), mq1 = 1 === mq.length ? mq0 : isNaN(mq[1]) ? mq[1] : parseInt(mq[1]);
                    "*" !== mq0 && "+" !== mq0 || (mq0 = "*" === mq1 ? 0 : 1), quantifier.quantifier = {
                        min: mq0,
                        max: mq1,
                        jit: mqj[1]
                    };
                    var matches = openenings.length > 0 ? openenings[openenings.length - 1].matches : currentToken.matches;
                    if ((match = matches.pop()).isAlternator) {
                        matches.push(match), matches = match.matches;
                        var groupToken = new MaskToken(!0), tmpMatch = matches.pop();
                        matches.push(groupToken), matches = groupToken.matches, match = tmpMatch;
                    }
                    match.isGroup || (match = groupify([ match ])), matches.push(match), matches.push(quantifier);
                    break;
                  case opts.alternatormarker:
                    function groupQuantifier(matches) {
                        var lastMatch = matches.pop();
                        return lastMatch.isQuantifier && (lastMatch = groupify([ matches.pop(), lastMatch ])), 
                        lastMatch;
                    }
                    if (openenings.length > 0) {
                        var subToken = (currentOpeningToken = openenings[openenings.length - 1]).matches[currentOpeningToken.matches.length - 1];
                        lastMatch = currentOpeningToken.openGroup && (subToken.matches === undefined || !1 === subToken.isGroup && !1 === subToken.isAlternator) ? openenings.pop() : groupQuantifier(currentOpeningToken.matches);
                    } else lastMatch = groupQuantifier(currentToken.matches);
                    if (lastMatch.isAlternator) openenings.push(lastMatch); else if (lastMatch.alternatorGroup ? (alternator = openenings.pop(), 
                    lastMatch.alternatorGroup = !1) : alternator = new MaskToken(!1, !1, !1, !0), alternator.matches.push(lastMatch), 
                    openenings.push(alternator), lastMatch.openGroup) {
                        lastMatch.openGroup = !1;
                        var alternatorGroup = new MaskToken(!0);
                        alternatorGroup.alternatorGroup = !0, openenings.push(alternatorGroup);
                    }
                    break;
                  default:
                    defaultCase();
                }
            }
            for (;openenings.length > 0; ) openingToken = openenings.pop(), currentToken.matches.push(openingToken);
            return currentToken.matches.length > 0 && (!function verifyGroupMarker(maskToken) {
                maskToken && maskToken.matches && $.each(maskToken.matches, function(ndx, token) {
                    var nextToken = maskToken.matches[ndx + 1];
                    (nextToken === undefined || nextToken.matches === undefined || !1 === nextToken.isQuantifier) && token && token.isGroup && (token.isGroup = !1, 
                    regexMask || (insertTestDefinition(token, opts.groupmarker[0], 0), !0 !== token.openGroup && insertTestDefinition(token, opts.groupmarker[1]))), 
                    verifyGroupMarker(token);
                });
            }(currentToken), maskTokens.push(currentToken)), (opts.numericInput || opts.isRTL) && function reverseTokens(maskToken) {
                for (var match in maskToken.matches = maskToken.matches.reverse(), maskToken.matches) if (maskToken.matches.hasOwnProperty(match)) {
                    var intMatch = parseInt(match);
                    if (maskToken.matches[match].isQuantifier && maskToken.matches[intMatch + 1] && maskToken.matches[intMatch + 1].isGroup) {
                        var qt = maskToken.matches[match];
                        maskToken.matches.splice(match, 1), maskToken.matches.splice(intMatch + 1, 0, qt);
                    }
                    maskToken.matches[match].matches !== undefined ? maskToken.matches[match] = reverseTokens(maskToken.matches[match]) : maskToken.matches[match] = ((st = maskToken.matches[match]) === opts.optionalmarker[0] ? st = opts.optionalmarker[1] : st === opts.optionalmarker[1] ? st = opts.optionalmarker[0] : st === opts.groupmarker[0] ? st = opts.groupmarker[1] : st === opts.groupmarker[1] && (st = opts.groupmarker[0]), 
                    st);
                }
                var st;
                return maskToken;
            }(maskTokens[0]), maskTokens;
        }
    }, Inputmask.extendDefaults = function(options) {
        $.extend(!0, Inputmask.prototype.defaults, options);
    }, Inputmask.extendDefinitions = function(definition) {
        $.extend(!0, Inputmask.prototype.definitions, definition);
    }, Inputmask.extendAliases = function(alias) {
        $.extend(!0, Inputmask.prototype.aliases, alias);
    }, Inputmask.format = function(value, options, metadata) {
        return Inputmask(options).format(value, metadata);
    }, Inputmask.unmask = function(value, options) {
        return Inputmask(options).unmaskedvalue(value);
    }, Inputmask.isValid = function(value, options) {
        return Inputmask(options).isValid(value);
    }, Inputmask.remove = function(elems) {
        "string" == typeof elems && (elems = document.getElementById(elems) || document.querySelectorAll(elems)), 
        elems = elems.nodeName ? [ elems ] : elems, $.each(elems, function(ndx, el) {
            el.inputmask && el.inputmask.remove();
        });
    }, Inputmask.setValue = function(elems, value) {
        "string" == typeof elems && (elems = document.getElementById(elems) || document.querySelectorAll(elems)), 
        elems = elems.nodeName ? [ elems ] : elems, $.each(elems, function(ndx, el) {
            el.inputmask ? el.inputmask.setValue(value) : $(el).trigger("setvalue", [ value ]);
        });
    }, Inputmask.escapeRegex = function(str) {
        return str.replace(new RegExp("(\\" + [ "/", ".", "*", "+", "?", "|", "(", ")", "[", "]", "{", "}", "\\", "$", "^" ].join("|\\") + ")", "gim"), "\\$1");
    }, Inputmask.keyCode = {
        BACKSPACE: 8,
        BACKSPACE_SAFARI: 127,
        DELETE: 46,
        DOWN: 40,
        END: 35,
        ENTER: 13,
        ESCAPE: 27,
        HOME: 36,
        INSERT: 45,
        LEFT: 37,
        PAGE_DOWN: 34,
        PAGE_UP: 33,
        RIGHT: 39,
        SPACE: 32,
        TAB: 9,
        UP: 38,
        X: 88,
        CONTROL: 17
    }, Inputmask;
});/*!
* jquery.inputmask.js
* https://github.com/RobinHerbots/Inputmask
* Copyright (c) 2010 - 2018 Robin Herbots
* Licensed under the MIT license (http://www.opensource.org/licenses/mit-license.php)
* Version: 4.0.0-beta.64
*/
!function(factory) {
    "function" == typeof define && define.amd ? define([ "jquery", "./inputmask" ], factory) : "object" == typeof exports ? module.exports = factory(require("jquery"), require("./inputmask")) : factory(jQuery, window.Inputmask);
}(function($, Inputmask) {
    return void 0 === $.fn.inputmask && ($.fn.inputmask = function(fn, options) {
        var nptmask, input = this[0];
        if (void 0 === options && (options = {}), "string" == typeof fn) switch (fn) {
          case "unmaskedvalue":
            return input && input.inputmask ? input.inputmask.unmaskedvalue() : $(input).val();
          case "remove":
            return this.each(function() {
                this.inputmask && this.inputmask.remove();
            });
          case "getemptymask":
            return input && input.inputmask ? input.inputmask.getemptymask() : "";
          case "hasMaskedValue":
            return !(!input || !input.inputmask) && input.inputmask.hasMaskedValue();
          case "isComplete":
            return !input || !input.inputmask || input.inputmask.isComplete();
          case "getmetadata":
            return input && input.inputmask ? input.inputmask.getmetadata() : void 0;
          case "setvalue":
            Inputmask.setValue(input, options);
            break;
          case "option":
            if ("string" != typeof options) return this.each(function() {
                if (void 0 !== this.inputmask) return this.inputmask.option(options);
            });
            if (input && void 0 !== input.inputmask) return input.inputmask.option(options);
            break;
          default:
            return options.alias = fn, nptmask = new Inputmask(options), this.each(function() {
                nptmask.mask(this);
            });
        } else {
            if ("object" == typeof fn) return nptmask = new Inputmask(fn), void 0 === fn.mask && void 0 === fn.alias ? this.each(function() {
                if (void 0 !== this.inputmask) return this.inputmask.option(fn);
                nptmask.mask(this);
            }) : this.each(function() {
                nptmask.mask(this);
            });
            if (void 0 === fn) return this.each(function() {
                (nptmask = new Inputmask(options)).mask(this);
            });
        }
    }), $.fn.inputmask;
});/*!
* inputmask.phone.extensions.js
* https://github.com/RobinHerbots/Inputmask
* Copyright (c) 2010 - 2018 Robin Herbots
* Licensed under the MIT license (http://www.opensource.org/licenses/mit-license.php)
* Version: 4.0.0-beta.64
*/
!function(factory) {
    "function" == typeof define && define.amd ? define([ "./dependencyLibs/inputmask.dependencyLib", "./inputmask" ], factory) : "object" == typeof exports ? module.exports = factory(require("./dependencyLibs/inputmask.dependencyLib"), require("./inputmask")) : factory(window.dependencyLib || jQuery, window.Inputmask);
}(function($, Inputmask) {
    function maskSort(a, b) {
        var maska = (a.mask || a).replace(/#/g, "0").replace(/\)/, "0").replace(/[+()#-]/g, ""), maskb = (b.mask || b).replace(/#/g, "0").replace(/\)/, "0").replace(/[+()#-]/g, "");
        return maska.localeCompare(maskb);
    }
    var analyseMaskBase = Inputmask.prototype.analyseMask;
    return Inputmask.prototype.analyseMask = function(mask, regexMask, opts) {
        var maskGroups = {};
        return opts.phoneCodes && (opts.phoneCodes && opts.phoneCodes.length > 1e3 && (function reduceVariations(masks, previousVariation, previousmaskGroup) {
            previousVariation = previousVariation || "", previousmaskGroup = previousmaskGroup || maskGroups, 
            "" !== previousVariation && (previousmaskGroup[previousVariation] = {});
            for (var variation = "", maskGroup = previousmaskGroup[previousVariation] || previousmaskGroup, i = masks.length - 1; i >= 0; i--) maskGroup[variation = (mask = masks[i].mask || masks[i]).substr(0, 1)] = maskGroup[variation] || [], 
            maskGroup[variation].unshift(mask.substr(1)), masks.splice(i, 1);
            for (var ndx in maskGroup) maskGroup[ndx].length > 500 && reduceVariations(maskGroup[ndx].slice(), ndx, maskGroup);
        }((mask = mask.substr(1, mask.length - 2)).split(opts.groupmarker[1] + opts.alternatormarker + opts.groupmarker[0])), 
        mask = function rebuild(maskGroup) {
            var mask = "", submasks = [];
            for (var ndx in maskGroup) $.isArray(maskGroup[ndx]) ? 1 === maskGroup[ndx].length ? submasks.push(ndx + maskGroup[ndx]) : submasks.push(ndx + opts.groupmarker[0] + maskGroup[ndx].join(opts.groupmarker[1] + opts.alternatormarker + opts.groupmarker[0]) + opts.groupmarker[1]) : submasks.push(ndx + rebuild(maskGroup[ndx]));
            return 1 === submasks.length ? mask += submasks[0] : mask += opts.groupmarker[0] + submasks.join(opts.groupmarker[1] + opts.alternatormarker + opts.groupmarker[0]) + opts.groupmarker[1], 
            mask;
        }(maskGroups)), mask = mask.replace(/9/g, "\\9")), analyseMaskBase.call(this, mask, regexMask, opts);
    }, Inputmask.extendAliases({
        abstractphone: {
            groupmarker: [ "<", ">" ],
            countrycode: "",
            phoneCodes: [],
            keepStatic: "auto",
            mask: function(opts) {
                return opts.definitions = {
                    "#": Inputmask.prototype.definitions[9]
                }, opts.phoneCodes.sort(maskSort);
            },
            onBeforeMask: function(value, opts) {
                var processedValue = value.replace(/^0{1,2}/, "").replace(/[\s]/g, "");
                return (processedValue.indexOf(opts.countrycode) > 1 || -1 === processedValue.indexOf(opts.countrycode)) && (processedValue = "+" + opts.countrycode + processedValue), 
                processedValue;
            },
            onUnMask: function(maskedValue, unmaskedValue, opts) {
                return maskedValue.replace(/[()#-]/g, "");
            },
            inputmode: "tel"
        }
    }), Inputmask;
});/*!
* phone-codes/phone-ru.js
* https://github.com/RobinHerbots/Inputmask
* Copyright (c) 2010 - 2018 Robin Herbots
* Licensed under the MIT license (http://www.opensource.org/licenses/mit-license.php)
* Version: 4.0.0-beta.64
*/
!function(factory) {
    "function" == typeof define && define.amd ? define([ "../inputmask" ], factory) : "object" == typeof exports ? module.exports = factory(require("../inputmask")) : factory(window.Inputmask);
}(function(Inputmask) {
    return Inputmask.extendAliases({
        phoneru: {
            alias: "abstractphone",
            countrycode: "7",
            phoneCodes: [ {
                mask: "+7 (301) ###-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Бурятия",
                city: "",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (3012) ##-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Бурятия",
                city: "Улан-Удэ",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (30130) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Бурятия",
                city: [ "Нижнеангарск", "Северобайкальск" ],
                operator: "",
                desc: ""
            }, {
                mask: "+7 (30131) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Бурятия",
                city: "Баргузин",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (30132) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Бурятия",
                city: "Таксимо",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (30133) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Бурятия",
                city: "Бичура",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (30134) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Бурятия",
                city: "Петропавловка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (30135) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Бурятия",
                city: "Сосново-Озёрское",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (30136) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Бурятия",
                city: "Заиграево",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (30137) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Бурятия",
                city: "Закаменск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (30138) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Бурятия",
                city: "Кабанск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (30140) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Бурятия",
                city: "Иволгинск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (30141) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Бурятия",
                city: "Кижинга",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (30142) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Бурятия",
                city: "Кяхта",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (30143) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Бурятия",
                city: "Мухоршибирь",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (30144) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Бурятия",
                city: "Турунтаево",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (30145) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Бурятия",
                city: "Гусиноозёрск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (30146) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Бурятия",
                city: "Тарбагатай",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (30147) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Бурятия",
                city: "Кырен",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (30148) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Бурятия",
                city: "Хоринск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (30149) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Бурятия",
                city: "Курумкан",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (30150) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Бурятия",
                city: "Орлик",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (30153) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Бурятия",
                city: "Багдарин",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (302) ###-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Забайкальский край",
                city: "",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (3022) ##-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Забайкальский край",
                city: "Чита",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (30230) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Забайкальский край",
                city: "Красный Чикой",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (30231) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Забайкальский край",
                city: "Акша",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (30232) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Забайкальский край",
                city: "Балей",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (30233) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Забайкальский край",
                city: "Борзя",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (30234) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Забайкальский край",
                city: "Карымское",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (30235) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Забайкальский край",
                city: "Кыра",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (30236) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Забайкальский край",
                city: "Петровск-Забайкальский",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (30237) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Забайкальский край",
                city: "Хилок",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (30238) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Забайкальский край",
                city: "Улёты",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (30239) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Забайкальский край",
                city: "Агинское",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (30240) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Забайкальский край",
                city: "Александровский Завод",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (30241) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Забайкальский край",
                city: "Могоча",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (30242) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Забайкальский край",
                city: "Нерчинск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (30243) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Забайкальский край",
                city: "Приаргунск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (30244) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Забайкальский край",
                city: "Шилка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (30245) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Забайкальский край",
                city: "Краснокаменск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (30246) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Забайкальский край",
                city: "Сретенск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (30247) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Забайкальский край",
                city: "Газимурский Завод",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (30248) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Забайкальский край",
                city: "Нерчинский Завод",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (30249) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Забайкальский край",
                city: "Калга",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (30251) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Забайкальский край",
                city: "Забайкальск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (30252) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Забайкальский край",
                city: "Нижний Цасучей",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (30253) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Забайкальский край",
                city: "Оловянная",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (30255) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Забайкальский край",
                city: "Могойтуй",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (30256) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Забайкальский край",
                city: "Дульдурга",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (30257) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Забайкальский край",
                city: "Горный",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (30261) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Забайкальский край",
                city: [ "Калар", "Чара" ],
                operator: "",
                desc: ""
            }, {
                mask: "+7 (30262) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Забайкальский край",
                city: "Первомайский",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (30264) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Забайкальский край",
                city: "Верх-Усугли",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (30265) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Забайкальский край",
                city: "Чернышевск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (30266) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Забайкальский край",
                city: "Шелопугино",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (341) ###-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Удмуртская Республика",
                city: "",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (3412) ##-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Удмуртская Республика",
                city: "Ижевск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34126) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Удмуртская Республика",
                city: "Завьялово",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34130) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Удмуртская Республика",
                city: "Ува",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34132) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Удмуртская Республика",
                city: "Каракулино",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34133) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Удмуртская Республика",
                city: "Киясово",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34134) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Удмуртская Республика",
                city: "Игра",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34136) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Удмуртская Республика",
                city: "Шаркан",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34138) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Удмуртская Республика",
                city: "Малая Пурга",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34139) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Удмуртская Республика",
                city: "Можга",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34141) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Удмуртская Республика",
                city: "Глазов",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34145) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Удмуртская Республика",
                city: "Воткинск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34147) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Удмуртская Республика",
                city: "Сарапул",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34150) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Удмуртская Республика",
                city: "Алнаши",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34151) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Удмуртская Республика",
                city: "Дебёсы",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34152) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Удмуртская Республика",
                city: "Сюмси",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34153) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Удмуртская Республика",
                city: "Камбарка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34154) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Удмуртская Республика",
                city: "Кизнер",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34155) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Удмуртская Республика",
                city: "Вавож",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34157) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Удмуртская Республика",
                city: "Яр",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34158) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Удмуртская Республика",
                city: "Кез",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34159) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Удмуртская Республика",
                city: "Селты",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34161) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Удмуртская Республика",
                city: "Юкаменское",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34162) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Удмуртская Республика",
                city: "Якшур-Бодья",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34163) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Удмуртская Республика",
                city: "Грахово",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34164) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Удмуртская Республика",
                city: "Красногорское",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34166) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Удмуртская Республика",
                city: "Балезино",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (342) ###-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Пермский край",
                city: "",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (342)2##-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Пермский край",
                city: "Пермь",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (342)3##-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Пермский край",
                city: "Пермь",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (3424)2#-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Пермский край",
                city: "Березники",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34240) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Пермский край",
                city: "Чердынь",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34241) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Пермский край",
                city: "Чайковский",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34243) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Пермский край",
                city: "Красновишерск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34244) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Пермский край",
                city: "Усолье",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34245) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Пермский край",
                city: "Гайны",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34246) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Пермский край",
                city: "Юсьва",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34248) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Пермский край",
                city: "Губаха",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34249) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Пермский край",
                city: "Лысьва",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34250) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Пермский край",
                city: "Гремячинск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34251) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Пермский край",
                city: "Березовка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34252) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Пермский край",
                city: "Усть-Кишерть",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34253) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Пермский край",
                city: "Соликамск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34254) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Пермский край",
                city: "Верещагино",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34255) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Пермский край",
                city: "Кизел",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34256) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Пермский край",
                city: "Чусовой",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34257) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Пермский край",
                city: "Большая Соснова",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34258) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Пермский край",
                city: "Орда",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34259) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Пермский край",
                city: "Уинское",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34260) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Пермский край",
                city: "Кудымкар",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34261) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Пермский край",
                city: "Чернушка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34262) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Пермский край",
                city: "Куеда",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34263) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Пермский край",
                city: "Звёздный",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34265) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Пермский край",
                city: "Добрянка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34266) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Пермский край",
                city: "Октябрьский",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34268) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Пермский край",
                city: "Частые",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34269) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Пермский край",
                city: "Горнозаводск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34271) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Пермский край",
                city: "Кунгур",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34272) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Пермский край",
                city: "Нытва",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34273) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Пермский край",
                city: "Краснокамск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34274) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Пермский край",
                city: "Александровск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34275) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Пермский край",
                city: "Суксун",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34276) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Пермский край",
                city: "Ильинский",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34277) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Пермский край",
                city: "Сива",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34278) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Пермский край",
                city: "Очер",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34279) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Пермский край",
                city: "Оханск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34291) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Пермский край",
                city: "Оса",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34292) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Пермский край",
                city: "Барда",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34293) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Пермский край",
                city: "Кочёво",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34294) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Пермский край",
                city: "Юрла",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34296) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Пермский край",
                city: "Елово",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34297) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Пермский край",
                city: "Карагай",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34298) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Пермский край",
                city: "Коса",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (343) ###-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Свердловская область",
                city: "",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (343)2##-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Свердловская область",
                city: "Екатеринбург",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (343)3##-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Свердловская область",
                city: "Екатеринбург",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34341) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Свердловская область",
                city: "Качканар",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34342)2-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Свердловская область",
                city: "Нижняя Тура",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34342)3-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Свердловская область",
                city: "Лесной",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34342)5-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Свердловская область",
                city: "Лесной",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34342)6-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Свердловская область",
                city: "Лесной",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34343) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Свердловская область",
                city: "Красноуральск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34344) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Свердловская область",
                city: "Кушва",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34345) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Свердловская область",
                city: "Верхняя Салда",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34346) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Свердловская область",
                city: "Алапаевск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34347) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Свердловская область",
                city: "Таборы",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34349) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Свердловская область",
                city: "Туринск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (3435) ##-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Свердловская область",
                city: "Нижний Тагил",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34350) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Свердловская область",
                city: "Полевской",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34355) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Свердловская область",
                city: "Ирбит",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34356) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Свердловская область",
                city: "Невьянск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34357) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Свердловская область",
                city: "Кировград",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34358) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Свердловская область",
                city: "Шаля",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34360) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Свердловская область",
                city: "Тавда",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34361) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Свердловская область",
                city: "Туринская Слобода",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34362) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Свердловская область",
                city: "Байкалово",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34363) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Свердловская область",
                city: "Артемовский",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34364) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Свердловская область",
                city: "Реж",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34365) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Свердловская область",
                city: "Асбест",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34367) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Свердловская область",
                city: "Тугулым",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34368) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Свердловская область",
                city: "Верхняя Пышма",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34369) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Свердловская область",
                city: "Берёзовский",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34370) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Свердловская область",
                city: "Новоуральск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34371) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Свердловская область",
                city: "Талица",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34372) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Свердловская область",
                city: "Пышма",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34373) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Свердловская область",
                city: "Сухой Лог",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34374) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Свердловская область",
                city: "Сысерть",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34375) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Свердловская область",
                city: "Камышлов",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34376) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Свердловская область",
                city: "Богданович",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34377) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Свердловская область",
                city: "Белоярский",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34380) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Свердловская область",
                city: "Североуральск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34383) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Свердловская область",
                city: "Карпинск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34383)5-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Свердловская область",
                city: "Волчанск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34384) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Свердловская область",
                city: "Краснотурьинск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34385) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Свердловская область",
                city: "Серов",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34386) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Свердловская область",
                city: "Ивдель",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34387) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Свердловская область",
                city: "Гари",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34388) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Свердловская область",
                city: "Новая Ляля",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34389) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Свердловская область",
                city: "Верхотурье",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (3439)2#-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Свердловская область",
                city: "Первоуральск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (3439)3#-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Свердловская область",
                city: "Каменск-Уральский",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (3439)54-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Свердловская область",
                city: "Каменск-Уральский",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (3439)6#-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Свердловская область",
                city: "Первоуральск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34391) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Свердловская область",
                city: "Ачит",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34394) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Свердловская область",
                city: "Красноуфимск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34395) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Свердловская область",
                city: "Арти",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34397) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Свердловская область",
                city: "Ревда",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34398) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Свердловская область",
                city: "Нижние Серги",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (345) ###-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Тюменская область",
                city: "",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (3452) ##-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Тюменская область",
                city: "Тюмень",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34531) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Тюменская область",
                city: "Ярково",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34533) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Тюменская область",
                city: "Нижняя Тавда",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34535) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Тюменская область",
                city: "Ялуторовск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34537) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Тюменская область",
                city: "Исетское",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34539) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Тюменская область",
                city: "Вагай",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34541) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Тюменская область",
                city: "Упорово",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34542) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Тюменская область",
                city: "Заводоуковск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34543) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Тюменская область",
                city: "Юргинское",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34544) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Тюменская область",
                city: "Омутинское",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34545) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Тюменская область",
                city: "Аромашево",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34546) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Тюменская область",
                city: "Голышманово",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34547) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Тюменская область",
                city: "Армизонское",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34550) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Тюменская область",
                city: "Большое Сорокино",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34551) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Тюменская область",
                city: "Ишим",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34553) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Тюменская область",
                city: "Казанское",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34554) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Тюменская область",
                city: "Бердюжье",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34555) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Тюменская область",
                city: "Сладково",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34556) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Тюменская область",
                city: "Абатский",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34557) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Тюменская область",
                city: "Викулово",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (3456) ##-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Тюменская область",
                city: "Тобольск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34561) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Тюменская область",
                city: "Уват",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (346) ###-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ханты-Мансийский автономный округ",
                city: "",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (3462) ##-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ханты-Мансийский автономный округ",
                city: "Сургут",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (3463) ##-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ханты-Мансийский автономный округ",
                city: "Нефтеюганск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34634) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ханты-Мансийский автономный округ",
                city: "Пыть-Ях",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34638) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ханты-Мансийский автономный округ",
                city: "Лянтор",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34643) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ханты-Мансийский автономный округ",
                city: "Мегион",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (3466) ##-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ханты-Мансийский автономный округ",
                city: "Нижневартовск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34667) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ханты-Мансийский автономный округ",
                city: "Когалым",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34668) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ханты-Мансийский автономный округ",
                city: "Радужный",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34669) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ханты-Мансийский автономный округ",
                city: "Лангепас",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34670) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ханты-Мансийский автономный округ",
                city: "Белоярский",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34672) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ханты-Мансийский автономный округ",
                city: "Нягань",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34673) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ханты-Мансийский автономный округ",
                city: "Ханты-Мансийск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34674) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ханты-Мансийский автономный округ",
                city: "Берёзово",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34675) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ханты-Мансийский автономный округ",
                city: "Советский",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34676) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ханты-Мансийский автономный округ",
                city: "Урай",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34677) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ханты-Мансийский автономный округ",
                city: "Кондинское",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34678) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ханты-Мансийский автономный округ",
                city: "Октябрьское",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (347) ###-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Башкортостан",
                city: "",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (347)2##-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Башкортостан",
                city: "Уфа",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (3473) ##-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Башкортостан",
                city: "Стерлитамак",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34731) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Башкортостан",
                city: "Агидель",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34739) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Башкортостан",
                city: "Стерлибашево",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34740) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Башкортостан",
                city: "Красноусольский",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34741) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Башкортостан",
                city: "Ермекеево",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34742) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Башкортостан",
                city: "Бакалы",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34743) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Башкортостан",
                city: "Бижбуляк",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34744) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Башкортостан",
                city: "Караидель",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34745) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Башкортостан",
                city: "Толбазы",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34746) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Башкортостан",
                city: "Фёдоровка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34747) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Башкортостан",
                city: "Языково",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34748) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Башкортостан",
                city: "Верхние Киги",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34749) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Башкортостан",
                city: "Мишкино",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34750) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Башкортостан",
                city: "Новобелокатай",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34751) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Башкортостан",
                city: "Баймак",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34752) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Башкортостан",
                city: "Зилаир",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34753) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Башкортостан",
                city: "Старобалтачево",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34754) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Башкортостан",
                city: "Раевский",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34755) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Башкортостан",
                city: "Старосубхангулово",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34756) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Башкортостан",
                city: "Бураево",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34757) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Башкортостан",
                city: "Ермолаево",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34758) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Башкортостан",
                city: "Акъяр",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34759) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Башкортостан",
                city: "Николо-Березовка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34760) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Башкортостан",
                city: "Янаул",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34761) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Башкортостан",
                city: "Кумертау",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34762) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Башкортостан",
                city: "Верхнеяркеево",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34763) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Башкортостан",
                city: "Салават",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34764) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Башкортостан",
                city: "Мелеуз",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34765) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Башкортостан",
                city: "Кармаскалы",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34766) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Башкортостан",
                city: "Благовещенск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34767) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Башкортостан",
                city: "Октябрьский",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34768) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Башкортостан",
                city: "Давлеканово",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34769) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Башкортостан",
                city: "Шаран",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34770) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Башкортостан",
                city: "Большеустьикинское",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34771) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Башкортостан",
                city: "Аскино",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34772) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Башкортостан",
                city: "Аскарово",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34773) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Башкортостан",
                city: "Буздяк",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34774) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Башкортостан",
                city: "Архангельское",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34775) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Башкортостан",
                city: "Сибай",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34776) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Башкортостан",
                city: "Красная Горка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34777) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Башкортостан",
                city: "Малояз",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34778) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Башкортостан",
                city: "Верхние Татышлы",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34779) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Башкортостан",
                city: "Калтасы",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34780) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Башкортостан",
                city: "Кушнаренково",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34781) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Башкортостан",
                city: "Межгорье",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34782) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Башкортостан",
                city: "Туймазы",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34783) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Башкортостан",
                city: "Нефтекамск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34784) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Башкортостан",
                city: "Бирск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34785) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Башкортостан",
                city: "Исянгулово",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34786) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Башкортостан",
                city: "Белебей",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34787) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Башкортостан",
                city: "Дюртюли",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34788) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Башкортостан",
                city: "Киргиз-Мияки",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34789) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Башкортостан",
                city: "Мраково",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34791) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Башкортостан",
                city: "Учалы",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34792) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Башкортостан",
                city: "Белорецк",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34794) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Башкортостан",
                city: "Ишимбай",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34795) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Башкортостан",
                city: "Иглино",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34796) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Башкортостан",
                city: "Чекмагуш",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34797) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Башкортостан",
                city: "Чишмы",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34798) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Башкортостан",
                city: "Месягутово",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (349) ###-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ямало-Ненецкий автономный округ",
                city: "",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34922) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ямало-Ненецкий автономный округ",
                city: "Салехард",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34932) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ямало-Ненецкий автономный округ",
                city: "Красноселькуп",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34934) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ямало-Ненецкий автономный округ",
                city: "Уренгой",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34936) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ямало-Ненецкий автономный округ",
                city: "Губкинский",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34938) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ямало-Ненецкий автономный округ",
                city: "Муравленко",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (3494) ##-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ямало-Ненецкий автономный округ",
                city: "Новый Уренгой",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34940) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ямало-Ненецкий автономный округ",
                city: "Тазовский",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34948) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ямало-Ненецкий автономный округ",
                city: "Харп",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34949) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ямало-Ненецкий автономный округ",
                city: "Ямбург",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (3496) ##-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ямало-Ненецкий автономный округ",
                city: "Ноябрьск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34992) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ямало-Ненецкий автономный округ",
                city: "Лабытнанги",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34993) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ямало-Ненецкий автономный округ",
                city: "Аксарка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34994) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ямало-Ненецкий автономный округ",
                city: "Мужи",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34995) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ямало-Ненецкий автономный округ",
                city: "Надым",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34996) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ямало-Ненецкий автономный округ",
                city: "Яр-Сале",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (34997) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ямало-Ненецкий автономный округ",
                city: "Тарко-Сале",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (351) ###-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Челябинская область",
                city: "",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (351)2##-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Челябинская область",
                city: "Челябинск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (351)301-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Челябинская область",
                city: "Челябинск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (351)7##-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Челябинская область",
                city: "Челябинск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (351)90#-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Челябинская область",
                city: "",
                operator: "Ростелеком",
                desc: "мобильные телефоны с зоновыми номерами"
            }, {
                mask: "+7 (3513)2#-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Челябинская область",
                city: "Миасс",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (3513)5#-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Челябинская область",
                city: "Миасс",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (3513)6#-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Челябинская область",
                city: "Златоуст",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (3513)7#-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Челябинская область",
                city: "Златоуст",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (35130)2-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Челябинская область",
                city: "Озёрск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (35130)4-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Челябинская область",
                city: "Озёрск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (35130)6-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Челябинская область",
                city: "Озёрск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (35130)7-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Челябинская область",
                city: "Озёрск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (35130)9-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Челябинская область",
                city: "Озёрск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (35131) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Челябинская область",
                city: "Аргаяш",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (35133) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Челябинская область",
                city: "Карталы",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (35134) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Челябинская область",
                city: "Южноуральск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (35138) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Челябинская область",
                city: "Еманжелинск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (35139) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Челябинская область",
                city: "Копейск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (35140) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Челябинская область",
                city: "Агаповка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (35141) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Челябинская область",
                city: "Бреды",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (35142) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Челябинская область",
                city: "Варна",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (35143) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Челябинская область",
                city: "Верхнеуральск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (35144) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Челябинская область",
                city: "Долгодеревенское",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (35145) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Челябинская область",
                city: "Еткуль",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (35146) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Челябинская область",
                city: "Снежинск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (35147) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Челябинская область",
                city: [ "Катав-Ивановск", "Юрюзань" ],
                operator: "",
                desc: ""
            }, {
                mask: "+7 (35148) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Челябинская область",
                city: "Кунашак",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (35149) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Челябинская область",
                city: "Касли",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (35150) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Челябинская область",
                city: "Миасское",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (35151) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Челябинская область",
                city: "Кыштым",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (35152) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Челябинская область",
                city: "Коркино",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (35153) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Челябинская область",
                city: "Карабаш",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (35154) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Челябинская область",
                city: "Куса",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (35155) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Челябинская область",
                city: "Кизильское",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (35156) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Челябинская область",
                city: "Нязепетровск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (35157) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Челябинская область",
                city: "Фершампенуаз",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (35158) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Челябинская область",
                city: "Октябрьское",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (35159) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Челябинская область",
                city: "Аша",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (35160) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Челябинская область",
                city: "Пласт",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (35161) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Челябинская область",
                city: "Сатка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (35163) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Челябинская область",
                city: "Троицк",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (35164) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Челябинская область",
                city: "Верхний Уфалей",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (35165) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Челябинская область",
                city: "Уйское",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (35166) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Челябинская область",
                city: "Увельский",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (35167) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Челябинская область",
                city: "Усть-Катав",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (35168) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Челябинская область",
                city: "Чебаркуль",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (35169) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Челябинская область",
                city: "Чесма",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (3519) ##-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Челябинская область",
                city: "Магнитогорск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (35191) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Челябинская область",
                city: "Трёхгорный",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (352) ###-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Курганская область",
                city: "",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (3522) ##-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Курганская область",
                city: "Курган",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (35230) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Курганская область",
                city: "Частоозерье",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (35231) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Курганская область",
                city: "Кетово",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (35232) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Курганская область",
                city: "Белозерское",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (35233) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Курганская область",
                city: "Варгаши",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (35234) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Курганская область",
                city: "Мокроусово",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (35235) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Курганская область",
                city: "Петухово",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (35236) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Курганская область",
                city: "Макушино",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (35237) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Курганская область",
                city: "Лебяжье",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (35238) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Курганская область",
                city: "Половинное",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (35239) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Курганская область",
                city: "Глядянское",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (35240) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Курганская область",
                city: "Звериноголовское",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (35241) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Курганская область",
                city: "Целинное",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (35242) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Курганская область",
                city: "Альменево",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (35243) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Курганская область",
                city: "Сафакулево",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (35244) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Курганская область",
                city: "Щучье",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (35245) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Курганская область",
                city: "Шумиха",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (35247) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Курганская область",
                city: "Мишкино",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (35248) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Курганская область",
                city: "Юргамыш",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (35249) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Курганская область",
                city: "Куртамыш",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (35251) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Курганская область",
                city: "Катайск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (35252) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Курганская область",
                city: "Далматово",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (35253) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Курганская область",
                city: "Шадринск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (35256) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Курганская область",
                city: "Каргаполье",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (35257) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Курганская область",
                city: "Шатрово",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (353) ###-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Оренбургская область",
                city: "",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (3532) ##-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Оренбургская область",
                city: "Оренбург",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (35330) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Оренбургская область",
                city: "Октябрьское",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (35331) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Оренбургская область",
                city: "Сакмара",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (35332) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Оренбургская область",
                city: "Тюльган",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (35333) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Оренбургская область",
                city: "Саракташ",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (35334) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Оренбургская область",
                city: "Беляевка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (35335) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Оренбургская область",
                city: "Акбулак",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (35336) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Оренбургская область",
                city: "Соль-Илецк",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (35337) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Оренбургская область",
                city: "Илек",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (35338) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Оренбургская область",
                city: "Переволоцкий",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (35339) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Оренбургская область",
                city: "Новосергиевка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (35341) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Оренбургская область",
                city: "Курманаевка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (35342) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Оренбургская область",
                city: "Бузулук",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (35344) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Оренбургская область",
                city: "Грачёвка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (35345) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Оренбургская область",
                city: "Плешаново",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (35346) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Оренбургская область",
                city: "Сорочинск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (35347) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Оренбургская область",
                city: "Ташла",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (35348) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Оренбургская область",
                city: "Первомайский",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (35349) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Оренбургская область",
                city: "Тоцкое",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (35351) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Оренбургская область",
                city: "Асекеево",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (35352) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Оренбургская область",
                city: "Бугуруслан",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (35354) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Оренбургская область",
                city: "Северное",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (35355) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Оренбургская область",
                city: "Абдулино",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (35356) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Оренбургская область",
                city: "Матвеевка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (35357) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Оренбургская область",
                city: "Пономаревка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (35358) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Оренбургская область",
                city: "Шарлык",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (35359) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Оренбургская область",
                city: "Александровка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (35361) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Оренбургская область",
                city: "Кувандык",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (35362) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Оренбургская область",
                city: "Гай",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (35363) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Оренбургская область",
                city: "Новоорск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (35364) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Оренбургская область",
                city: "Кваркено",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (35365) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Оренбургская область",
                city: "Адамовка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (35366) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Оренбургская область",
                city: "Светлый",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (35367) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Оренбургская область",
                city: "Домбаровский",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (35368) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Оренбургская область",
                city: "Ясный",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (3537)2#-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Оренбургская область",
                city: "Орск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (3537)3#-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Оренбургская область",
                city: "Орск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (3537)4#-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Оренбургская область",
                city: "Орск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (3537)6#-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Оренбургская область",
                city: "Новотроицк",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (35379) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Оренбургская область",
                city: "Медногорск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (381) ###-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Омская область",
                city: "",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (3812) ##-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Омская область",
                city: "Омск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38141) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Омская область",
                city: "Азово",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38150) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Омская область",
                city: "Усть-Ишим",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38151) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Омская область",
                city: "Таврическое",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38152) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Омская область",
                city: "Нововаршавка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38153) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Омская область",
                city: "Черлак",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38154) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Омская область",
                city: "Тевриз",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38155) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Омская область",
                city: "Калачинск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38156) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Омская область",
                city: "Русская Поляна",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38157) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Омская область",
                city: "Горьковское",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38158) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Омская область",
                city: "Муромцево",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38159) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Омская область",
                city: "Одесское",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38160) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Омская область",
                city: "Колосовка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38161) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Омская область",
                city: "Называевск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38162) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Омская область",
                city: "Большие Уки",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38163) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Омская область",
                city: "Полтавка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38164) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Омская область",
                city: "Седельниково",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38165) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Омская область",
                city: "Нижняя Омка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38166) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Омская область",
                city: "Оконешниково",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38167) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Омская область",
                city: "Крутинка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38168) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Омская область",
                city: "Марьяновка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38169) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Омская область",
                city: "Большеречье",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38170) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Омская область",
                city: "Кормиловка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38171) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Омская область",
                city: "Тара",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38172) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Омская область",
                city: "Павлоградка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38173) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Омская область",
                city: "Исилькуль",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38174) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Омская область",
                city: "Москаленки",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38175) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Омская область",
                city: "Любинский",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38176) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Омская область",
                city: "Тюкалинск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38177) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Омская область",
                city: "Шербакуль",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38178) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Омская область",
                city: "Саргатское",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38179) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Омская область",
                city: "Знаменское",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (382) ###-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Томская область",
                city: "",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (3822) ##-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Томская область",
                city: "Томск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (3823) ##-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Томская область",
                city: "Северск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38241) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Томская область",
                city: "Асино",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38243) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Томская область",
                city: "Зырянское",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38244) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Томская область",
                city: "Кожевниково",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38245) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Томская область",
                city: "Первомайское",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38246) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Томская область",
                city: "Тегульдет",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38247) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Томская область",
                city: "Мельниково",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38249) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Томская область",
                city: "Бакчар",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38250) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Томская область",
                city: "Кедровый",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38251) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Томская область",
                city: "Кривошеино",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38252) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Томская область",
                city: "Парабель",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38253) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Томская область",
                city: "Каргасок",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38254) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Томская область",
                city: "Колпашево",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38255) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Томская область",
                city: "Александровское",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38256) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Томская область",
                city: "Молчаново",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38257) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Томская область",
                city: "Подгорное",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38258) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Томская область",
                city: "Белый Яр",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38259) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Томская область",
                city: "Стрежевой",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (383) ###-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Новосибирская область",
                city: "Новосибирск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38340) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Новосибирская область",
                city: "Тогучин",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38341) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Новосибирская область",
                city: "Бердск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38343) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Новосибирская область",
                city: "Искитим",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38345) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Новосибирская область",
                city: "Черепаново",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38346) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Новосибирская область",
                city: "Сузун",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38347) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Новосибирская область",
                city: "Маслянино",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38348) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Новосибирская область",
                city: "Мошково",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38349) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Новосибирская область",
                city: "Болотное",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38350) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Новосибирская область",
                city: "Чулым",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38351) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Новосибирская область",
                city: "Коченево",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38352) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Новосибирская область",
                city: "Колывань",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38353) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Новосибирская область",
                city: "Баган",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38354) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Новосибирская область",
                city: "Довольное",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38355) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Новосибирская область",
                city: "Карасук",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38356) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Новосибирская область",
                city: "Кочки",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38357) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Новосибирская область",
                city: "Краснозерское",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38358) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Новосибирская область",
                city: "Купино",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38359) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Новосибирская область",
                city: "Ордынское",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38360) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Новосибирская область",
                city: "Северное",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38361) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Новосибирская область",
                city: "Барабинск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38362) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Новосибирская область",
                city: "Куйбышев",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38363) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Новосибирская область",
                city: "Здвинск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38364) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Новосибирская область",
                city: "Татарск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38365) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Новосибирская область",
                city: "Каргат",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38366) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Новосибирская область",
                city: "Убинское",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38367) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Новосибирская область",
                city: "Чаны",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38368) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Новосибирская область",
                city: "Чистоозерное",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38369) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Новосибирская область",
                city: "Венгерово",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38371) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Новосибирская область",
                city: "Кыштовка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38372) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Новосибирская область",
                city: "Усть-Тарка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38373) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Новосибирская область",
                city: "Обь",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (384) ###-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Кемеровская область",
                city: "",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (3842) ##-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Кемеровская область",
                city: "Кемерово",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (3843) ##-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Кемеровская область",
                city: "Новокузнецк",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38441) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Кемеровская область",
                city: "Яя",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38442) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Кемеровская область",
                city: "Промышленная",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38443) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Кемеровская область",
                city: "Мариинск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38444) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Кемеровская область",
                city: "Верх-Чебула",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38445) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Кемеровская область",
                city: "Берёзовский",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38446) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Кемеровская область",
                city: "Крапивинский",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38447) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Кемеровская область",
                city: "Тисуль",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38448) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Кемеровская область",
                city: "Тайга",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38449) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Кемеровская область",
                city: "Тяжинский",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38451) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Кемеровская область",
                city: "Юрга",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38452) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Кемеровская область",
                city: "Белово",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38453) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Кемеровская область",
                city: "Анжеро-Судженск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38454) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Кемеровская область",
                city: "Топки",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38455) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Кемеровская область",
                city: "Яшкино",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38456) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Кемеровская область",
                city: "Ленинск-Кузнецкий",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38459) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Кемеровская область",
                city: "Ижморский",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (3846) ##-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Кемеровская область",
                city: "Прокопьевск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38463) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Кемеровская область",
                city: "Гурьевск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38464) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Кемеровская область",
                city: "Киселевск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38471) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Кемеровская область",
                city: "Осинники",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38472) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Кемеровская область",
                city: "Калтан",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38473) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Кемеровская область",
                city: "Таштагол",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38474) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Кемеровская область",
                city: "Мыски",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38475) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Кемеровская область",
                city: "Междуреченск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (385) ###-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Алтайский край",
                city: "",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (3852) ##-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Алтайский край",
                city: "Барнаул",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38530) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Алтайский край",
                city: "Зональное",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38531) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Алтайский край",
                city: "Косиха",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38532) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Алтайский край",
                city: "Новоалтайск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38533) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Алтайский край",
                city: "Солтон",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38534) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Алтайский край",
                city: "Троицкое",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38535) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Алтайский край",
                city: "Красногорское",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38536) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Алтайский край",
                city: "Смоленское",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38537) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Алтайский край",
                city: "Алтайское",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38538) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Алтайский край",
                city: "Верх-Суетка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38539) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Алтайский край",
                city: "Гальбштадт",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (3854) ##-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Алтайский край",
                city: "Бийск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38550) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Алтайский край",
                city: "Шипуново",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38551) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Алтайский край",
                city: "Калманка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38552) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Алтайский край",
                city: "Топчиха",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38553) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Алтайский край",
                city: "Алейск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38554) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Алтайский край",
                city: "Усть-Чарышская Пристань",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38555) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Алтайский край",
                city: "Новичиха",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38556) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Алтайский край",
                city: "Поспелиха",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38557) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Алтайский край",
                city: "Рубцовск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38558) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Алтайский край",
                city: "Шелаболиха",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38559) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Алтайский край",
                city: "Староалейское",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38560) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Алтайский край",
                city: "Новоегорьевское",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38561) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Алтайский край",
                city: "Романово",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38562) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Алтайский край",
                city: "Завьялово",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38563) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Алтайский край",
                city: "Родино",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38564) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Алтайский край",
                city: "Благовещенка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38565) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Алтайский край",
                city: "Волчиха",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38566) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Алтайский край",
                city: "Кулунда",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38567) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Алтайский край",
                city: "Табуны",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38568) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Алтайский край",
                city: "Славгород",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38569) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Алтайский край",
                city: "Хабары",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38570) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Алтайский край",
                city: "Михайловка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38571) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Алтайский край",
                city: "Быстрый Исток",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38572) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Алтайский край",
                city: "Бурла",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38573) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Алтайский край",
                city: "Петропавловское",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38574) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Алтайский край",
                city: "Чарышское",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38575) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Алтайский край",
                city: "Краснощеково",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38576) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Алтайский край",
                city: "Курья",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38577) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Алтайский край",
                city: "Белокуриха",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38578) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Алтайский край",
                city: "Ключи",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38579) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Алтайский край",
                city: "Угловское",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38580) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Алтайский край",
                city: "Панкрушиха",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38581) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Алтайский край",
                city: "Павловск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38582) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Алтайский край",
                city: "Ребриха",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38583) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Алтайский край",
                city: "Мамонтово",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38584) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Алтайский край",
                city: "Камень-на-Оби",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38585) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Алтайский край",
                city: "Баево",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38586) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Алтайский край",
                city: "Горняк",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38587) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Алтайский край",
                city: "Змеиногорск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38588) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Алтайский край",
                city: "Тюменцево",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38589) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Алтайский край",
                city: "Крутиха",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38590) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Алтайский край",
                city: "Кытманово",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38591) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Алтайский край",
                city: "Тальменка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38592) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Алтайский край",
                city: "Залесово",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38593) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Алтайский край",
                city: "Ельцовка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38594) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Алтайский край",
                city: "Солонешное",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38595) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Алтайский край",
                city: "Заринск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38596) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Алтайский край",
                city: "Целинное",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38597) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Алтайский край",
                city: "Тогул",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38598) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Алтайский край",
                city: "Советское",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38599) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Алтайский край",
                city: "Усть-Калманка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (388) ###-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Алтай",
                city: "",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (3882) ##-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Алтай",
                city: "Горно-Алтайск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38840) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Алтай",
                city: "Чоя",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38841) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Алтай",
                city: "Чемал",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38842) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Алтай",
                city: "Кош-Агач",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38843) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Алтай",
                city: "Турочак",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38844) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Алтай",
                city: "Майма",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38845) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Алтай",
                city: "Онгудай",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38846) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Алтай",
                city: "Акташ",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38847) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Алтай",
                city: "Усть-Кан",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38848) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Алтай",
                city: "Усть-Кокса",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (38849) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Алтай",
                city: "Шебалино",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (390) ###-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Хакасия",
                city: "",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (3902) ##-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Хакасия",
                city: "Абакан",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (39031) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Хакасия",
                city: "Черногорск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (39032) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Хакасия",
                city: "Усть-Абакан",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (39033) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Хакасия",
                city: "Сорск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (39034) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Хакасия",
                city: "Боград",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (39035) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Хакасия",
                city: "Шира",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (39036) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Хакасия",
                city: "Копьёво",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (39041) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Хакасия",
                city: "Белый Яр",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (39042) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Хакасия",
                city: "Саяногорск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (39044) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Хакасия",
                city: "Бея",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (39045) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Хакасия",
                city: "Аскиз",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (39046) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Хакасия",
                city: "Таштып",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (39047) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Хакасия",
                city: "Абаза",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (391) ###-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Красноярский край",
                city: "",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (391)2##-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Красноярский край",
                city: "Красноярск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (39131) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Красноярский край",
                city: "Сосновоборск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (39132) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Красноярский край",
                city: "Минусинск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (39133) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Красноярский край",
                city: "Емельяново",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (39134) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Красноярский край",
                city: "Краснотуранск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (39135) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Красноярский край",
                city: "Идринское",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (39136) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Красноярский край",
                city: "Курагино",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (39137) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Красноярский край",
                city: "Каратузское",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (39138) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Красноярский край",
                city: "Ермаковское",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (39139) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Красноярский край",
                city: "Шушенское",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (39140) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Красноярский край",
                city: "Партизанское",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (39141) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Красноярский край",
                city: "Мотыгино",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (39142) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Красноярский край",
                city: "Агинское",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (39143) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Красноярский край",
                city: "Кодинск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (39144) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Красноярский край",
                city: "Дивногорск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (39145) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Красноярский край",
                city: "Лесосибирск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (39146) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Красноярский край",
                city: "Уяр",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (39147) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Красноярский край",
                city: "Новоселово",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (39148) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Красноярский край",
                city: "Балахта",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (39149) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Красноярский край",
                city: "Шалинское",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (39150) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Красноярский край",
                city: "Новобирилюссы",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (39151) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Красноярский край",
                city: "Ачинск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (39152) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Красноярский край",
                city: "Диксон",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (39153) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Красноярский край",
                city: "Шарыпово",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (39154) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Красноярский край",
                city: "Козулька",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (39155) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Красноярский край",
                city: "Назарово",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (39156) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Красноярский край",
                city: "Ужур",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (39157) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Красноярский край",
                city: "Боготол",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (39158) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Красноярский край",
                city: "Тюхтет",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (39159) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Красноярский край",
                city: "Большой Улуй",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (39160) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Красноярский край",
                city: "Северо-Енисейский",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (39161) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Красноярский край",
                city: "Канск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (39162) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Красноярский край",
                city: "Богучаны",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (39163) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Красноярский край",
                city: "Абан",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (39164) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Красноярский край",
                city: "Тасеево",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (39165) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Красноярский край",
                city: "Заозерный",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (39166) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Красноярский край",
                city: "Пировское",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (39167) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Красноярский край",
                city: "Дзержинское",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (39168) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Красноярский край",
                city: "Бородино",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (39169) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Красноярский край",
                city: "Зеленогорск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (39170) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Красноярский край",
                city: "Тура",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (39171) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Красноярский край",
                city: "Нижний Ингаш",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (39172) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Красноярский край",
                city: "Игарка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (39173) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Красноярский край",
                city: "Иланский",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (39174) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Красноярский край",
                city: "Ирбейское",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (39175) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Красноярский край",
                city: "Берёзовка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (39176) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Красноярский край",
                city: "Хатанга",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (39177) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Красноярский край",
                city: "Ванавара",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (39178) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Красноярский край",
                city: "Байкит",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (39179) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Красноярский край",
                city: "Караул",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (3919)2#-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Красноярский край",
                city: "Норильск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (3919)4#-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Красноярский край",
                city: "Норильск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (39190) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Красноярский край",
                city: "Туруханск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (39191) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Красноярский край",
                city: "Дудинка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (39193) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Красноярский край",
                city: "Снежногорск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (39195) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Красноярский край",
                city: "Енисейск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (39196) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Красноярский край",
                city: "Казачинское",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (39197) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Красноярский край",
                city: "Железногорск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (39198) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Красноярский край",
                city: "Большая Мурта",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (39199) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Красноярский край",
                city: "Сухобузимское",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (394) ###-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Тыва",
                city: "",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (3942) ##-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Тыва",
                city: "Кызыл",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (39432) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Тыва",
                city: "Сарыг-Сеп",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (39433) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Тыва",
                city: "Ак-Довурак",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (39434) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Тыва",
                city: "Чадан",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (39435) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Тыва",
                city: "Туран",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (39436) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Тыва",
                city: "Шагонар",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (39437) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Тыва",
                city: "Бай-Хаак",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (39438) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Тыва",
                city: "Самагалтай",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (39439) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Тыва",
                city: "Эрзин",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (39441) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Тыва",
                city: "Кызыл-Мажалык",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (39442) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Тыва",
                city: "Тээли",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (39444) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Тыва",
                city: "Хандагайты",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (39445) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Тыва",
                city: "Суг-Аксы",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (39450) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Тыва",
                city: "Тоора-Хем",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (39451) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Тыва",
                city: "Мугур-Аксы",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (395) ###-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Иркутская область",
                city: "",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (3952) ##-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Иркутская область",
                city: "Иркутск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (3953) ##-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Иркутская область",
                city: "Братск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (39530) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Иркутская область",
                city: "Тулун",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (39535) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Иркутская область",
                city: "Усть-Илимск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (39536) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Иркутская область",
                city: "Куйтун",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (39537) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Иркутская область",
                city: "Баяндай",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (39538) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Иркутская область",
                city: "Бохан",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (39539) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Иркутская область",
                city: "Оса",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (39540) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Иркутская область",
                city: "Качуг",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (39541) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Иркутская область",
                city: "Усть-Ордынский",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (39542) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Иркутская область",
                city: "Байкальск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (39543) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Иркутская область",
                city: "Усолье-Сибирское",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (39544) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Иркутская область",
                city: "Слюдянка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (39545) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Иркутская область",
                city: "Усть-Уда",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (39546) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Иркутская область",
                city: "Черемхово",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (39548) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Иркутская область",
                city: "Балаганск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (39549) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Иркутская область",
                city: "Новонукутский",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (3955) ##-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Иркутская область",
                city: "Ангарск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (39550) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Иркутская область",
                city: "Шелехов",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (39551) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Иркутская область",
                city: "Жигалово",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (39552) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Иркутская область",
                city: "Залари",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (39553) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Иркутская область",
                city: "Саянск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (39554) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Иркутская область",
                city: "Зима",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (39557) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Иркутская область",
                city: "Нижнеудинск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (39558) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Иркутская область",
                city: "Ольхонск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (39559) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Иркутская область",
                city: "Еланцы",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (39560) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Иркутская область",
                city: "Ербогачен",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (39561) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Иркутская область",
                city: "Бодайбо",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (39562) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Иркутская область",
                city: "Казачинское",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (39563) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Иркутская область",
                city: "Тайшет",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (39564) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Иркутская область",
                city: "Кутулик",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (39565) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Иркутская область",
                city: "Усть-Кут",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (39566) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Иркутская область",
                city: "Железногорск-Илимский",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (39567) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Иркутская область",
                city: "Чунский",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (39568) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Иркутская область",
                city: "Киренск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (39569) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Иркутская область",
                city: "Мама",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (401) ###-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Калининградская область",
                city: "",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (4012) ##-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Калининградская область",
                city: "Калининград",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (40141) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Калининградская область",
                city: "Черняховск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (40142) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Калининградская область",
                city: "Озёрск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (40143) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Калининградская область",
                city: "Гусев",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (40144) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Калининградская область",
                city: "Нестеров",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (40145) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Калининградская область",
                city: "Балтийск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (40150) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Калининградская область",
                city: "Зеленоградск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (40151) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Калининградская область",
                city: "Гурьевск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (40152) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Калининградская область",
                city: "Светлый",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (40153) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Калининградская область",
                city: "Светлогорск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (40155) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Калининградская область",
                city: "Пионерский",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (40156) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Калининградская область",
                city: "Багратионовск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (40157) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Калининградская область",
                city: "Правдинск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (40158) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Калининградская область",
                city: "Полесск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (40159) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Калининградская область",
                city: "Гвардейск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (40161) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Калининградская область",
                city: "Советск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (40162) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Калининградская область",
                city: "Неман",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (40163) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Калининградская область",
                city: "Славск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (40164) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Калининградская область",
                city: "Краснознаменск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (411) ###-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Якутия",
                city: "",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (4112) ##-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Якутия",
                city: "Якутск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (41131) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Якутия",
                city: "Бердигестях",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (41132) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Якутия",
                city: "Вилюйск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (41133) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Якутия",
                city: "Верхневилюйск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (41134) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Якутия",
                city: "Нюрба",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (41135) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Якутия",
                city: "Сунтар",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (41136) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Якутия",
                city: "Мирный",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (41137) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Якутия",
                city: "Ленск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (41138) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Якутия",
                city: "Олёкминск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (41140) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Якутия",
                city: "Солнечный",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (41141) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Якутия",
                city: "Усть-Мая",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (41142) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Якутия",
                city: "Амга",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (41143) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Якутия",
                city: "Майя",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (41144) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Якутия",
                city: "Покровск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (41145) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Якутия",
                city: "Алдан",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (41147) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Якутия",
                city: "Нерюнгри",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (41150) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Якутия",
                city: "Хонуу",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (41151) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Якутия",
                city: "Чурапча",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (41152) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Якутия",
                city: "Ытык-Кюёль",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (41153) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Якутия",
                city: "Хандыга",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (41154) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Якутия",
                city: "Усть-Нера",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (41155) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Якутия",
                city: "Зырянка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (41156) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Якутия",
                city: "Среднеколымск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (41157) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Якутия",
                city: "Черский",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (41158) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Якутия",
                city: "Чокурдах",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (41159) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Якутия",
                city: "Белая Гора",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (41160) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Якутия",
                city: "Батагай-Алыта",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (41161) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Якутия",
                city: "Борогонцы",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (41162) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Якутия",
                city: "Намцы",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (41163) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Якутия",
                city: "Сангар",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (41164) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Якутия",
                city: "Жиганск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (41165) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Якутия",
                city: "Батагай",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (41166) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Якутия",
                city: "Депутатский",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (41167) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Якутия",
                city: "Тикси",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (41168) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Якутия",
                city: "Саскылах",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (41169) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Якутия",
                city: "Оленёк",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (413) ###-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Магаданская область",
                city: "",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (4132) ##-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Магаданская область",
                city: "Магадан",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (41341) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Магаданская область",
                city: "Ола",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (41342) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Магаданская область",
                city: "Палатка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (41343) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Магаданская область",
                city: "Ягодное",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (41344) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Магаданская область",
                city: "Усть-Омчуг",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (41345) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Магаданская область",
                city: "Сусуман",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (41346) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Магаданская область",
                city: "Омсукчан",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (41347) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Магаданская область",
                city: "Сеймчан",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (41348) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Магаданская область",
                city: "Эвенск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (415) ###-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Камчатский край",
                city: "",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (4152) ##-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Камчатский край",
                city: "Петропавловск-Камчатский",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (41531) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Камчатский край",
                city: "Елизово",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (41532) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Камчатский край",
                city: "Усть-Большерецк",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (41533) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Камчатский край",
                city: "Мильково",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (41534) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Камчатский край",
                city: "Усть-Камчатск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (41535) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Камчатский край",
                city: "Вилючинск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (41536) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Камчатский край",
                city: "Соболево",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (41537) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Камчатский край",
                city: "Тигиль",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (41538) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Камчатский край",
                city: "Вилючинск-3",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (41539) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Камчатский край",
                city: "Усть-Хайрюзово",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (41541) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Камчатский край",
                city: "Ключи",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (41542) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Камчатский край",
                city: "Эссо",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (41543) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Камчатский край",
                city: "Палана",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (41544) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Камчатский край",
                city: "Тиличики",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (41545) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Камчатский край",
                city: "Оссора",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (41546) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Камчатский край",
                city: "Каменское",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (41547) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Камчатский край",
                city: "Никольское",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (41548) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Камчатский край",
                city: "Козыревск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (416) ###-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Амурская область",
                city: "",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (4162) ##-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Амурская область",
                city: [ "Благовещенск", "Благовещенский район" ],
                operator: "",
                desc: ""
            }, {
                mask: "+7 (41631)2-0#-##",
                cc: "RU",
                cd: "Russia",
                region: "Амурская область",
                city: "Ивановский район",
                operator: "Транссвязьтелеком",
                desc: ""
            }, {
                mask: "+7 (41632)3-0#-##",
                cc: "RU",
                cd: "Russia",
                region: "Амурская область",
                city: "Октябрьский район",
                operator: "Транссвязьтелеком",
                desc: ""
            }, {
                mask: "+7 (41633)3-0#-##",
                cc: "RU",
                cd: "Russia",
                region: "Амурская область",
                city: "Райчихинск",
                operator: "Транссвязьтелеком",
                desc: ""
            }, {
                mask: "+7 (41634) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Амурская область",
                city: "Бурейский район",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (41637) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Амурская область",
                city: "Михайловский район",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (41638) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Амурская область",
                city: "Тамбовский район",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (41639) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Амурская область",
                city: "Константиновский район",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (41641) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Амурская область",
                city: "Белогорский район",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (41642) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Амурская область",
                city: "Серышевский район",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (41643) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Амурская область",
                city: "Свободненский район",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (41644) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Амурская область",
                city: "Мазановский район",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (41645) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Амурская область",
                city: "Ромненский район",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (41646) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Амурская область",
                city: "Селемджинский район",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (41647) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Амурская область",
                city: "Райчихинск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (41648) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Амурская область",
                city: "Архаринский район",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (41649) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Амурская область",
                city: "Ивановский район",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (41651) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Амурская область",
                city: "Шимановский район",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (41652) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Амурская область",
                city: "Октябрьский район",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (41653) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Амурская область",
                city: "Магдагачинский район",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (41654) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Амурская область",
                city: "Сковородинский район",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (41655) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Амурская область",
                city: "Селемджинский район",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (41656) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Амурская область",
                city: "Тындинский район",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (41658) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Амурская область",
                city: "Зейский район",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (421) ###-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Хабаровский край",
                city: "",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (4212) ##-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Хабаровский край",
                city: "Хабаровск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (42135) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Хабаровский край",
                city: "Николаевск-на-Амуре",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (41636) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Амурская область",
                city: "Завитинский район",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (41636) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Амурская область",
                city: "Завитинский район",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (41636) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Амурская область",
                city: "Завитинский район",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (42137) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Хабаровский край",
                city: "Ванино",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (42138) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Хабаровский край",
                city: "Советская Гавань",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (42141) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Хабаровский край",
                city: "Охотск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (42142) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Хабаровский край",
                city: "Амурск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (42143) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Хабаровский край",
                city: "Чумикан",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (42144) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Хабаровский край",
                city: "им. Полины Осипенко",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (42146) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Хабаровский край",
                city: "Солнечный",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (42147) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Хабаровский край",
                city: "Аян",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (42149) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Хабаровский край",
                city: "Чегдомын",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (42151) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Хабаровский край",
                city: "Богородское",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (42153) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Хабаровский край",
                city: "Вяземский",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (42154) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Хабаровский край",
                city: "Переяславка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (42155) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Хабаровский край",
                city: "Бикин",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (42156) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Хабаровский край",
                city: "Троицкое",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (4217) ##-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Хабаровский край",
                city: "Комсомольск-на-Амуре",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (423) ###-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Приморский край",
                city: "Владивосток",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (42331) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Приморский край",
                city: "Славянка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (42334) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Приморский край",
                city: [ "Вольно-Надеждинское", "Раздольное" ],
                operator: "",
                desc: ""
            }, {
                mask: "+7 (42335) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Приморский край",
                city: "Большой Камень",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (42337) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Приморский край",
                city: "Артем",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (42339) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Приморский край",
                city: "Фокино",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (4234) ##-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Приморский край",
                city: "Уссурийск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (42344) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Приморский край",
                city: "Покровка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (42345) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Приморский край",
                city: "Пограничный",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (42346) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Приморский край",
                city: "Михайловка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (42347) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Приморский край",
                city: "Хороль",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (42349) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Приморский край",
                city: "Камень-Рыболов",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (42351) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Приморский край",
                city: "Черниговка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (42352) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Приморский край",
                city: "Спасск-Дальний",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (42354) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Приморский край",
                city: "Кировский",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (42355) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Приморский край",
                city: "Лесозаводск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (42356) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Приморский край",
                city: "Дальнереченск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (42357) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Приморский край",
                city: "Лучегорск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (42359) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Приморский край",
                city: "Новопокровка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (4236) ##-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Приморский край",
                city: [ "Находка", "Порт Восточный" ],
                operator: "",
                desc: ""
            }, {
                mask: "+7 (42361) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Приморский край",
                city: "Арсеньев",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (42362) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Приморский край",
                city: "Анучино",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (42363) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Приморский край",
                city: "Партизанск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (42365) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Приморский край",
                city: "Владимиро-Александровское",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (42371) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Приморский край",
                city: "Яковлевка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (42372) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Приморский край",
                city: "Чугуевка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (42373) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Приморский край",
                city: "Дальнегорск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (42374) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Приморский край",
                city: "Терней",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (42375) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Приморский край",
                city: "Кавалерово",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (42376) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Приморский край",
                city: "Ольга",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (42377) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Приморский край",
                city: "Лазо",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (424) ###-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Сахалинская область",
                city: "",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (4242) ##-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Сахалинская область",
                city: "Южно-Сахалинск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (42431) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Сахалинская область",
                city: "Поронайск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (42432) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Сахалинская область",
                city: "Углегорск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (42433) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Сахалинская область",
                city: "Холмск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (42434) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Сахалинская область",
                city: "Александровск-Сахалинский",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (42435) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Сахалинская область",
                city: "Корсаков",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (42436) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Сахалинская область",
                city: "Невельск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (42437) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Сахалинская область",
                city: "Оха",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (42441) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Сахалинская область",
                city: "Анива",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (42442) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Сахалинская область",
                city: "Долинск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (42443) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Сахалинская область",
                city: "Макаров",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (42444) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Сахалинская область",
                city: "Ноглики",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (42446) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Сахалинская область",
                city: "Томари",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (42447) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Сахалинская область",
                city: "Тымовское",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (42452) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Сахалинская область",
                city: "Смирных",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (42453) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Сахалинская область",
                city: "Северо-Курильск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (42454) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Сахалинская область",
                city: "Курильск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (42455) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Сахалинская область",
                city: "Южно-Курильск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (426) ###-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Еврейская автономная область",
                city: "",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (42622) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Еврейская автономная область",
                city: "Биробиджан",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (42632) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Еврейская автономная область",
                city: "Смидович",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (42663) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Еврейская автономная область",
                city: "Ленинское",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (42665) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Еврейская автономная область",
                city: "Амурзет",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (42666) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Еврейская автономная область",
                city: "Облучье",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (427) ###-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Чукотский автономный округ",
                city: "",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (42722) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Чукотский автономный округ",
                city: "Анадырь",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (42732) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Чукотский автономный округ",
                city: "Угольные Копи",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (42733) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Чукотский автономный округ",
                city: "Беринговский",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (42734) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Чукотский автономный округ",
                city: "Эгвекинот",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (42735) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Чукотский автономный округ",
                city: "Провидения",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (42736) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Чукотский автономный округ",
                city: "Лаврентия",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (42737) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Чукотский автономный округ",
                city: "Певек",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (42738) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Чукотский автономный округ",
                city: "Билибино",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (42739) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Чукотский автономный округ",
                city: "Мыс Шмидта",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (471) ###-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Курская область",
                city: "",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (4712) ##-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Курская область",
                city: "Курск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (47131) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Курская область",
                city: "Курчатов",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (47132) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Курская область",
                city: "Глушково",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (47133) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Курская область",
                city: "Горшечное",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (47134) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Курская область",
                city: "Пристень",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (47135) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Курская область",
                city: "Поныри",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (47136) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Курская область",
                city: "Большое Солдатское",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (47137) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Курская область",
                city: "Хомутовка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (47140) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Курская область",
                city: "Льгов",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (47141) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Курская область",
                city: "Обоянь",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (47142) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Курская область",
                city: "Прямицыно",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (47143) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Курская область",
                city: "Суджа",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (47144) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Курская область",
                city: "Фатеж",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (47145) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Курская область",
                city: "Щигры",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (47146) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Курская область",
                city: "Медвенка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (47147) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Курская область",
                city: "Коренево",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (47148) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Курская область",
                city: "Железногорск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (47149) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Курская область",
                city: "Белая",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (47150) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Курская область",
                city: "Дмитриев-Льговский",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (47151) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Курская область",
                city: "Золотухино",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (47152) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Курская область",
                city: "Рыльск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (47153) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Курская область",
                city: "Тим",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (47154) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Курская область",
                city: "Солнцево",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (47155) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Курская область",
                city: "Мантурово",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (47156) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Курская область",
                city: "Конышевка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (47157) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Курская область",
                city: "Касторное",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (47158) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Курская область",
                city: "Кшенский",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (47159) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Курская область",
                city: "Черемисиново",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (472) ###-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Белгородская область",
                city: "",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (4722) ##-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Белгородская область",
                city: "Белгород",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (47231) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Белгородская область",
                city: "Короча",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (47232) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Белгородская область",
                city: "Чернянка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (47233) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Белгородская область",
                city: "Новый Оскол",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (47234) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Белгородская область",
                city: "Алексеевка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (47235) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Белгородская область",
                city: "Волоконовка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (47236) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Белгородская область",
                city: "Валуйки",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (47237) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Белгородская область",
                city: "Вейделевка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (47238) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Белгородская область",
                city: "Ровеньки",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (47241) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Белгородская область",
                city: "Губкин",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (47242) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Белгородская область",
                city: "Прохоровка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (47243) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Белгородская область",
                city: "Ивня",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (47244) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Белгородская область",
                city: "Строитель",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (47245) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Белгородская область",
                city: "Ракитное",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (47246) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Белгородская область",
                city: "Борисовка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (47247) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Белгородская область",
                city: "Красногвардейское",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (47248) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Белгородская область",
                city: "Шебекино",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (4725) ##-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Белгородская область",
                city: "Старый Оскол",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (47261) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Белгородская область",
                city: "Грайворон",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (47262) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Белгородская область",
                city: "Красное",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (47263) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Белгородская область",
                city: "Красная Яруга",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (473) ###-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Воронежская область",
                city: "Воронеж",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (47340) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Воронежская область",
                city: "Рамонь",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (47341) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Воронежская область",
                city: "Новая Усмань",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (47342) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Воронежская область",
                city: "Каширское",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (47343) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Воронежская область",
                city: "Верхняя Хава",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (47344) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Воронежская область",
                city: "Панино",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (47345) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Воронежская область",
                city: "Эртиль",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (47346) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Воронежская область",
                city: "Анна",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (47347) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Воронежская область",
                city: "Терновка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (47348) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Воронежская область",
                city: "Грибановский",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (47350) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Воронежская область",
                city: "Бобров",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (47352) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Воронежская область",
                city: "Таловая",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (47353) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Воронежская область",
                city: "Новохоперск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (47354) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Воронежская область",
                city: "Борисоглебск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (47355) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Воронежская область",
                city: "Верхний Мамон",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (47356) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Воронежская область",
                city: "Воробьёвка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (47357) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Воронежская область",
                city: "Каменка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (47361) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Воронежская область",
                city: "Бутурлиновка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (47362) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Воронежская область",
                city: "Павловск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (47363) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Воронежская область",
                city: "Калач",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (47364) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Воронежская область",
                city: "Нововоронеж",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (47365) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Воронежская область",
                city: "Петропавловка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (47366) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Воронежская область",
                city: "Богучар",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (47367) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Воронежская область",
                city: "Кантемировка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (47370) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Воронежская область",
                city: "Нижнедевицк",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (47371) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Воронежская область",
                city: "Хохольский",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (47372) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Воронежская область",
                city: [ "Семилуки", "Семилукский район" ],
                operator: "",
                desc: ""
            }, {
                mask: "+7 (47374) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Воронежская область",
                city: "Репьевка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (47375) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Воронежская область",
                city: "Острогожск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (47376) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Воронежская область",
                city: "Поворино",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (47391) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Воронежская область",
                city: "Лиски",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (47394) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Воронежская область",
                city: "Подгоренский",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (47395) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Воронежская область",
                city: "Ольховатка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (47396) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Воронежская область",
                city: "Россошь",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (474) ###-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Липецкая область",
                city: "",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (4742) ##-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Липецкая область",
                city: "Липецк",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (47461) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Липецкая область",
                city: "Грязи",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (47462) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Липецкая область",
                city: "Добринка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (47463) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Липецкая область",
                city: "Доброе",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (47464) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Липецкая область",
                city: "Лев Толстой",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (47465) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Липецкая область",
                city: "Данков",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (47466) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Липецкая область",
                city: "Лебедянь",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (47467) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Липецкая область",
                city: "Елец",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (47468) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Липецкая область",
                city: "Долгоруково",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (47469) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Липецкая область",
                city: "Красное",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (47471) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Липецкая область",
                city: "Задонск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (47472) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Липецкая область",
                city: "Усмань",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (47473) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Липецкая область",
                city: "Волово",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (47474) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Липецкая область",
                city: "Тербуны",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (47475) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Липецкая область",
                city: "Чаплыгин",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (47476) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Липецкая область",
                city: "Становое",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (47477) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Липецкая область",
                city: "Хлевное",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (47478) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Липецкая область",
                city: "Измалково",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (475) ###-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Тамбовская область",
                city: "",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (4752) ##-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Тамбовская область",
                city: "Тамбов",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (47531) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Тамбовская область",
                city: "Рассказово",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (47532) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Тамбовская область",
                city: "Сосновка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (47533) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Тамбовская область",
                city: "Моршанск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (47534) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Тамбовская область",
                city: "Бондари",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (47535) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Тамбовская область",
                city: "Жердевка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (47536) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Тамбовская область",
                city: "Дмитриевка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (47537) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Тамбовская область",
                city: "Кирсанов",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (47541) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Тамбовская область",
                city: "Котовск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (47542) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Тамбовская область",
                city: "Мордово",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (47543) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Тамбовская область",
                city: "Староюрьево",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (47544) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Тамбовская область",
                city: "Петровское",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (47545) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Тамбовская область",
                city: "Мичуринск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (47546) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Тамбовская область",
                city: "Мучкапский",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (47548) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Тамбовская область",
                city: "Первомайский",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (47551) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Тамбовская область",
                city: "Гавриловка Вторая",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (47552) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Тамбовская область",
                city: "Знаменка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (47553) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Тамбовская область",
                city: "Инжавино",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (47554) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Тамбовская область",
                city: "Пичаево",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (47555) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Тамбовская область",
                city: "Ржакса",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (47556) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Тамбовская область",
                city: "Сатинка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (47557) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Тамбовская область",
                city: "Токарёвка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (47558) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Тамбовская область",
                city: "Уварово",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (47559) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Тамбовская область",
                city: "Умёт",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (481) ###-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Смоленская область",
                city: "",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (4812) ##-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Смоленская область",
                city: "Смоленск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48130) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Смоленская область",
                city: "Сычевка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48131) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Смоленская область",
                city: "Вязьма",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48132) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Смоленская область",
                city: "Велиж",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48133) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Смоленская область",
                city: "Шумячи",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48134) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Смоленская область",
                city: "Рославль",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48135) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Смоленская область",
                city: "Гагарин",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48136) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Смоленская область",
                city: "Тёмкино",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48137) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Смоленская область",
                city: "Угра",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48138) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Смоленская область",
                city: "Новодугино",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48139) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Смоленская область",
                city: "Холм-Жирковский",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48140) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Смоленская область",
                city: "Хиславичи",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48141) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Смоленская область",
                city: "Рудня",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48142) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Смоленская область",
                city: "Сафоново",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48143) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Смоленская область",
                city: "Ярцево",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48144) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Смоленская область",
                city: "Дорогобуж",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48145) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Смоленская область",
                city: "Красный",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48146) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Смоленская область",
                city: "Ельня",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48147) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Смоленская область",
                city: "Демидов",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48148) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Смоленская область",
                city: "Монастырщина",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48149) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Смоленская область",
                city: "Починок",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48153) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Смоленская область",
                city: "Десногорск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48155) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Смоленская область",
                city: "Ершичи",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48165) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Смоленская область",
                city: "Глинка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48166) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Смоленская область",
                city: "Духовщина",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48167) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Смоленская область",
                city: "Кардымово",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (482) ###-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Тверская область",
                city: "",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (4822) ##-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Тверская область",
                city: "Тверь",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48230) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Тверская область",
                city: "Пено",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48231) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Тверская область",
                city: "Бежецк",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48232) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Тверская область",
                city: "Ржев",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48233) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Тверская область",
                city: "Вышний Волочек",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48234) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Тверская область",
                city: "Кашин",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48235) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Тверская область",
                city: "Осташков",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48236) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Тверская область",
                city: "Кимры",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48237) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Тверская область",
                city: "Красный Холм",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48238) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Тверская область",
                city: "Бологое",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48239) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Тверская область",
                city: "Фирово",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48242) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Тверская область",
                city: "Конаково",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48244) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Тверская область",
                city: "Рамешки",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48246) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Тверская область",
                city: "Сонково",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48249) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Тверская область",
                city: "Калязин",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48250) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Тверская область",
                city: "Белый",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48251) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Тверская область",
                city: "Торжок",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48253) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Тверская область",
                city: "Максатиха",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48255) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Тверская область",
                city: "Удомля",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48257) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Тверская область",
                city: "Кувшиново",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48258) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Тверская область",
                city: "Оленино",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48261) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Тверская область",
                city: "Лихославль",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48262) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Тверская область",
                city: "Зубцов",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48263) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Тверская область",
                city: "Старица",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48264) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Тверская область",
                city: "Весьегонск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48265) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Тверская область",
                city: "Западная Двина",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48266) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Тверская область",
                city: "Нелидово",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48267) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Тверская область",
                city: "Андреаполь",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48268) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Тверская область",
                city: "Торопец",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48269) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Тверская область",
                city: "Селижарово",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48271) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Тверская область",
                city: "Лесное",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48272) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Тверская область",
                city: "Сандово",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48273) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Тверская область",
                city: "Жарковский",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48274) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Тверская область",
                city: "Кесова Гора",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48275) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Тверская область",
                city: "Молоково",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48276) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Тверская область",
                city: "Спирово",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (483) ###-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Брянская область",
                city: "",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (4832) ##-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Брянская область",
                city: [ "Брянск", "Сельцо", "Белые Берега" ],
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48330) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Брянская область",
                city: "Сураж",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48331) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Брянская область",
                city: "Рогнедино",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48332) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Брянская область",
                city: "Дубровка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48333) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Брянская область",
                city: [ "Дятьково", "Фокино" ],
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48334) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Брянская область",
                city: "Жуковка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48335) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Брянская область",
                city: "Карачев",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48336) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Брянская область",
                city: "Клинцы",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48338) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Брянская область",
                city: "Клетня",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48339) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Брянская область",
                city: "Мглин",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48340) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Брянская область",
                city: "Гордеевка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48341) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Брянская область",
                city: "Выгоничи",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48342) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Брянская область",
                city: "Навля",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48343) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Брянская область",
                city: "Новозыбков",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48344) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Брянская область",
                city: "Жирятино",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48345) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Брянская область",
                city: "Почеп",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48346) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Брянская область",
                city: "Красная Гора",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48347) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Брянская область",
                city: "Климово",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48348) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Брянская область",
                city: "Стародуб",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48349) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Брянская область",
                city: "Погар",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48351) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Брянская область",
                city: "Унеча",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48352) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Брянская область",
                city: "Трубчевск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48353) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Брянская область",
                city: "Суземка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48354) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Брянская область",
                city: "Локоть",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48355) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Брянская область",
                city: "Комаричи",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48356) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Брянская область",
                city: "Севск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48358) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Брянская область",
                city: "Злынка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (484) ###-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Калужская область",
                city: "",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (4842) ##-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Калужская область",
                city: "Калуга",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48431) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Калужская область",
                city: "Малоярославец",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48432) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Калужская область",
                city: "Жуков",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48433) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Калужская область",
                city: "Медынь",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48434) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Калужская область",
                city: "Кондрово",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48435) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Калужская область",
                city: "Таруса",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48436) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Калужская область",
                city: "Юхнов",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48437) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Калужская область",
                city: "Ферзиково",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48438)2-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Калужская область",
                city: "Балабаново",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48438)4-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Калужская область",
                city: "Боровск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48438)6-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Калужская область",
                city: "Балабаново",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48439) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Калужская область",
                city: "Обнинск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48441) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Калужская область",
                city: "Перемышль",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48442) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Калужская область",
                city: "Козельск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48443) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Калужская область",
                city: "Ульяново",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48444) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Калужская область",
                city: "Людиново",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48445) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Калужская область",
                city: "Жиздра",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48446) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Калужская область",
                city: "Мещовск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48447) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Калужская область",
                city: "Думиничи",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48448) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Калужская область",
                city: "Бабынино",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48449) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Калужская область",
                city: "Износки",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48451) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Калужская область",
                city: "Сухиничи",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48452) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Калужская область",
                city: "Мосальск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48453) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Калужская область",
                city: "Хвастовичи",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48454) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Калужская область",
                city: "Барятино",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48455) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Калужская область",
                city: "Спас-Деменск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48456) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Калужская область",
                city: "Киров",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48457) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Калужская область",
                city: "Бетлица",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (485) ###-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ярославская область",
                city: "",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (4852) ##-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ярославская область",
                city: "Ярославль",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48531) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ярославская область",
                city: "Некрасовское",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48532) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ярославская область",
                city: "Углич",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48533) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ярославская область",
                city: "Тутаев",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48534) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ярославская область",
                city: "Гаврилов Ям",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48535) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ярославская область",
                city: "Переславль-Залесский",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48536) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ярославская область",
                city: "Ростов",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48538) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ярославская область",
                city: "Данилов",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48539) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ярославская область",
                city: "Борисоглебский",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48542) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ярославская область",
                city: "Большое Село",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48543) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ярославская область",
                city: "Любим",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48544) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ярославская область",
                city: "Мышкин",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48545) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ярославская область",
                city: "Брейтово",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48546) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ярославская область",
                city: "Пошехонье",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48547) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ярославская область",
                city: "Новый Некоуз",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48549) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ярославская область",
                city: "Пречистое",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (4855) ##-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ярославская область",
                city: "Рыбинск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (486) ###-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Орловская область",
                city: "",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (4862) ##-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Орловская область",
                city: [ "Орёл", "Орловский район" ],
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48640) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Орловская область",
                city: "Болхов",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48642) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Орловская область",
                city: "Хотынец",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48643) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Орловская область",
                city: "Кромы",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48644) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Орловская область",
                city: "Шаблыкино",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48645) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Орловская область",
                city: "Змиевка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48646) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Орловская область",
                city: "Мценск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48647) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Орловская область",
                city: "Нарышкино",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48648) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Орловская область",
                city: "Залегощь",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48649) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Орловская область",
                city: "Дмитровск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48661) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Орловская область",
                city: "",
                operator: "МТС",
                desc: "мобильные телефоны с зоновыми номерами"
            }, {
                mask: "+7 (48662) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Орловская область",
                city: "Знаменское",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48663) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Орловская область",
                city: "Красная Заря",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48664) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Орловская область",
                city: "Покровское",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48665) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Орловская область",
                city: "Сосково",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48666) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Орловская область",
                city: "Тросна",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48667) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Орловская область",
                city: "Корсаково",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48672) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Орловская область",
                city: "Долгое",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48673) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Орловская область",
                city: "Новосиль",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48674) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Орловская область",
                city: "Колпны",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48675) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Орловская область",
                city: "Глазуновка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48676) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Орловская область",
                city: "Верховье",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48677) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Орловская область",
                city: "Ливны",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48678) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Орловская область",
                city: "Хомутово",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48679) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Орловская область",
                city: "Малоархангельск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (487) ###-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Тульская область",
                city: "",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (4872) ##-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Тульская область",
                city: "Тула",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48731) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Тульская область",
                city: "Узловая",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48732) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Тульская область",
                city: "Дубна",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48733) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Тульская область",
                city: "Арсеньево",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48734) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Тульская область",
                city: "Заокский",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48735) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Тульская область",
                city: "Кимовск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48736) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Тульская область",
                city: "Одоев",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48741) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Тульская область",
                city: "Ефремов",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48742) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Тульская область",
                city: "Белев",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48743) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Тульская область",
                city: "Куркино",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48744) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Тульская область",
                city: "Архангельское",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48745) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Тульская область",
                city: "Венев",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48746) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Тульская область",
                city: "Донской",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48751) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Тульская область",
                city: "Щекино",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48752) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Тульская область",
                city: "Плавск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48753) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Тульская область",
                city: "Алексин",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48754) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Тульская область",
                city: "Киреевск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48755) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Тульская область",
                city: "Тёплое",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48756) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Тульская область",
                city: "Чернь",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48761) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Тульская область",
                city: "Богородицк",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48762) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Тульская область",
                city: "Новомосковск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48763) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Тульская область",
                city: "Суворов",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48766) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Тульская область",
                city: "Ясногорск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48767) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Тульская область",
                city: "Ленинский",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (48768) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Тульская область",
                city: "Волово",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (491) ###-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Рязанская область",
                city: "",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (4912) ##-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Рязанская область",
                city: [ "Рязань", "Солотча" ],
                operator: "",
                desc: ""
            }, {
                mask: "+7 (49130) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Рязанская область",
                city: "Михайлов",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (49131) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Рязанская область",
                city: "Касимов",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (49132) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Рязанская область",
                city: "Ряжск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (49133) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Рязанская область",
                city: "Сасово",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (49135) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Рязанская область",
                city: "Спасск-Рязанский",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (49136) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Рязанская область",
                city: "Шилово",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (49137) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Рязанская область",
                city: "Рыбное",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (49138) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Рязанская область",
                city: "Чучково",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (49139) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Рязанская область",
                city: "Кадом",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (49141) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Рязанская область",
                city: "Новомичуринск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (49142) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Рязанская область",
                city: "Спас-Клепики",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (49143) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Рязанская область",
                city: "Кораблино",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (49144) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Рязанская область",
                city: "Ермишь",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (49145) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Рязанская область",
                city: "Пителино",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (49146) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Рязанская область",
                city: "Путятино",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (49147) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Рязанская область",
                city: "Шацк",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (49148) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Рязанская область",
                city: "Сараи",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (49151) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Рязанская область",
                city: "Старожилово",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (49152) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Рязанская область",
                city: "Сапожок",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (49153) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Рязанская область",
                city: "Захарово",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (49154) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Рязанская область",
                city: "Ухолово",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (49155) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Рязанская область",
                city: "Пронск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (49156) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Рязанская область",
                city: "Скопин",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (49157) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Рязанская область",
                city: "Милославское",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (49158) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Рязанская область",
                city: "Александро-Невский",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (492) ###-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Владимирская область",
                city: "",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (4922) ##-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Владимирская область",
                city: "Владимир",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (49231) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Владимирская область",
                city: "Суздаль",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (49232) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Владимирская область",
                city: "Ковров",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (49233) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Владимирская область",
                city: "Вязники",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (49234) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Владимирская область",
                city: "Муром",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (49235) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Владимирская область",
                city: "Судогда",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (49236) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Владимирская область",
                city: "Красная Горбатка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (49237) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Владимирская область",
                city: "Киржач",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (49238) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Владимирская область",
                city: "Гороховец",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (49241) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Владимирская область",
                city: "Гусь-Хрустальный",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (49242) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Владимирская область",
                city: "Собинка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (49243)2-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Владимирская область",
                city: "Петушки",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (49243)6-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Владимирская область",
                city: "Покров",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (49244) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Владимирская область",
                city: "Александров",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (49245) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Владимирская область",
                city: "Кольчугино",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (49246) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Владимирская область",
                city: "Юрьев-Польский",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (49247) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Владимирская область",
                city: "Меленки",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (49248) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Владимирская область",
                city: "Камешково",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (49254) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Владимирская область",
                city: "Радужный",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (493) ###-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ивановская область",
                city: "",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (4932) ##-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ивановская область",
                city: "Иваново",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (49331) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ивановская область",
                city: "Кинешма",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (49333) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ивановская область",
                city: "Заволжск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (49334) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ивановская область",
                city: "Палех",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (49336) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ивановская область",
                city: "Родники",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (49337) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ивановская область",
                city: "Юрьевец",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (49339) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ивановская область",
                city: "Приволжск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (49341) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ивановская область",
                city: "Фурманов",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (49343) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ивановская область",
                city: "Тейково",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (49344) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ивановская область",
                city: "Лух",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (49345) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ивановская область",
                city: "Пучеж",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (49346) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ивановская область",
                city: "Пестяки",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (49347) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ивановская область",
                city: "Южа",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (49349) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ивановская область",
                city: "Верхний Ландех",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (49351) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ивановская область",
                city: "Шуя",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (49352) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ивановская область",
                city: "Комсомольск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (49353) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ивановская область",
                city: "Ильинское-Хованское",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (49354) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ивановская область",
                city: "Вичуга",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (49355) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ивановская область",
                city: "Гаврилов Посад",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (49356) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ивановская область",
                city: "Савино",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (49357) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ивановская область",
                city: "Лежнево",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (494) ###-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Костромская область",
                city: "",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (4942) ##-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Костромская область",
                city: "Кострома",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (49430) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Костромская область",
                city: "Антропово",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (49431) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Костромская область",
                city: "Нерехта",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (49432) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Костромская область",
                city: "Красное-на-Волге",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (49433) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Костромская область",
                city: "Судиславль",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (49434) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Костромская область",
                city: "Сусанино",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (49435) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Костромская область",
                city: "Буй",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (49436) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Костромская область",
                city: "Солигалич",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (49437) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Костромская область",
                city: "Галич",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (49438) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Костромская область",
                city: "Островское",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (49439) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Костромская область",
                city: "Павино",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (49440) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Костромская область",
                city: "Парфеньево",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (49441) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Костромская область",
                city: "Чухлома",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (49442) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Костромская область",
                city: "Кадый",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (49443) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Костромская область",
                city: "Кологрив",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (49444) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Костромская область",
                city: "Нея",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (49445) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Костромская область",
                city: "Макарьев",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (49446) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Костромская область",
                city: "Мантурово",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (49447) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Костромская область",
                city: "Георгиевское",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (49448) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Костромская область",
                city: "Поназырево",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (49449) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Костромская область",
                city: "Шарья",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (49450) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Костромская область",
                city: "Вохма",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (49451) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Костромская область",
                city: "Боговарово",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (49452) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Костромская область",
                city: "Пыщуг",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (49453) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Костромская область",
                city: "Волгореченск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (495) ###-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Москва и ближнее Подмосковье",
                city: "",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (495)323-8#-##",
                cc: "RU",
                cd: "Russia",
                region: "Москва и ближнее Подмосковье",
                city: "Аэропорт Домодедово",
                operator: "ЦентрТелеком",
                desc: ""
            }, {
                mask: "+7 (495)323-9#-##",
                cc: "RU",
                cd: "Russia",
                region: "Москва и ближнее Подмосковье",
                city: "Аэропорт Домодедово",
                operator: "ЦентрТелеком",
                desc: ""
            }, {
                mask: "+7 (495)338-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Москва и ближнее Подмосковье",
                city: "Мосрентген",
                operator: "МГТС",
                desc: "часть номеров АТС"
            }, {
                mask: "+7 (495)339-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Москва и ближнее Подмосковье",
                city: "Мосрентген",
                operator: "МГТС",
                desc: "часть номеров АТС"
            }, {
                mask: "+7 (495)355-9#-##",
                cc: "RU",
                cd: "Russia",
                region: "Москва и ближнее Подмосковье",
                city: "Развилка",
                operator: "ОАО «Газпромсвязь»",
                desc: ""
            }, {
                mask: "+7 (495)408-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Москва и ближнее Подмосковье",
                city: "Долгопрудный",
                operator: "ЦентрТелеком",
                desc: ""
            }, {
                mask: "+7 (495)439-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Москва и ближнее Подмосковье",
                city: "Московский",
                operator: "ЦентрТелеком",
                desc: "часть номеров АТС"
            }, {
                mask: "+7 (495)50#-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Москва и ближнее Подмосковье",
                city: "Люберцы",
                operator: "ЦентрТелеком",
                desc: ""
            }, {
                mask: "+7 (495)500-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Москва и ближнее Подмосковье",
                city: "Москва",
                operator: [ "Мегафон", "Центральный Телеграф" ],
                desc: ""
            }, {
                mask: "+7 (495)51#-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Москва и ближнее Подмосковье",
                city: [ "Королёв", "Юбилейный" ],
                operator: "ЦентрТелеком",
                desc: ""
            }, {
                mask: "+7 (495)52#-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Москва и ближнее Подмосковье",
                city: [ "Балашиха", "Железнодорожный", "Реутов" ],
                operator: "ЦентрТелеком",
                desc: ""
            }, {
                mask: "+7 (495)541-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Москва и ближнее Подмосковье",
                city: "Видное",
                operator: "ЦентрТелеком",
                desc: ""
            }, {
                mask: "+7 (495)542-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Москва и ближнее Подмосковье",
                city: "Москва",
                operator: [ "Мегафон", "Центральный Телеграф" ],
                desc: ""
            }, {
                mask: "+7 (495)543-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Москва и ближнее Подмосковье",
                city: "Москва",
                operator: [ "Мегафон", "Центральный Телеграф" ],
                desc: ""
            }, {
                mask: "+7 (495)544-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Москва и ближнее Подмосковье",
                city: "Москва",
                operator: [ "Мегафон", "Центральный Телеграф" ],
                desc: ""
            }, {
                mask: "+7 (495)545-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Москва и ближнее Подмосковье",
                city: "Москва",
                operator: [ "Мегафон", "Центральный Телеграф" ],
                desc: ""
            }, {
                mask: "+7 (495)546-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Москва и ближнее Подмосковье",
                city: "Москва",
                operator: "Ростелеком",
                desc: ""
            }, {
                mask: "+7 (495)546-1#-##",
                cc: "RU",
                cd: "Russia",
                region: "Москва и ближнее Подмосковье",
                city: "Домодедово",
                operator: "Ростелеком",
                desc: ""
            }, {
                mask: "+7 (495)546-6#-##",
                cc: "RU",
                cd: "Russia",
                region: "Москва и ближнее Подмосковье",
                city: [ "Видное", "Развилка" ],
                operator: "Ростелеком",
                desc: ""
            }, {
                mask: "+7 (495)546-8#-##",
                cc: "RU",
                cd: "Russia",
                region: "Москва и ближнее Подмосковье",
                city: "Домодедово",
                operator: "Ростелеком",
                desc: ""
            }, {
                mask: "+7 (495)548-0#-##",
                cc: "RU",
                cd: "Russia",
                region: "Москва и ближнее Подмосковье",
                city: "Видное",
                operator: "ЦентрТелеком",
                desc: ""
            }, {
                mask: "+7 (495)548-1#-##",
                cc: "RU",
                cd: "Russia",
                region: "Москва и ближнее Подмосковье",
                city: "Видное",
                operator: "ЦентрТелеком",
                desc: ""
            }, {
                mask: "+7 (495)548-4#-##",
                cc: "RU",
                cd: "Russia",
                region: "Москва и ближнее Подмосковье",
                city: "Видное",
                operator: "ЦентрТелеком",
                desc: ""
            }, {
                mask: "+7 (495)548-5#-##",
                cc: "RU",
                cd: "Russia",
                region: "Москва и ближнее Подмосковье",
                city: "Видное",
                operator: "ЦентрТелеком",
                desc: ""
            }, {
                mask: "+7 (495)548-6#-##",
                cc: "RU",
                cd: "Russia",
                region: "Москва и ближнее Подмосковье",
                city: "Поселок совхоза им. Ленина",
                operator: "ЦентрТелеком",
                desc: ""
            }, {
                mask: "+7 (495)548-7#-##",
                cc: "RU",
                cd: "Russia",
                region: "Москва и ближнее Подмосковье",
                city: [ "Поселок совхоза им. Ленина", "Поселок Володарского", "Горки Ленинские" ],
                operator: "ЦентрТелеком",
                desc: ""
            }, {
                mask: "+7 (495)548-8#-##",
                cc: "RU",
                cd: "Russia",
                region: "Москва и ближнее Подмосковье",
                city: [ "Поселок Володарского", "Горки Ленинские" ],
                operator: "ЦентрТелеком",
                desc: ""
            }, {
                mask: "+7 (495)548-9#-##",
                cc: "RU",
                cd: "Russia",
                region: "Москва и ближнее Подмосковье",
                city: "Видное",
                operator: "ЦентрТелеком",
                desc: "промзона"
            }, {
                mask: "+7 (495)549-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Москва и ближнее Подмосковье",
                city: [ "Видное", "Московский", "пос. Ново-Дрожжино", "пос. Измайлово", "пос. Булатниково", "пос. Дубровский", "пос. Института Садоводства" ],
                operator: "ЦентрТелеком",
                desc: ""
            }, {
                mask: "+7 (495)55#-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Москва и ближнее Подмосковье",
                city: "Люберцы",
                operator: "ЦентрТелеком",
                desc: ""
            }, {
                mask: "+7 (495)552-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Москва и ближнее Подмосковье",
                city: "Лыткарино",
                operator: "ЦентрТелеком",
                desc: ""
            }, {
                mask: "+7 (495)555-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Москва и ближнее Подмосковье",
                city: "Лыткарино",
                operator: "ЦентрТелеком",
                desc: ""
            }, {
                mask: "+7 (495)56#-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Москва и ближнее Подмосковье",
                city: "Красногорск",
                operator: "ЦентрТелеком",
                desc: ""
            }, {
                mask: "+7 (495)57#-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Москва и ближнее Подмосковье",
                city: [ "Королёв", "Мытищи", "Юбилейный" ],
                operator: "ЦентрТелеком",
                desc: ""
            }, {
                mask: "+7 (495)573-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Москва и ближнее Подмосковье",
                city: "Химки",
                operator: "ЦентрТелеком",
                desc: ""
            }, {
                mask: "+7 (495)576-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Москва и ближнее Подмосковье",
                city: "Долгопрудный",
                operator: "ЦентрТелеком",
                desc: ""
            }, {
                mask: "+7 (495)577-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Москва и ближнее Подмосковье",
                city: "Лобня",
                operator: "ЦентрТелеком",
                desc: ""
            }, {
                mask: "+7 (495)578-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Москва и ближнее Подмосковье",
                city: [ "Лобня", "Международный аэропорт «Шереметьево»" ],
                operator: "Порт-Телеком",
                desc: ""
            }, {
                mask: "+7 (495)579-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Москва и ближнее Подмосковье",
                city: [ "Долгопрудный", "Лобня" ],
                operator: "",
                desc: ""
            }, {
                mask: "+7 (495)58#-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Москва и ближнее Подмосковье",
                city: "Химки",
                operator: "ЦентрТелеком",
                desc: ""
            }, {
                mask: "+7 (495)585-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Москва и ближнее Подмосковье",
                city: "Москва",
                operator: [ "Мегафон", "Центральный Телеграф" ],
                desc: ""
            }, {
                mask: "+7 (495)589-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Москва и ближнее Подмосковье",
                city: "Москва",
                operator: [ "Мегафон", "Центральный Телеграф" ],
                desc: ""
            }, {
                mask: "+7 (495)59#-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Москва и ближнее Подмосковье",
                city: "Одинцово",
                operator: "ЦентрТелеком",
                desc: ""
            }, {
                mask: "+7 (495)597-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Москва и ближнее Подмосковье",
                city: "Москва",
                operator: [ "Центральный Телеграф", "ЦентрТелеком" ],
                desc: ""
            }, {
                mask: "+7 (496) ###-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Московская область",
                city: "",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (496)20#-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Московская область",
                city: "Талдом",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (496)21#-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Московская область",
                city: "Дубна",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (496)22#-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Московская область",
                city: "Дмитров",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (496)24#-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Московская область",
                city: "Клин",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (496)25#-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Московская область",
                city: "Щёлковский район",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (496)26#-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Московская область",
                city: "Солнечногорск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (496)27#-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Московская область",
                city: "Руза",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (496)28#-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Московская область",
                city: "Лотошино",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (496)30#-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Московская область",
                city: "ЗАО Калита-Телеком",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (496)31#-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Московская область",
                city: "Истра",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (496)34#-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Московская область",
                city: "Наро-Фоминск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (496)36#-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Московская область",
                city: "Волоколамск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (496)37#-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Московская область",
                city: "Шаховская",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (496)38#-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Московская область",
                city: "Можайск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (496)40#-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Московская область",
                city: "Егорьевск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (496)41#-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Московская область",
                city: "Орехово-Зуево",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (496)42#-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Московская область",
                city: "Орехово-Зуево",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (496)43#-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Московская область",
                city: "Павловский Посад",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (496)44#-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Московская область",
                city: "Воскресенск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (496)45#-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Московская область",
                city: "Шатура",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (496)46#-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Московская область",
                city: "Раменское",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (496)51#-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Московская область",
                city: "Ногинск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (496)52#-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Московская область",
                city: "Черноголовка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (496)53#-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Московская область",
                city: "Пушкино",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (496)54#-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Московская область",
                city: "Сергиев Посад",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (496)55#-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Московская область",
                city: "Сергиев Посад",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (496)56#-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Московская область",
                city: "Щелково",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (496)57#-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Московская область",
                city: "Электросталь",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (496)61#-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Московская область",
                city: "Коломна",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (496)63#-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Московская область",
                city: "Луховицы",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (496)64#-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Московская область",
                city: "Ступино",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (496)66#-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Московская область",
                city: "Зарайск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (496)67#-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Московская область",
                city: "Серебряные Пруды",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (496)69#-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Московская область",
                city: "Кашира",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (496)70#-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Московская область",
                city: "Озеры",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (496)72#-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Московская область",
                city: "Чехов",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (496)73#-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Московская область",
                city: "Серпухов",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (496)75#-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Московская область",
                city: "Подольск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (496)76#-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Московская область",
                city: "Подольск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (496)77#-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Московская область",
                city: "Серпухов",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (496)79#-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Московская область",
                city: "Домодедово",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (498) ###-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Лесопарковый защитный пояс Москвы",
                city: "",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (498)48#-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Лесопарковый защитный пояс Москвы",
                city: "Жуковский",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (498)54#-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Лесопарковый защитный пояс Москвы",
                city: [ "Видное", "Ленинский район" ],
                operator: "ЦентрТелеком",
                desc: ""
            }, {
                mask: "+7 (498)617-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Лесопарковый защитный пояс Москвы",
                city: [ "Газопровод", "Коммунарка" ],
                operator: "ЗАО «Газтелеком»",
                desc: "Ленинский район"
            }, {
                mask: "+7 (498)657-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Лесопарковый защитный пояс Москвы",
                city: "Развилка",
                operator: "ООО «Газпром связь»",
                desc: "Ленинский район"
            }, {
                mask: "+7 (498)664-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Лесопарковый защитный пояс Москвы",
                city: "Железнодорожный",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (498)68#-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Лесопарковый защитный пояс Москвы",
                city: "Лобня",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (498)713-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Лесопарковый защитный пояс Москвы",
                city: "Долгопрудный",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (498)744-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Лесопарковый защитный пояс Москвы",
                city: "Долгопрудный",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (499) ###-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Москва",
                city: "",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (499)39#-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Москва",
                city: "Москва",
                operator: "МегаФон",
                desc: ""
            }, {
                mask: "+7 (499)50#-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Москва",
                city: "Москва",
                operator: "Центральный Телеграф",
                desc: ""
            }, {
                mask: "+7 (499)755-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Москва",
                city: "Москва",
                operator: "МегаФон",
                desc: ""
            }, {
                mask: "+7 (811) ###-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Псковская область",
                city: "",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (8112) ##-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Псковская область",
                city: "Псков",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81131) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Псковская область",
                city: "Гдов",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81132) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Псковская область",
                city: "Струги Красные",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81133) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Псковская область",
                city: "Плюсса",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81134) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Псковская область",
                city: "Порхов",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81135) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Псковская область",
                city: "Дно",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81136) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Псковская область",
                city: "Дедовичи",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81137) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Псковская область",
                city: "Красногородск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81138) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Псковская область",
                city: "Опочка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81139) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Псковская область",
                city: "Локня",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81140) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Псковская область",
                city: "Себеж",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81141) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Псковская область",
                city: "Бежаницы",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81142) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Псковская область",
                city: "Пустошка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81143) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Псковская область",
                city: "Новоржев",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81144) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Псковская область",
                city: "Новосокольники",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81145) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Псковская область",
                city: "Палкино",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81146) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Псковская область",
                city: "Пушкинские Горы",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81147) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Псковская область",
                city: "Пыталово",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81148) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Псковская область",
                city: "Печоры",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81149) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Псковская область",
                city: "Кунья",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81150) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Псковская область",
                city: "Усвяты",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81151) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Псковская область",
                city: "Невель",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81152) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Псковская область",
                city: "Остров",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81153) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Псковская область",
                city: "Великие Луки",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (812) ###-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Санкт-Петербург",
                city: "",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (813) ###-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ленинградская область",
                city: "",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81361) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ленинградская область",
                city: "Тосно",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81362) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ленинградская область",
                city: [ "Кировск", "Шлиссельбург" ],
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81363) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ленинградская область",
                city: [ "Волхов", "Новая Ладога", "Сясьстрой" ],
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81364) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ленинградская область",
                city: "Лодейное Поле",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81365) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ленинградская область",
                city: "Подпорожье",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81366) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ленинградская область",
                city: [ "Бокситогорск", "Пикалёво" ],
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81367) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ленинградская область",
                city: "Тихвин",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81368) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ленинградская область",
                city: [ "Кириши", "Будогощь" ],
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81369) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ленинградская область",
                city: "Сосновый Бор",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81370) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ленинградская область",
                city: [ "Всеволожск", "Токсово" ],
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81371) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ленинградская область",
                city: [ "Гатчина", "Вырица", "Коммунар" ],
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81372) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ленинградская область",
                city: "Луга",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81373) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ленинградская область",
                city: "Волосово",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81374) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ленинградская область",
                city: "Сланцы",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81375) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ленинградская область",
                city: [ "Кингисепп", "Ивангород" ],
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81376) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ленинградская область",
                city: "Ломоносов",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81378) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ленинградская область",
                city: [ "Выборг", "Высоцк", "Приморск", "Светогорск" ],
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81379) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ленинградская область",
                city: "Приозерск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (814) ###-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Карелия",
                city: "",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (8142) ##-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Карелия",
                city: "Петрозаводск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81430) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Карелия",
                city: "Сортавала",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81430)3-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Карелия",
                city: "Вяртсиля",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81430)3-1#-##",
                cc: "RU",
                cd: "Russia",
                region: "Карелия",
                city: "Хелюля",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81430)3-3#-##",
                cc: "RU",
                cd: "Russia",
                region: "Карелия",
                city: "Рускеала",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81430)3-4#-##",
                cc: "RU",
                cd: "Russia",
                region: "Карелия",
                city: "Пуйккола",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81430)3-5#-##",
                cc: "RU",
                cd: "Russia",
                region: "Карелия",
                city: "Хаапалампи",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81430)3-6#-##",
                cc: "RU",
                cd: "Russia",
                region: "Карелия",
                city: "Кааламо",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81430)3-7#-##",
                cc: "RU",
                cd: "Russia",
                region: "Карелия",
                city: [ "Заозёрный", "Ламберг", "Сортавала", "Хюмпеля" ],
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81431) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Карелия",
                city: "Сегежа",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81431)3-0#-##",
                cc: "RU",
                cd: "Russia",
                region: "Карелия",
                city: "Кочкома",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81431)3-1#-##",
                cc: "RU",
                cd: "Russia",
                region: "Карелия",
                city: [ "Олений", "Пертозеро", "Черный Порог" ],
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81431)3-2#-##",
                cc: "RU",
                cd: "Russia",
                region: "Карелия",
                city: "Валдай",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81431)3-3#-##",
                cc: "RU",
                cd: "Russia",
                region: "Карелия",
                city: [ "Волдозеро", "Идель", "Кяргозеро", "Попов Порог" ],
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81431)3-6#-##",
                cc: "RU",
                cd: "Russia",
                region: "Карелия",
                city: "Каменный Бор",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81431)3-7#-##",
                cc: "RU",
                cd: "Russia",
                region: "Карелия",
                city: "Полга",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81431)3-8#-##",
                cc: "RU",
                cd: "Russia",
                region: "Карелия",
                city: "Надвоицы",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81433) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Карелия",
                city: "Питкяранта",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81433)2-4#-##",
                cc: "RU",
                cd: "Russia",
                region: "Карелия",
                city: [ "Ляскеля", "Рауталахти", "Харлу", "Хийденсельга" ],
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81433)2-5#-##",
                cc: "RU",
                cd: "Russia",
                region: "Карелия",
                city: [ "Ряймяля", "Салми" ],
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81433)2-6#-##",
                cc: "RU",
                cd: "Russia",
                region: "Карелия",
                city: "Импилахти",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81433)2-7#-##",
                cc: "RU",
                cd: "Russia",
                region: "Карелия",
                city: [ "Леппясилта", "Уукса" ],
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81434) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Карелия",
                city: "Медвежьегорск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81434)3-3#-##",
                cc: "RU",
                cd: "Russia",
                region: "Карелия",
                city: "Толвуя",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81434)3-4#-##",
                cc: "RU",
                cd: "Russia",
                region: "Карелия",
                city: "Шуньга",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81434)3-5#-##",
                cc: "RU",
                cd: "Russia",
                region: "Карелия",
                city: [ "Великая Губа", "Великая Нива", "Кижи", "Космозеро", "Ламбасручей", "Сенная Губа" ],
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81434)3-8#-##",
                cc: "RU",
                cd: "Russia",
                region: "Карелия",
                city: [ "Кумса", "Лавас Губа", "Лумбуши", "Чебино" ],
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81434)3-9#-##",
                cc: "RU",
                cd: "Russia",
                region: "Карелия",
                city: [ "Волозеро", "Габсельга", "Сосновка", "Челмужи" ],
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81434)4-2#-##",
                cc: "RU",
                cd: "Russia",
                region: "Карелия",
                city: [ "Огорелыши", "Сергиево" ],
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81434)4-3#-##",
                cc: "RU",
                cd: "Russia",
                region: "Карелия",
                city: "Повенец",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81434)4-4#-##",
                cc: "RU",
                cd: "Russia",
                region: "Карелия",
                city: "Пиндуши",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81434)4-7#-##",
                cc: "RU",
                cd: "Russia",
                region: "Карелия",
                city: "Паданы",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81436) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Карелия",
                city: "Олонец",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81436)2-3#-##",
                cc: "RU",
                cd: "Russia",
                region: "Карелия",
                city: "Ильинский",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81436)2-4#-##",
                cc: "RU",
                cd: "Russia",
                region: "Карелия",
                city: [ "Верхний Олонец", "Ковера", "Речная Сельга", "Сяндеба", "Тулокса" ],
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81436)2-5#-##",
                cc: "RU",
                cd: "Russia",
                region: "Карелия",
                city: "Михайловское",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81436)2-6#-##",
                cc: "RU",
                cd: "Russia",
                region: "Карелия",
                city: [ "Алексала", "Мегрега", "Рыпушкалица", "Тукса" ],
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81436)2-7#-##",
                cc: "RU",
                cd: "Russia",
                region: "Карелия",
                city: "Видлица",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81436)2-8#-##",
                cc: "RU",
                cd: "Russia",
                region: "Карелия",
                city: "Коткозеро",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81436)2-9#-##",
                cc: "RU",
                cd: "Russia",
                region: "Карелия",
                city: "Куйтежа",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81437) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Карелия",
                city: "Беломорск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81437)3-0#-##",
                cc: "RU",
                cd: "Russia",
                region: "Карелия",
                city: "Сумский Посад",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81437)3-4#-##",
                cc: "RU",
                cd: "Russia",
                region: "Карелия",
                city: "Золотец",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81437)3-5#-##",
                cc: "RU",
                cd: "Russia",
                region: "Карелия",
                city: [ "Колежма", "Лапино", "Лехта", "Маленьга", "Новое Машозеро", "Нюхча", "Тунгуза", "Хвойный", "Шуерецкое" ],
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81437)3-6#-##",
                cc: "RU",
                cd: "Russia",
                region: "Карелия",
                city: "Сосновец",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81437)3-7#-##",
                cc: "RU",
                cd: "Russia",
                region: "Карелия",
                city: "Лесобиржа",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81437)3-8#-##",
                cc: "RU",
                cd: "Russia",
                region: "Карелия",
                city: [ "Вирандозеро", "Летнереченский" ],
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81437)3-9#-##",
                cc: "RU",
                cd: "Russia",
                region: "Карелия",
                city: "Пушной",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81439) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Карелия",
                city: "Лоухи",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81439)2-6#-##",
                cc: "RU",
                cd: "Russia",
                region: "Карелия",
                city: "Кестеньга",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81439)2-7#-##",
                cc: "RU",
                cd: "Russia",
                region: "Карелия",
                city: [ "Софпорог", "Тунгозеро" ],
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81439)2-8#-##",
                cc: "RU",
                cd: "Russia",
                region: "Карелия",
                city: "Пяозерский",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81439)3-3#-##",
                cc: "RU",
                cd: "Russia",
                region: "Карелия",
                city: [ "Амбарный", "Плотина", "Сосновый", "Энгозеро" ],
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81439)4-1#-##",
                cc: "RU",
                cd: "Russia",
                region: "Карелия",
                city: "Чупа",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81439)4-4#-##",
                cc: "RU",
                cd: "Russia",
                region: "Карелия",
                city: "Чкаловский",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81439)45#-##",
                cc: "RU",
                cd: "Russia",
                region: "Карелия",
                city: "Тэдино",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81450) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Карелия",
                city: "Лахденпохья",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81450)2-3#-##",
                cc: "RU",
                cd: "Russia",
                region: "Карелия",
                city: [ "Ихала", "Мийнала", "Яккима" ],
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81450)2-4#-##",
                cc: "RU",
                cd: "Russia",
                region: "Карелия",
                city: [ "Куркиёки", "Хийтола" ],
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81450)2-6#-##",
                cc: "RU",
                cd: "Russia",
                region: "Карелия",
                city: "Элисенваара",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81451) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Карелия",
                city: "Кондопога",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81451)2-4#-##",
                cc: "RU",
                cd: "Russia",
                region: "Карелия",
                city: "Кедрозеро",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81451)3-1#-##",
                cc: "RU",
                cd: "Russia",
                region: "Карелия",
                city: [ "Гирвас", "Тивдия", "Эльмус" ],
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81451)3-2#-##",
                cc: "RU",
                cd: "Russia",
                region: "Карелия",
                city: "Спасская Губа",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81451)3-3#-##",
                cc: "RU",
                cd: "Russia",
                region: "Карелия",
                city: [ "Кивач", "Новинка" ],
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81451)3-4#-##",
                cc: "RU",
                cd: "Russia",
                region: "Карелия",
                city: [ "Кяпесельга", "Нелгомозеро" ],
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81451)3-5#-##",
                cc: "RU",
                cd: "Russia",
                region: "Карелия",
                city: "Кончезеро",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81451)3-7#-##",
                cc: "RU",
                cd: "Russia",
                region: "Карелия",
                city: "Берёзовка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81451)3-9#-##",
                cc: "RU",
                cd: "Russia",
                region: "Карелия",
                city: [ "Суна", "Янишполе" ],
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81452) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Карелия",
                city: "Пудож",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81452)2-3#-##",
                cc: "RU",
                cd: "Russia",
                region: "Карелия",
                city: [ "Бочилово", "Каршево", "Колово", "Колодозеро", "Семёново" ],
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81452)2-4#-##",
                cc: "RU",
                cd: "Russia",
                region: "Карелия",
                city: [ "Водла", "Кубово", "Онежский", "Рагнукса" ],
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81452)2-5#-##",
                cc: "RU",
                cd: "Russia",
                region: "Карелия",
                city: [ "Кривцы", "Приречный" ],
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81452)2-6#-##",
                cc: "RU",
                cd: "Russia",
                region: "Карелия",
                city: "Авдеево",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81452)2-7#-##",
                cc: "RU",
                cd: "Russia",
                region: "Карелия",
                city: "Подпорожье",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81452)2-8#-##",
                cc: "RU",
                cd: "Russia",
                region: "Карелия",
                city: "Шала",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81452)2-9#-##",
                cc: "RU",
                cd: "Russia",
                region: "Карелия",
                city: "Пяльма",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81454) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Карелия",
                city: "Калевала",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81454)5-3#-##",
                cc: "RU",
                cd: "Russia",
                region: "Карелия",
                city: "Кепа",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81454)5-4#-##",
                cc: "RU",
                cd: "Russia",
                region: "Карелия",
                city: "Юшкозеро",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81454)5-7#-##",
                cc: "RU",
                cd: "Russia",
                region: "Карелия",
                city: [ "Войница", "Куусиниеми", "Луусалми" ],
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81455) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Карелия",
                city: "Муезерский",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81455)2-3#-##",
                cc: "RU",
                cd: "Russia",
                region: "Карелия",
                city: "Тикша",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81455)2-4#-##",
                cc: "RU",
                cd: "Russia",
                region: "Карелия",
                city: "Реболы",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81455)2-5#-##",
                cc: "RU",
                cd: "Russia",
                region: "Карелия",
                city: "Ригозеро",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81455)2-6#-##",
                cc: "RU",
                cd: "Russia",
                region: "Карелия",
                city: [ "Волома", "Пенинга" ],
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81455)2-7#-##",
                cc: "RU",
                cd: "Russia",
                region: "Карелия",
                city: "Суккозеро",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81455)2-8#-##",
                cc: "RU",
                cd: "Russia",
                region: "Карелия",
                city: "Ледмозеро",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81455)2-9#-##",
                cc: "RU",
                cd: "Russia",
                region: "Карелия",
                city: "Лендеры",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81456) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Карелия",
                city: "Пряжа",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81456)2-3#-##",
                cc: "RU",
                cd: "Russia",
                region: "Карелия",
                city: [ "Вилла Гора", "Соддер", "Сяпся", "Эссойла" ],
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81456)2-4#-##",
                cc: "RU",
                cd: "Russia",
                region: "Карелия",
                city: [ "Ведлозеро", "Кинелахта", "Койвусельга", "Колатсельга", "Савиново" ],
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81456)2-5#-##",
                cc: "RU",
                cd: "Russia",
                region: "Карелия",
                city: "Чална",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81456)2-6#-##",
                cc: "RU",
                cd: "Russia",
                region: "Карелия",
                city: "Матросы",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81456)2-7#-##",
                cc: "RU",
                cd: "Russia",
                region: "Карелия",
                city: "Верхние Важины",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81456)2-8#-##",
                cc: "RU",
                cd: "Russia",
                region: "Карелия",
                city: "Крошнозеро",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81456)2-9#-##",
                cc: "RU",
                cd: "Russia",
                region: "Карелия",
                city: "Святозеро",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81457) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Карелия",
                city: "Суоярви",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81457)2-3#-##",
                cc: "RU",
                cd: "Russia",
                region: "Карелия",
                city: "Лахколамби",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81457)2-4#-##",
                cc: "RU",
                cd: "Russia",
                region: "Карелия",
                city: "Поросозеро",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81457)2-5#-##",
                cc: "RU",
                cd: "Russia",
                region: "Карелия",
                city: "Найстеньярви",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81457)2-6#-##",
                cc: "RU",
                cd: "Russia",
                region: "Карелия",
                city: [ "Вегарус", "Суоёки", "Тойвола", "Хаутоваара" ],
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81457)2-7#-##",
                cc: "RU",
                cd: "Russia",
                region: "Карелия",
                city: [ "Вешкелица", "Лоймола", "Пийтсиёки" ],
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81457)2-9#-##",
                cc: "RU",
                cd: "Russia",
                region: "Карелия",
                city: [ "Леппясюрья", "Райконкоски", "Суйстамо" ],
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81457)3-6#-##",
                cc: "RU",
                cd: "Russia",
                region: "Карелия",
                city: "Леппяниеми",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81458) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Карелия",
                city: "Кемь",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81458)3-1#-##",
                cc: "RU",
                cd: "Russia",
                region: "Карелия",
                city: "Калгалакша",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81458)3-2#-##",
                cc: "RU",
                cd: "Russia",
                region: "Карелия",
                city: [ "Панозеро", "Поньгома" ],
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81458)3-4#-##",
                cc: "RU",
                cd: "Russia",
                region: "Карелия",
                city: [ "Авнепорог", "Кривой Порог" ],
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81458)3-5#-##",
                cc: "RU",
                cd: "Russia",
                region: "Карелия",
                city: "Рабочеостровск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81458)3-6#-##",
                cc: "RU",
                cd: "Russia",
                region: "Карелия",
                city: "Шомба",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81458)3-7#-##",
                cc: "RU",
                cd: "Russia",
                region: "Карелия",
                city: "Кузема",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81458)3-8#-##",
                cc: "RU",
                cd: "Russia",
                region: "Карелия",
                city: "Баб-Губа",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81458)3-9#-##",
                cc: "RU",
                cd: "Russia",
                region: "Карелия",
                city: "Сокол",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81459) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Карелия",
                city: "Костомукша",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81459)9-3#-##",
                cc: "RU",
                cd: "Russia",
                region: "Карелия",
                city: "Контокки",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81459)9-5#-##",
                cc: "RU",
                cd: "Russia",
                region: "Карелия",
                city: "Вокнаволок",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (815) ###-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Мурманская область",
                city: "",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (8152) ##-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Мурманская область",
                city: "Мурманск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81530) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Мурманская область",
                city: "Снежногорск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81531) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Мурманская область",
                city: "Кировск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81532) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Мурманская область",
                city: "Полярные Зори",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81533) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Мурманская область",
                city: "Кандалакша",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81535) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Мурманская область",
                city: "Ковдор",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81536) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Мурманская область",
                city: "Мончегорск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81537) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Мурманская область",
                city: "Североморск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81538) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Мурманская область",
                city: "Ловозеро",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81539) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Мурманская область",
                city: "Гаджиево",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81551) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Мурманская область",
                city: "Полярный",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81552) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Мурманская область",
                city: "Оленегорск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81553) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Мурманская область",
                city: "Кола",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81554) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Мурманская область",
                city: [ "Заполярный", "Никель" ],
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81555) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Мурманская область",
                city: "Апатиты",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81556) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Мурманская область",
                city: "Заозерск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81558) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Мурманская область",
                city: "Островной",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81559) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Мурманская область",
                city: "Умба",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (816) ###-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Новгородская область",
                city: "",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (8162) ##-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Новгородская область",
                city: "Великий Новгород",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81650) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Новгородская область",
                city: "Парфино",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81651) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Новгородская область",
                city: "Демянск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81652) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Новгородская область",
                city: "Старая Русса",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81653) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Новгородская область",
                city: "Мошенское",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81654) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Новгородская область",
                city: "Холм",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81655) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Новгородская область",
                city: "Сольцы",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81656) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Новгородская область",
                city: "Шимск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81657) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Новгородская область",
                city: "Окуловка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81658) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Новгородская область",
                city: "Поддорье",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81659) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Новгородская область",
                city: "Крестцы",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81660) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Новгородская область",
                city: "Малая Вишера",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81661) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Новгородская область",
                city: "Батецкий",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81662) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Новгородская область",
                city: "Волот",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81663) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Новгородская область",
                city: "Марёво",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81664) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Новгородская область",
                city: "Боровичи",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81665) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Новгородская область",
                city: "Чудово",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81666) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Новгородская область",
                city: "Валдай",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81667) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Новгородская область",
                city: "Хвойная",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81668) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Новгородская область",
                city: "Любытино",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81669) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Новгородская область",
                city: "Пестово",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (817) ###-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Вологодская область",
                city: "",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (8172) ##-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Вологодская область",
                city: "Вологда",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81732) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Вологодская область",
                city: "Харовск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81733) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Вологодская область",
                city: "Сокол",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81737) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Вологодская область",
                city: "Устюжна",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81738) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Вологодская область",
                city: "Великий Устюг",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81739) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Вологодская область",
                city: "Тотьма",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81740) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Вологодская область",
                city: "Кичменгский Городок",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81741) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Вологодская область",
                city: "Чагода",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81742) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Вологодская область",
                city: "Кадуй",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81743) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Вологодская область",
                city: "Бабаево",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81744) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Вологодская область",
                city: "Вожега",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81745) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Вологодская область",
                city: "Село имени Бабушкина",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81746) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Вологодская область",
                city: "Вытегра",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81747) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Вологодская область",
                city: "Нюксеница",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81748) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Вологодская область",
                city: "Тарногский Городок",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81749) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Вологодская область",
                city: "Шуйское",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81751) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Вологодская область",
                city: "Шексна",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81752) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Вологодская область",
                city: "Сямжа",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81753) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Вологодская область",
                city: "Устье",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81754) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Вологодская область",
                city: "Никольск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81755) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Вологодская область",
                city: "Грязовец",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81756) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Вологодская область",
                city: "Белозерск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81757) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Вологодская область",
                city: "Кириллов",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81758) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Вологодская область",
                city: "Липин Бор",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81759) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Вологодская область",
                city: "Верховажье",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (818) ###-##-##",
                cc: "RU",
                cd: "Russia",
                region: [ "Архангельская область", "Ненецкий автономный округ" ],
                city: "Архангельск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81830) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: [ "Архангельская область", "Ненецкий автономный округ" ],
                city: "Холмогоры",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81831) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: [ "Архангельская область", "Ненецкий автономный округ" ],
                city: "Березник",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81832) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: [ "Архангельская область", "Ненецкий автономный округ" ],
                city: "Плесецк",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81833) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: [ "Архангельская область", "Ненецкий автономный округ" ],
                city: "Лешуконское",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81834) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: [ "Архангельская область", "Ненецкий автономный округ" ],
                city: "Мирный",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81835)9-0#-##",
                cc: "RU",
                cd: "Russia",
                region: [ "Архангельская область", "Ненецкий автономный округ" ],
                city: "Соловецкий",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81836) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: [ "Архангельская область", "Ненецкий автономный округ" ],
                city: "Вельск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81837) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: [ "Архангельская область", "Ненецкий автономный округ" ],
                city: "Котлас",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81838) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: [ "Архангельская область", "Ненецкий автономный округ" ],
                city: "Няндома",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81839) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: [ "Архангельская область", "Ненецкий автономный округ" ],
                city: "Онега",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81840) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: [ "Архангельская область", "Ненецкий автономный округ" ],
                city: "Красноборск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81841) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: [ "Архангельская область", "Ненецкий автономный округ" ],
                city: "Каргополь",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81842) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: [ "Архангельская область", "Ненецкий автономный округ" ],
                city: "Северодвинск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81843) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: [ "Архангельская область", "Ненецкий автономный округ" ],
                city: "Ильинско-Подомское",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81848) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: [ "Архангельская область", "Ненецкий автономный округ" ],
                city: "Мезень",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81850) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: [ "Архангельская область", "Ненецкий автономный округ" ],
                city: "Коряжма",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81851) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: [ "Архангельская область", "Ненецкий автономный округ" ],
                city: "Шенкурск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81852) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: [ "Архангельская область", "Ненецкий автономный округ" ],
                city: "Новодвинск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81853) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: [ "Архангельская область", "Ненецкий автономный округ" ],
                city: "Нарьян-Мар",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81854) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: [ "Архангельская область", "Ненецкий автономный округ" ],
                city: "Верхняя Тойма",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81855) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: [ "Архангельская область", "Ненецкий автономный округ" ],
                city: "Октябрьский",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81856) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: [ "Архангельская область", "Ненецкий автономный округ" ],
                city: "Карпогоры",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81858) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: [ "Архангельская область", "Ненецкий автономный округ" ],
                city: "Коноша",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (81859) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: [ "Архангельская область", "Ненецкий автономный округ" ],
                city: "Яренск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (820) ###-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Вологодская область",
                city: "",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (8202) ##-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Вологодская область",
                city: "Череповец",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (821) ###-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Коми",
                city: "",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (8212) ##-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Коми",
                city: "Сыктывкар",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (82130) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Коми",
                city: "Выльгорт",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (82131) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Коми",
                city: "Визинга",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (82132) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Коми",
                city: "Койгородок",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (82133) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Коми",
                city: "Объячево",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (82134) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Коми",
                city: "Айкино",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (82135) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Коми",
                city: "Усогорск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (82136) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Коми",
                city: "Корткерос",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (82137) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Коми",
                city: "Усть-Кулом",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (82138) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Коми",
                city: "Троицко-Печорск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (82139) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Коми",
                city: "Емва",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (82140) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Коми",
                city: "Ижма",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (82141) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Коми",
                city: "Усть-Цильма",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (82142) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Коми",
                city: "Печора",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (82144) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Коми",
                city: "Усинск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (82145) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Коми",
                city: "Инта",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (82146) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Коми",
                city: "Вуктыл",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (82149) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Коми",
                city: "Сосногорск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (82151) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Коми",
                city: "Воркута",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (8216) ##-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Коми",
                city: "Ухта",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (831) ###-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Нижегородская область",
                city: "Нижний Новгород",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (8313) ##-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Нижегородская область",
                city: "Дзержинск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83130) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Нижегородская область",
                city: "Саров",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83134) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Нижегородская область",
                city: "Дивеево",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83136) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Нижегородская область",
                city: "Володарск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83137) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Нижегородская область",
                city: "Сокольское",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83138) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Нижегородская область",
                city: "Большое Болдино",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83139) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Нижегородская область",
                city: "Первомайск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83140) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Нижегородская область",
                city: "Вад",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83144) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Нижегородская область",
                city: "Балахна",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83145) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Нижегородская область",
                city: "Кстово",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83147) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Нижегородская область",
                city: "Арзамас",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83148) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Нижегородская область",
                city: "Перевоз",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83149) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Нижегородская область",
                city: "Лысково",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83150) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Нижегородская область",
                city: "Ветлуга",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83151) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Нижегородская область",
                city: "Тоншаево",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83152) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Нижегородская область",
                city: "Шахунья",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83153) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Нижегородская область",
                city: "Тонкино",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83154) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Нижегородская область",
                city: "Урень",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83155) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Нижегородская область",
                city: "Шаранга",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83156) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Нижегородская область",
                city: "Красные Баки",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83157) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Нижегородская область",
                city: "Ковернино",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83158) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Нижегородская область",
                city: "Варнавино",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83159) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Нижегородская область",
                city: "Бор",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83160) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Нижегородская область",
                city: "Чкаловск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83161) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Нижегородская область",
                city: "Городец",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83162) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Нижегородская область",
                city: "Семёнов",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83163) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Нижегородская область",
                city: "Воскресенское",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83164) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Нижегородская область",
                city: "Воротынец",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83165) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Нижегородская область",
                city: "Спасское",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83166) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Нижегородская область",
                city: "Княгинино",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83167) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Нижегородская область",
                city: "Большое Мурашкино",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83168) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Нижегородская область",
                city: "Дальнее Константиново",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83169) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Нижегородская область",
                city: "Заволжье",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83170) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Нижегородская область",
                city: "Богородск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83171) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Нижегородская область",
                city: [ "Павлово", "Ворсма" ],
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83172) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Нижегородская область",
                city: "Бутурлино",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83173) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Нижегородская область",
                city: "Вача",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83174) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Нижегородская область",
                city: "Сосновское",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83175) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Нижегородская область",
                city: "Навашино",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83176) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Нижегородская область",
                city: "Кулебаки",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83177) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Нижегородская область",
                city: "Выкса",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83178) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Нижегородская область",
                city: "Вознесенское",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83179) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Нижегородская область",
                city: "Ардатов",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83190) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Нижегородская область",
                city: "Шатки",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83191) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Нижегородская область",
                city: "Сергач",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83192) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Нижегородская область",
                city: "Пильна",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83193) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Нижегородская область",
                city: "Сеченово",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83194) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Нижегородская область",
                city: "Уразовка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83195) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Нижегородская область",
                city: "Гагино",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83196) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Нижегородская область",
                city: "Лукоянов",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83197) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Нижегородская область",
                city: "Починки",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (833) ###-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Кировская область",
                city: "",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (8332) ##-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Кировская область",
                city: "Киров",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83330) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Кировская область",
                city: "Арбаж",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83331) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Кировская область",
                city: "Афанасьево",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83332) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Кировская область",
                city: "Фаленки",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83333) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Кировская область",
                city: "Богородское",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83334) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Кировская область",
                city: "Вятские Поляны",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83335) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Кировская область",
                city: "Верхошижемье",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83336) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Кировская область",
                city: "Даровской",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83337) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Кировская область",
                city: "Зуевка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83338) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Кировская область",
                city: "Кильмезь",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83339) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Кировская область",
                city: "Кирс",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83340) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Кировская область",
                city: "Тужа",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83341) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Кировская область",
                city: "Кикнур",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83342) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Кировская область",
                city: "Котельнич",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83343) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Кировская область",
                city: "Кумены",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83344) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Кировская область",
                city: "Лебяжье",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83345) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Кировская область",
                city: "Ленинское",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83346) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Кировская область",
                city: "Луза",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83347) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Кировская область",
                city: "Малмыж",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83348) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Кировская область",
                city: "Мураши",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83349) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Кировская область",
                city: "Нагорск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83350) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Кировская область",
                city: "Нема",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83351) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Кировская область",
                city: "Подосиновец",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83352) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Кировская область",
                city: "Омутнинск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83353) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Кировская область",
                city: "Опарино",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83354) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Кировская область",
                city: "Оричи",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83355) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Кировская область",
                city: "Пижанка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83357) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Кировская область",
                city: "Санчурск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83358) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Кировская область",
                city: "Свеча",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83359) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Кировская область",
                city: "Уни",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83361) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Кировская область",
                city: "Кирово-Чепецк",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83362) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Кировская область",
                city: "Слободской",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83363) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Кировская область",
                city: "Уржум",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83364) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Кировская область",
                city: "Белая Холуница",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83365) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Кировская область",
                city: "Орлов",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83366) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Кировская область",
                city: "Юрья",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83367) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Кировская область",
                city: "Яранск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83368) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Кировская область",
                city: "Нолинск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83369) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Кировская область",
                city: "Суна",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83375) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Кировская область",
                city: "Советск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (834) ###-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Мордовия",
                city: "",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (8342) ##-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Мордовия",
                city: "Саранск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83431) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Мордовия",
                city: "Ардатов",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83432) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Мордовия",
                city: "Старое Шайгово",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83433) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Мордовия",
                city: "Кемля",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83434) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Мордовия",
                city: "Атяшево",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83436) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Мордовия",
                city: "Большие Березники",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83437) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Мордовия",
                city: "Чамзинка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83438) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Мордовия",
                city: "Ромоданово",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83439) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Мордовия",
                city: "Кочкурово",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83441) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Мордовия",
                city: "Лямбирь",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83442) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Мордовия",
                city: "Большое Игнатово",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83443) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Мордовия",
                city: "Краснослободск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83444) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Мордовия",
                city: "Ельники",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83445) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Мордовия",
                city: "Темников",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83446) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Мордовия",
                city: "Теньгушево",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83447) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Мордовия",
                city: "Дубенки",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83448) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Мордовия",
                city: "Кадошкино",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83449) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Мордовия",
                city: "Инсар",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83451) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Мордовия",
                city: "Рузаевка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83453) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Мордовия",
                city: "Ковылкино",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83454) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Мордовия",
                city: "Атюрьево",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83456) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Мордовия",
                city: "Торбеево",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83457) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Мордовия",
                city: "Явас",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83458) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Мордовия",
                city: "Зубова Поляна",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (835) ###-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Чувашия",
                city: "",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (8352) ##-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Чувашия",
                city: "Чебоксары",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (8352)7#-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Чувашия",
                city: "Новочебоксарск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83530) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Чувашия",
                city: "Красноармейское",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83531) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Чувашия",
                city: "Алатырь",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83532) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Чувашия",
                city: "Батырево",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83533) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Чувашия",
                city: "Канаш",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83534) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Чувашия",
                city: "Козловка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83535) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Чувашия",
                city: "Аликово",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83536) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Чувашия",
                city: "Шумерля",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83537) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Чувашия",
                city: "Вурнары",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83538) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Чувашия",
                city: "Ибреси",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83539) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Чувашия",
                city: "Комсомольское",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83540) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Чувашия",
                city: "Кугеси",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83541) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Чувашия",
                city: "Моргауши",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83542) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Чувашия",
                city: "Мариинский Посад",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83543) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Чувашия",
                city: "Порецкое",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83544) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Чувашия",
                city: "Урмары",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83545) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Чувашия",
                city: "Цивильск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83546) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Чувашия",
                city: "Шемурша",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83547) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Чувашия",
                city: "Ядрин",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83548) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Чувашия",
                city: "Янтиково",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83549) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Чувашия",
                city: "Яльчики",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83551) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Чувашия",
                city: "Красные Четаи",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (836) ###-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Марий Эл",
                city: "",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (8362) ##-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Марий Эл",
                city: "Йошкар-Ола",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83631) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Марий Эл",
                city: "Волжск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83632) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Марий Эл",
                city: "Козьмодемьянск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83633) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Марий Эл",
                city: "Сернур",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83634) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Марий Эл",
                city: "Мари-Турек",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83635) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Марий Эл",
                city: "Морки",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83636) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Марий Эл",
                city: "Новый Торъял",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83637) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Марий Эл",
                city: "Куженер",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83638) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Марий Эл",
                city: "Советский",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83639) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Марий Эл",
                city: "Параньга",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83641) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Марий Эл",
                city: "Оршанка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83643) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Марий Эл",
                city: "Килемары",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83644) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Марий Эл",
                city: "Юрино",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (83645) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Марий Эл",
                city: "Звенигово",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (840) ###-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Абхазия",
                city: "",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (840)22#-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Абхазия",
                city: "Сухум",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (840)23#-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Абхазия",
                city: "Гагра",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (840)24#-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Абхазия",
                city: "Гудаута",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (840)25#-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Абхазия",
                city: "Очамчыра",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (840)26#-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Абхазия",
                city: "Ткуарчал",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (840)27#-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Абхазия",
                city: "Гулрыпш",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (840)28#-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Абхазия",
                city: "Гал",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (841) ###-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Пензенская область",
                city: "",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (8412) ##-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Пензенская область",
                city: "Пенза",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84140) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Пензенская область",
                city: "Бессоновка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84141) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Пензенская область",
                city: "Беково",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84142) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Пензенская область",
                city: "Вадинск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84143) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Пензенская область",
                city: "Башмаково",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84144) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Пензенская область",
                city: "Исса",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84145) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Пензенская область",
                city: "Русский Камешкир",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84146) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Пензенская область",
                city: "Колышлей",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84147) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Пензенская область",
                city: "Кондоль",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84148) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Пензенская область",
                city: "Лопатино",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84150) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Пензенская область",
                city: "Мокшан",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84151) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Пензенская область",
                city: "Спасск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84152) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Пензенская область",
                city: "Пачелма",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84153) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Пензенская область",
                city: "Белинский",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84154) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Пензенская область",
                city: "Нижний Ломов",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84155) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Пензенская область",
                city: "Земетчино",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84156) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Пензенская область",
                city: "Каменка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84157) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Пензенская область",
                city: "Кузнецк",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84158) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Пензенская область",
                city: "Городище",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84159) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Пензенская область",
                city: "Шемышейка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84161) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Пензенская область",
                city: "Лунино",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84162) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Пензенская область",
                city: "Малая Сердоба",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84163) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Пензенская область",
                city: "Наровчат",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84164) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Пензенская область",
                city: "Неверкино",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84165) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Пензенская область",
                city: "Никольск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84167) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Пензенская область",
                city: "Сердобск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84168) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Пензенская область",
                city: "Сосновоборск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84169) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Пензенская область",
                city: "Тамала",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (842) ###-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ульяновская область",
                city: "",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (8422) ##-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ульяновская область",
                city: "Ульяновск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84230) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ульяновская область",
                city: "Старая Майна",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84231) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ульяновская область",
                city: "Чердаклы",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84232) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ульяновская область",
                city: "Новая Малыкла",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84233) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ульяновская область",
                city: "Сенгилей",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84234) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ульяновская область",
                city: "Тереньга",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84235) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ульяновская область",
                city: "Димитровград",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84237) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ульяновская область",
                city: "Кузоватово",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84238) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ульяновская область",
                city: "Новоспасское",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84239) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ульяновская область",
                city: "Радищево",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84240) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ульяновская область",
                city: "Базарный Сызган",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84241) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ульяновская область",
                city: "Инза",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84242) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ульяновская область",
                city: "Сурское",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84243) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ульяновская область",
                city: "Вешкайма",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84244) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ульяновская область",
                city: "Майна",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84245) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ульяновская область",
                city: "Большое Нагаткино",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84246) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ульяновская область",
                city: "Карсун",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84247) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ульяновская область",
                city: "Николаевка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84248) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ульяновская область",
                city: "Павловка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84249) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ульяновская область",
                city: "Старая Кулатка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84253) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ульяновская область",
                city: "Барыш",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84254) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ульяновская область",
                city: "Ишеевка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84255) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ульяновская область",
                city: "Новоульяновск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (843) ###-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Татарстан",
                city: "Казань",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84341) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Татарстан",
                city: "Алексеевское",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84342) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Татарстан",
                city: "Чистополь",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84344) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Татарстан",
                city: "Аксубаево",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84345) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Татарстан",
                city: "Нурлат",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84346) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Татарстан",
                city: "Базарные Матаки",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84347) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Татарстан",
                city: "Болгар",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84348) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Татарстан",
                city: "Новошешминск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84360) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Татарстан",
                city: "Тюлячи",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84361) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Татарстан",
                city: "Рыбная Слобода",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84362) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Татарстан",
                city: "Богатые Сабы",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84364) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Татарстан",
                city: "Кукмор",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84365) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Татарстан",
                city: "Высокая Гора",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84366) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Татарстан",
                city: "Арск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84367) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Татарстан",
                city: "Пестрецы",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84368) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Татарстан",
                city: "Балтаси",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84369) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Татарстан",
                city: "Большая Атня",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84370) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Татарстан",
                city: "Большие Кайбицы",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84371) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Татарстан",
                city: "Зеленодольск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84373) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Татарстан",
                city: "Тетюши",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84374) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Татарстан",
                city: "Буинск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84375) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Татарстан",
                city: "Старое Дрожжаное",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84376) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Татарстан",
                city: "Апастово",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84377) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Татарстан",
                city: "Камское Устье",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84378) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Татарстан",
                city: "Лаишево",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84379) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Татарстан",
                city: "Верхний Услон",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84396) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Татарстан",
                city: "Черемшан",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (844) ###-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Волгоградская область",
                city: "",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (844)2##-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Волгоградская область",
                city: "Волгоград",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (844)70#-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Волгоградская область",
                city: "Волгоград",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (8443) ##-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Волгоградская область",
                city: "Волжский",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84442) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Волгоградская область",
                city: "Урюпинск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84443) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Волгоградская область",
                city: "Нехаевская",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84444) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Волгоградская область",
                city: "Новониколаевский",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84445) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Волгоградская область",
                city: "Преображенская",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84446) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Волгоградская область",
                city: "Алексеевская",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84447) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Волгоградская область",
                city: "Новоаннинский",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84452) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Волгоградская область",
                city: "Елань",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84453) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Волгоградская область",
                city: "Рудня",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84454) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Волгоградская область",
                city: "Жирновск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84455) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Волгоградская область",
                city: "Котово",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84456) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Волгоградская область",
                city: "Ольховка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84457) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Волгоградская область",
                city: "Камышин",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84458) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Волгоградская область",
                city: "Дубовка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84461) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Волгоградская область",
                city: "Даниловка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84462) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Волгоградская область",
                city: "Кумылженская",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84463) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Волгоградская область",
                city: "Михайловка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84464) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Волгоградская область",
                city: "Серафимович",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84465) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Волгоградская область",
                city: "Фролово",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84466) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Волгоградская область",
                city: "Клетская",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84467) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Волгоградская область",
                city: "Иловля",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84468) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Волгоградская область",
                city: "Городище",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84472) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Волгоградская область",
                city: "Калач-на-Дону",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84473) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Волгоградская область",
                city: "Суровикино",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84474) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Волгоградская область",
                city: "Чернышковский",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84475) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Волгоградская область",
                city: "Октябрьский",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84476) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Волгоградская область",
                city: "Котельниково",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84477) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Волгоградская область",
                city: "Светлый Яр",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84478) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Волгоградская область",
                city: "Ленинск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84479) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Волгоградская область",
                city: "Средняя Ахтуба",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84492) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Волгоградская область",
                city: "Палласовка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84493) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Волгоградская область",
                city: "Старая Полтавка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84494) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Волгоградская область",
                city: "Николаевск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84495) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Волгоградская область",
                city: "Быково",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (845) ###-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Саратовская область",
                city: "",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (8452) ##-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Саратовская область",
                city: "Саратов",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (8453)2#-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Саратовская область",
                city: "Балаково",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (8453)3#-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Саратовская область",
                city: "Балаково",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (8453)4#-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Саратовская область",
                city: "Балаково",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (8453)5#-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Саратовская область",
                city: "Энгельс",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (8453)7#-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Саратовская область",
                city: "Энгельс",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (8453)9#-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Саратовская область",
                city: "Энгельс",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84540) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Саратовская область",
                city: "Ртищево",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84542) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Саратовская область",
                city: "Аркадак",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84543) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Саратовская область",
                city: "Турки",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84544) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Саратовская область",
                city: "Романовка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84545) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Саратовская область",
                city: "Балашов",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84548) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Саратовская область",
                city: "Самойловка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84549) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Саратовская область",
                city: "Калининск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84550) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Саратовская область",
                city: "Красноармейск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84551) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Саратовская область",
                city: "Лысые Горы",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84552) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Саратовская область",
                city: "Аткарск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84554) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Саратовская область",
                city: "Екатериновка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84555) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Саратовская область",
                city: "Петровск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84557) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Саратовская область",
                city: "Новые Бурасы",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84558) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Саратовская область",
                city: "Татищево",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84560) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Саратовская область",
                city: "Красный Кут",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84561) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Саратовская область",
                city: "Питерка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84562) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Саратовская область",
                city: "Новоузенск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84563) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Саратовская область",
                city: "Дергачи",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84564) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Саратовская область",
                city: "Ершов",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84565) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Саратовская область",
                city: "Мокроус",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84566) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Саратовская область",
                city: "Степное",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84567) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Саратовская область",
                city: "Маркс",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84568) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Саратовская область",
                city: "Воскресенское",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84573) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Саратовская область",
                city: "Духовницкое",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84574) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Саратовская область",
                city: "Пугачёв",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84575) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Саратовская область",
                city: "Перелюб",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84576) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Саратовская область",
                city: "Озинки",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84577) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Саратовская область",
                city: "Горный",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84578) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Саратовская область",
                city: "Александров Гай",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84579) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Саратовская область",
                city: "Ивантеевка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84591) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Саратовская область",
                city: "Базарный Карабулак",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84592) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Саратовская область",
                city: "Балтай",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84593) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Саратовская область",
                city: "Вольск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84595) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Саратовская область",
                city: "Хвалынск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84596) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Саратовская область",
                city: "Ровное",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (846) ###-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Самарская область",
                city: "",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (846)2##-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Самарская область",
                city: "Самара",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (846)300-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Самарская область",
                city: "Самара",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (846)302-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Самарская область",
                city: "Самара",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (846)303-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Самарская область",
                city: "Самара",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (846)309-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Самарская область",
                city: "Самара",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (846)31#-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Самарская область",
                city: "Самара",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (846)33#-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Самарская область",
                city: "Самара",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (846)34#-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Самарская область",
                city: "Самара",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (846)37#-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Самарская область",
                city: "Самара",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (846)9##-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Самарская область",
                city: "Самара",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84630)5-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Самарская область",
                city: "Волжский Утёс",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84635) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Самарская область",
                city: "Новокуйбышевск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84639) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Самарская область",
                city: "Чапаевск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (8464)3#-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Самарская область",
                city: "Сызрань",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (8464)4#-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Самарская область",
                city: "Сызрань",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (8464)9#-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Самарская область",
                city: "Сызрань",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84646) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Самарская область",
                city: "Октябрьск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84647) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Самарская область",
                city: "Приволжье",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84648) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Самарская область",
                city: "Шигоны",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84650) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Самарская область",
                city: "Кошки",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84651) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Самарская область",
                city: "Челно-Вершины",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84652) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Самарская область",
                city: "Шентала",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84653) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Самарская область",
                city: "Клявлино",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84654) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Самарская область",
                city: "Исаклы",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84655) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Самарская область",
                city: "Сергиевск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84656) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Самарская область",
                city: "Похвистнево",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84657) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Самарская область",
                city: "Красный Яр",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84658) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Самарская область",
                city: "Елховка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84660) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Самарская область",
                city: "Кинель-Черкассы",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84661) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Самарская область",
                city: "Отрадный",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84663) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Самарская область",
                city: "Кинель",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84664) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Самарская область",
                city: "Камышла",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84666) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Самарская область",
                city: "Богатое",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84667) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Самарская область",
                city: "Борское",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84670) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Самарская область",
                city: "Нефтегорск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84671) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Самарская область",
                city: "Алексеевка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84672) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Самарская область",
                city: "Большая Черниговка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84673) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Самарская область",
                city: "Большая Глушица",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84674) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Самарская область",
                city: "Пестравка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84675) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Самарская область",
                city: "Красноармейское",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84676) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Самарская область",
                city: "Безенчук",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84677) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Самарская область",
                city: "Хворостянка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (847) ###-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Калмыкия",
                city: "",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84722) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Калмыкия",
                city: "Элиста",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84731) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Калмыкия",
                city: "Городовиковск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84732) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Калмыкия",
                city: "Ики-Бурул",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84733) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Калмыкия",
                city: "Лагань",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84734) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Калмыкия",
                city: "Малые Дербеты",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84735) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Калмыкия",
                city: "Кетченеры",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84736) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Калмыкия",
                city: "Приютное",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84741) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Калмыкия",
                city: "Садовое",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84742) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Калмыкия",
                city: "Троицкое",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84743) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Калмыкия",
                city: "Комсомольский",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84744) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Калмыкия",
                city: "Цаган Аман",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84745) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Калмыкия",
                city: "Яшалта",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84746) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Калмыкия",
                city: "Яшкуль",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84747) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Калмыкия",
                city: "Большой Царын",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (848) ###-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Самарская область",
                city: "",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (8482) ##-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Самарская область",
                city: "Тольятти",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (84862) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Самарская область",
                city: "Жигулевск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (851) ###-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Астраханская область",
                city: "",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (8512) ##-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Астраханская область",
                city: "Астрахань",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (85140) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Астраханская область",
                city: "Знаменск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (85141) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Астраханская область",
                city: "Ахтубинск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (85142) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Астраханская область",
                city: "Володарский",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (85143) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Астраханская область",
                city: "Енотаевка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (85144) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Астраханская область",
                city: "Икряное",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (85145) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Астраханская область",
                city: "Камызяк",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (85146) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Астраханская область",
                city: "Красный Яр",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (85147) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Астраханская область",
                city: "Лиман",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (85148) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Астраханская область",
                city: "Харабали",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (85149) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Астраханская область",
                city: "Чёрный Яр",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (85171) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Астраханская область",
                city: "Нариманов",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (85172) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Астраханская область",
                city: "Началово",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (855) ###-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Татарстан",
                city: "",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (8552) ##-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Татарстан",
                city: "Набережные Челны",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (8553) ##-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Татарстан",
                city: "Альметьевск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (85549) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Татарстан",
                city: "Менделеевск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (8555)3#-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Татарстан",
                city: "Нижнекамск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (8555)4#-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Татарстан",
                city: "Нижнекамск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (85551) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Татарстан",
                city: "Агрыз",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (85552) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Татарстан",
                city: "Актаныш",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (85555) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Татарстан",
                city: "Мензелинск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (85556) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Татарстан",
                city: "Муслюмово",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (85557) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Татарстан",
                city: "Елабуга",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (85558) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Татарстан",
                city: "Заинск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (85559) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Татарстан",
                city: "Сарманово",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (85563) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Татарстан",
                city: "Мамадыш",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (85569) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Татарстан",
                city: "Бавлы",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (8557)2#-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Татарстан",
                city: "Набережные Челны",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (8557)3#-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Татарстан",
                city: "Набережные Челны",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (85592) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Татарстан",
                city: "Азнакаево",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (85593) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Татарстан",
                city: "Уруссу",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (85594) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Татарстан",
                city: "Бугульма",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (85595) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Татарстан",
                city: "Лениногорск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (861) ###-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Краснодарский край",
                city: "Краснодар",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86130) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Краснодарский край",
                city: "Тимашёвск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86131) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Краснодарский край",
                city: "Крымск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86132) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Краснодарский край",
                city: "Ейск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86133) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Краснодарский край",
                city: "Анапа",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86135) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Краснодарский край",
                city: "Усть-Лабинск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86137) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Краснодарский край",
                city: "Армавир",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86138) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Краснодарский край",
                city: "Кропоткин",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86140) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Краснодарский край",
                city: "Успенское",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86141) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Краснодарский край",
                city: "Геленджик",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86142) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Краснодарский край",
                city: "Кореновск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86143) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Краснодарский край",
                city: "Приморско-Ахтарск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86144) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Краснодарский край",
                city: "Отрадная",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86145) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Краснодарский край",
                city: "Ленинградская",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86146) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Краснодарский край",
                city: "Славянск-на-Кубани",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86147) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Краснодарский край",
                city: "Курганинск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86148) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Краснодарский край",
                city: "Темрюк",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86149) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Краснодарский край",
                city: "Новопокровская",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86150) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Краснодарский край",
                city: "Абинск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86151) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Краснодарский край",
                city: "Старощербиновская",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86152) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Краснодарский край",
                city: "Апшеронск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86153) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Краснодарский край",
                city: "Староминская",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86154) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Краснодарский край",
                city: "Белая Глина",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86155) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Краснодарский край",
                city: "Белореченск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86156) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Краснодарский край",
                city: "Брюховецкая",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86157) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Краснодарский край",
                city: "Выселки",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86158) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Краснодарский край",
                city: "Тбилисская",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86159) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Краснодарский край",
                city: "Горячий Ключ",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86160) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Краснодарский край",
                city: "Гулькевичи",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86161) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Краснодарский край",
                city: "Крыловская",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86162) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Краснодарский край",
                city: "Динская",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86163) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Краснодарский край",
                city: "Калининская",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86164) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Краснодарский край",
                city: "Каневская",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86165) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Краснодарский край",
                city: "Полтавская",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86166) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Краснодарский край",
                city: "Северская",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86167) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Краснодарский край",
                city: "Туапсе",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86168) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Краснодарский край",
                city: "Кущёвская",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86169) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Краснодарский край",
                city: "Лабинск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (8617) ##-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Краснодарский край",
                city: "Новороссийск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86191) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Краснодарский край",
                city: "Павловская",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86192) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Краснодарский край",
                city: "Мостовской",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86193) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Краснодарский край",
                city: "Кавказская",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86195) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Краснодарский край",
                city: "Новокубанск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86196) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Краснодарский край",
                city: "Тихорецк",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (862) ###-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Краснодарский край",
                city: "",
                operator: "",
                desc: "агломерация Большой Сочи"
            }, {
                mask: "+7 (862)2##-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Краснодарский край",
                city: [ "Аше", "Вардане", "Головинка", "Головинка", "Сочи", "Хоста" ],
                operator: "",
                desc: "агломерация Большой Сочи"
            }, {
                mask: "+7 (862)23#-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Краснодарский край",
                city: "",
                operator: "МТС",
                desc: "агломерация Большой Сочи"
            }, {
                mask: "+7 (862)24#-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Краснодарский край",
                city: "Адлер",
                operator: "",
                desc: "агломерация Большой Сочи"
            }, {
                mask: "+7 (862)247-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Краснодарский край",
                city: "Кудепста",
                operator: "",
                desc: "агломерация Большой Сочи"
            }, {
                mask: "+7 (862)252-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Краснодарский край",
                city: [ "Дагомыс", "Лоо" ],
                operator: "",
                desc: "агломерация Большой Сочи"
            }, {
                mask: "+7 (862)27#-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Краснодарский край",
                city: "Лазаревское",
                operator: "",
                desc: "агломерация Большой Сочи"
            }, {
                mask: "+7 (862)295-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Краснодарский край",
                city: "",
                operator: "МегаФон",
                desc: "агломерация Большой Сочи"
            }, {
                mask: "+7 (863) ###-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ростовская область",
                city: "",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (863)2##-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ростовская область",
                city: "Ростов-на-Дону",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (863)3##-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ростовская область",
                city: "Ростов-на-Дону",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (8634)3#-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ростовская область",
                city: "Таганрог",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (8634)43-1#-##",
                cc: "RU",
                cd: "Russia",
                region: "Ростовская область",
                city: "Таганрог",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (8634)6#-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ростовская область",
                city: "Таганрог",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86340) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ростовская область",
                city: "Родионово-Несветайская",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86341) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ростовская область",
                city: "Матвеев-Курган",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86342) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ростовская область",
                city: "Азов",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86345) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ростовская область",
                city: "Кагальницкая",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86347) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ростовская область",
                city: "Покровское",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86348) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ростовская область",
                city: "Куйбышево",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86349) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ростовская область",
                city: "Чалтырь",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (8635)2#-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ростовская область",
                city: "Новочеркасск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86350) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ростовская область",
                city: "Аксай",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86351) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ростовская область",
                city: "Усть-Донецкий",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86353) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ростовская область",
                city: "Вёшенская",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86354) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ростовская область",
                city: "Батайск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86355) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ростовская область",
                city: "Зверево",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86356) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ростовская область",
                city: "Семикаракорск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86357) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ростовская область",
                city: "Багаевская",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86358) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ростовская область",
                city: "Весёлый",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86359) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ростовская область",
                city: "Зерноград",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (8636)2#-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ростовская область",
                city: "Шахты",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86360) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ростовская область",
                city: "Каменоломни",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86361) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ростовская область",
                city: "Гуково",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86363) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ростовская область",
                city: "Советская",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86364) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ростовская область",
                city: "Казанская",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86365) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ростовская область",
                city: "Каменск-Шахтинский",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86367) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ростовская область",
                city: "Красный Сулин",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86368) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ростовская область",
                city: "Донецк",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86369) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ростовская область",
                city: "Новошахтинск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86370) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ростовская область",
                city: "Егорлыкская",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86371) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ростовская область",
                city: "Целина",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86372) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ростовская область",
                city: "Сальск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86373) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ростовская область",
                city: "Песчанокопское",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86374) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ростовская область",
                city: "Пролетарск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86375) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ростовская область",
                city: "Орловский",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86376) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ростовская область",
                city: "Зимовники",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86377) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ростовская область",
                city: "Дубовское",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86378) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ростовская область",
                city: "Заветное",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86379) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ростовская область",
                city: "Ремонтное",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86382) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ростовская область",
                city: "Боковская",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86383) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ростовская область",
                city: "Белая Калитва",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86384) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ростовская область",
                city: "Морозовск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86385) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ростовская область",
                city: "Миллерово",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86386) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ростовская область",
                city: "Тарасовский",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86387) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ростовская область",
                city: "Чертково",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86388) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ростовская область",
                city: "Кашары",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86389) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ростовская область",
                city: "Милютинская",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (8639)2#-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ростовская область",
                city: "Волгодонск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86391) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ростовская область",
                city: "Цимлянск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86393) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ростовская область",
                city: "Константиновск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86394) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ростовская область",
                city: "Романовская",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86395) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ростовская область",
                city: "Большая Мартыновка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86396) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ростовская область",
                city: "Обливская",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86397) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ростовская область",
                city: "Тацинская",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (865) ###-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ставропольский край",
                city: "",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (8652) ##-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ставропольский край",
                city: "Ставрополь",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86540) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ставропольский край",
                city: "Грачёвка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86541) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ставропольский край",
                city: "Красногвардейское",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86542) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ставропольский край",
                city: "Ипатово",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86543) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ставропольский край",
                city: "Левокумское",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86544) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ставропольский край",
                city: "Новоалександровск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86545) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ставропольский край",
                city: "Изобильный",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86546) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ставропольский край",
                city: "Донское",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86547) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ставропольский край",
                city: "Светлоград",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86548) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ставропольский край",
                city: "Новоселицкое",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86549) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ставропольский край",
                city: "Благодарный",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86550) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ставропольский край",
                city: "Кочубеевское",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86552) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ставропольский край",
                city: "Зеленокумск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86553) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ставропольский край",
                city: "Михайловск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86554) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ставропольский край",
                city: "Невинномысск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86555) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ставропольский край",
                city: "Дивное",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86556) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ставропольский край",
                city: "Курсавка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86557) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ставропольский край",
                city: "Александровское",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86558) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ставропольский край",
                city: "Нефтекумск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86559) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ставропольский край",
                city: "Буденновск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86560) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ставропольский край",
                city: "Арзгир",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86563) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ставропольский край",
                city: "Степное",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86565) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ставропольский край",
                city: "Летняя Ставка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (866) ###-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Кабардино-Балкария",
                city: "",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (8662) ##-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Кабардино-Балкария",
                city: "Нальчик",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86630) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Кабардино-Балкария",
                city: "Чегем",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86631) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Кабардино-Балкария",
                city: "Прохладный",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86632) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Кабардино-Балкария",
                city: "Терек",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86633) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Кабардино-Балкария",
                city: "Майский",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86634) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Кабардино-Балкария",
                city: "Баксан",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86635) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Кабардино-Балкария",
                city: "Нарткала",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86636) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Кабардино-Балкария",
                city: "Кашхатау",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86637) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Кабардино-Балкария",
                city: "Залукокоаже",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86638) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Кабардино-Балкария",
                city: "Тырныауз",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (867) ###-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Северная Осетия",
                city: "",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (8672) ##-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Северная Осетия",
                city: "Владикавказ",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86731) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Северная Осетия",
                city: "Алагир",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86732) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Северная Осетия",
                city: "Ардон",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86733) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Северная Осетия",
                city: "Дигора",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86734) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Северная Осетия",
                city: "Чикола",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86735) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Северная Осетия",
                city: "Эльхотово",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86736) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Северная Осетия",
                city: "Моздок",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86737) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Северная Осетия",
                city: "Беслан",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86738) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Северная Осетия",
                city: "Октябрьское",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (86739) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Северная Осетия",
                city: "Архонская",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (871) ###-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Чеченская Республика",
                city: "",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (8712) ##-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Чеченская Республика",
                city: "Грозный",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (87132) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Чеченская Республика",
                city: "Знаменское",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (87134) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Чеченская Республика",
                city: "Ведено",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (87135) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Чеченская Республика",
                city: "Шатой",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (87136) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Чеченская Республика",
                city: "Шелковская",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (87142) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Чеченская Республика",
                city: "Ачхой-Мартан",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (87143) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Чеченская Республика",
                city: "Наурская",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (87145) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Чеченская Республика",
                city: "Урус-Мартан",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (87146) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Чеченская Республика",
                city: "Шали",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (87147) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Чеченская Республика",
                city: "Аргун",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (87148) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Чеченская Республика",
                city: "Ножай-Юрт",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (87152) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Чеченская Республика",
                city: "Гудермес",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (87154) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Чеченская Республика",
                city: "Серноводск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (87155) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Чеченская Республика",
                city: "Курчалой",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (87156) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Чеченская Республика",
                city: [ "Толстой-Юрт", "Старые Атаги" ],
                operator: "",
                desc: ""
            }, {
                mask: "+7 (87164) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Чеченская Республика",
                city: "Итум-Кале",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (872) ###-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Дагестан",
                city: "",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (8722) ##-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Дагестан",
                city: "Махачкала",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (87230) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Дагестан",
                city: "Сергокала",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (87231) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Дагестан",
                city: "Хасавюрт",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (87232) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Дагестан",
                city: "Карабудахкент",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (87233) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Дагестан",
                city: "Хунзах",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (87234) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Дагестан",
                city: "Кизилюрт",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (87235) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Дагестан",
                city: "Магарамкент",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (87236) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Дагестан",
                city: "Касумкент",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (87237) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Дагестан",
                city: "Буйнакск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (87238) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Дагестан",
                city: "Маджалис",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (87239) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Дагестан",
                city: "Кизляр",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (87240) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Дагестан",
                city: "Дербент",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (87242) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Дагестан",
                city: "Новолакское",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (87243) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Дагестан",
                city: [ "Тпиг", "Агул" ],
                operator: "",
                desc: ""
            }, {
                mask: "+7 (87244) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Дагестан",
                city: "Хив",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (87245) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Дагестан",
                city: "Избербаш",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (87246) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Дагестан",
                city: "Каспийск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (87247) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Дагестан",
                city: "Бабаюрт",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (87248) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Дагестан",
                city: "Новокаякент",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (87249) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Дагестан",
                city: "Хучни",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (87252) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Дагестан",
                city: "Леваши",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (87254) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Дагестан",
                city: "Уркарах",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (87255) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Дагестан",
                city: "Гергебиль",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (87256) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Дагестан",
                city: "Терекли-Мектеб",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (87257) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Дагестан",
                city: "Унцукуль",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (87258) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Дагестан",
                city: "Гуниб",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (87259) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Дагестан",
                city: "Хебда",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (87260) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Дагестан",
                city: "Акуша",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (87261) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Дагестан",
                city: "Тарумовка",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (87262) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Дагестан",
                city: "Курах",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (87263) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Дагестан",
                city: "Ахты",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (87264) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Дагестан",
                city: "Рутул",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (87265) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Дагестан",
                city: "Тлярата",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (87266) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Дагестан",
                city: "Цуриб",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (87267) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Дагестан",
                city: "Кумух",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (87268) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Дагестан",
                city: "Вачи",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (87271) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Дагестан",
                city: "Ботлих",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (87272) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Дагестан",
                city: "Мехельта",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (87273) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Дагестан",
                city: "Агвали",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (87274) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Дагестан",
                city: "Бежта",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (87275) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Дагестан",
                city: "Дагестанские Огни",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (87276) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Дагестан",
                city: "Южно-Сухокумск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (87279) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Дагестан",
                city: "Дылым",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (873) ###-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Ингушетия",
                city: "",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (8732) ##-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Ингушетия",
                city: "Назрань",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (87341) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Ингушетия",
                city: "Орджоникидзевская",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (87342) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Ингушетия",
                city: "Малгобек",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (87343) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Ингушетия",
                city: "Джейрах",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (87344) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Ингушетия",
                city: "Карабулак",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (87345) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Ингушетия",
                city: "Магас",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (877) ###-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Адыгея",
                city: "",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (8772) ##-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Адыгея",
                city: "Майкоп",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (87770) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Адыгея",
                city: "Кошехабль",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (87771) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Адыгея",
                city: "Тахтамукай",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (87772) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Адыгея",
                city: "Адыгейск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (87773) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Адыгея",
                city: "Хакуринохабль",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (87777) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Адыгея",
                city: "Тульский",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (87778) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Адыгея",
                city: "Красногвардейское",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (87779) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Адыгея",
                city: "Гиагинская",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (878) ###-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Карачаево-Черкесия",
                city: "",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (8782) ##-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Карачаево-Черкесия",
                city: "Черкесск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (87870) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Карачаево-Черкесия",
                city: "Адыге-Хабль",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (87872) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Карачаево-Черкесия",
                city: [ "Теберда", "Домбай" ],
                operator: "",
                desc: ""
            }, {
                mask: "+7 (87873) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Карачаево-Черкесия",
                city: "Хабез",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (87874) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Карачаево-Черкесия",
                city: "Кавказский",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (87875) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Карачаево-Черкесия",
                city: "Усть-Джегута",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (87876) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Карачаево-Черкесия",
                city: "Преградная",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (87877) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Карачаево-Черкесия",
                city: "Учкекен",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (87878) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Карачаево-Черкесия",
                city: "Зеленчукская",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (87879) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Республика Карачаево-Черкесия",
                city: "Карачаевск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (879) ###-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ставропольский край",
                city: "",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (87922) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ставропольский край",
                city: "Минеральные Воды",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (8793) ##-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ставропольский край",
                city: "Пятигорск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (87932) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ставропольский край",
                city: "Железноводск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (87934) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ставропольский край",
                city: "Ессентуки",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (87935) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ставропольский край",
                city: "Лермонтов",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (87937) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ставропольский край",
                city: "Кисловодск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (87938) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ставропольский край",
                city: "Новопавловск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (87951) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ставропольский край",
                city: "Георгиевск",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (87961) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ставропольский край",
                city: "Ессентукская",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (87964) #-##-##",
                cc: "RU",
                cd: "Russia",
                region: "Ставропольский край",
                city: "Курская",
                operator: "",
                desc: ""
            }, {
                mask: "+7 (9##)###-##-##",
                cc: "RU",
                cd: "Russia",
                type: "mobile"
            } ]
        }
    }), Inputmask;
});// ==================================================
// fancyBox v3.3.5
//
// Licensed GPLv3 for open source use
// or fancyBox Commercial License for commercial use
//
// http://fancyapps.com/fancybox/
// Copyright 2018 fancyApps
//
// ==================================================
!function(t,e,n,o){"use strict";function i(t,e){var o,i,a=[],s=0;t&&t.isDefaultPrevented()||(t.preventDefault(),e=t&&t.data?t.data.options:e||{},o=e.$target||n(t.currentTarget),i=o.attr("data-fancybox")||"",i?(a=e.selector?n(e.selector):t.data?t.data.items:[],a=a.length?a.filter('[data-fancybox="'+i+'"]'):n('[data-fancybox="'+i+'"]'),s=a.index(o),s<0&&(s=0)):a=[o],n.fancybox.open(a,e,s))}if(t.console=t.console||{info:function(t){}},n){if(n.fn.fancybox)return void console.info("fancyBox already initialized");var a={loop:!1,gutter:50,keyboard:!0,arrows:!0,infobar:!0,smallBtn:"auto",toolbar:"auto",buttons:["zoom","thumbs","close"],idleTime:3,protect:!1,modal:!1,image:{preload:!1},ajax:{settings:{data:{fancybox:!0}}},iframe:{tpl:'<iframe id="fancybox-frame{rnd}" name="fancybox-frame{rnd}" class="fancybox-iframe" frameborder="0" vspace="0" hspace="0" webkitAllowFullScreen mozallowfullscreen allowFullScreen allowtransparency="true" src=""></iframe>',preload:!0,css:{},attr:{scrolling:"auto"}},defaultType:"image",animationEffect:"zoom",animationDuration:366,zoomOpacity:"auto",transitionEffect:"fade",transitionDuration:366,slideClass:"",baseClass:"",baseTpl:'<div class="fancybox-container" role="dialog" tabindex="-1"><div class="fancybox-bg"></div><div class="fancybox-inner"><div class="fancybox-infobar"><span data-fancybox-index></span>&nbsp;/&nbsp;<span data-fancybox-count></span></div><div class="fancybox-toolbar">{{buttons}}</div><div class="fancybox-navigation">{{arrows}}</div><div class="fancybox-stage"></div><div class="fancybox-caption"></div></div></div>',spinnerTpl:'<div class="fancybox-loading"></div>',errorTpl:'<div class="fancybox-error"><p>{{ERROR}}</p></div>',btnTpl:{download:'<a download data-fancybox-download class="fancybox-button fancybox-button--download" title="{{DOWNLOAD}}" href="javascript:;"><svg viewBox="0 0 40 40"><path d="M13,16 L20,23 L27,16 M20,7 L20,23 M10,24 L10,28 L30,28 L30,24" /></svg></a>',zoom:'<button data-fancybox-zoom class="fancybox-button fancybox-button--zoom" title="{{ZOOM}}"><svg viewBox="0 0 40 40"><path d="M18,17 m-8,0 a8,8 0 1,0 16,0 a8,8 0 1,0 -16,0 M24,22 L31,29" /></svg></button>',close:'<button data-fancybox-close class="fancybox-button fancybox-button--close" title="{{CLOSE}}"><svg viewBox="0 0 40 40"><path d="M10,10 L30,30 M30,10 L10,30" /></svg></button>',smallBtn:'<button data-fancybox-close class="fancybox-close-small" title="{{CLOSE}}"><svg viewBox="0 0 32 32"><path d="M10,10 L22,22 M22,10 L10,22"></path></svg></button>',arrowLeft:'<a data-fancybox-prev class="fancybox-button fancybox-button--arrow_left" title="{{PREV}}" href="javascript:;"><svg viewBox="0 0 40 40"><path d="M18,12 L10,20 L18,28 M10,20 L30,20"></path></svg></a>',arrowRight:'<a data-fancybox-next class="fancybox-button fancybox-button--arrow_right" title="{{NEXT}}" href="javascript:;"><svg viewBox="0 0 40 40"><path d="M10,20 L30,20 M22,12 L30,20 L22,28"></path></svg></a>'},parentEl:"body",autoFocus:!1,backFocus:!0,trapFocus:!0,fullScreen:{autoStart:!1},touch:{vertical:!0,momentum:!0},hash:null,media:{},slideShow:{autoStart:!1,speed:4e3},thumbs:{autoStart:!1,hideOnClose:!0,parentEl:".fancybox-container",axis:"y"},wheel:"auto",onInit:n.noop,beforeLoad:n.noop,afterLoad:n.noop,beforeShow:n.noop,afterShow:n.noop,beforeClose:n.noop,afterClose:n.noop,onActivate:n.noop,onDeactivate:n.noop,clickContent:function(t,e){return"image"===t.type&&"zoom"},clickSlide:"close",clickOutside:"close",dblclickContent:!1,dblclickSlide:!1,dblclickOutside:!1,mobile:{idleTime:!1,clickContent:function(t,e){return"image"===t.type&&"toggleControls"},clickSlide:function(t,e){return"image"===t.type?"toggleControls":"close"},dblclickContent:function(t,e){return"image"===t.type&&"zoom"},dblclickSlide:function(t,e){return"image"===t.type&&"zoom"}},lang:"en",i18n:{en:{CLOSE:"Close",NEXT:"Next",PREV:"Previous",ERROR:"The requested content cannot be loaded. <br/> Please try again later.",PLAY_START:"Start slideshow",PLAY_STOP:"Pause slideshow",FULL_SCREEN:"Full screen",THUMBS:"Thumbnails",DOWNLOAD:"Download",SHARE:"Share",ZOOM:"Zoom"},de:{CLOSE:"Schliessen",NEXT:"Weiter",PREV:"Zurück",ERROR:"Die angeforderten Daten konnten nicht geladen werden. <br/> Bitte versuchen Sie es später nochmal.",PLAY_START:"Diaschau starten",PLAY_STOP:"Diaschau beenden",FULL_SCREEN:"Vollbild",THUMBS:"Vorschaubilder",DOWNLOAD:"Herunterladen",SHARE:"Teilen",ZOOM:"Maßstab"}}},s=n(t),r=n(e),c=0,l=function(t){return t&&t.hasOwnProperty&&t instanceof n},d=function(){return t.requestAnimationFrame||t.webkitRequestAnimationFrame||t.mozRequestAnimationFrame||t.oRequestAnimationFrame||function(e){return t.setTimeout(e,1e3/60)}}(),u=function(){var t,n=e.createElement("fakeelement"),i={transition:"transitionend",OTransition:"oTransitionEnd",MozTransition:"transitionend",WebkitTransition:"webkitTransitionEnd"};for(t in i)if(n.style[t]!==o)return i[t];return"transitionend"}(),f=function(t){return t&&t.length&&t[0].offsetHeight},p=function(t,e){var o=n.extend(!0,{},t,e);return n.each(e,function(t,e){n.isArray(e)&&(o[t]=e)}),o},h=function(t,o,i){var a=this;a.opts=p({index:i},n.fancybox.defaults),n.isPlainObject(o)&&(a.opts=p(a.opts,o)),n.fancybox.isMobile&&(a.opts=p(a.opts,a.opts.mobile)),a.id=a.opts.id||++c,a.currIndex=parseInt(a.opts.index,10)||0,a.prevIndex=null,a.prevPos=null,a.currPos=0,a.firstRun=!0,a.group=[],a.slides={},a.addContent(t),a.group.length&&(a.$lastFocus=n(e.activeElement).trigger("blur"),a.init())};n.extend(h.prototype,{init:function(){var i,a,s,r=this,c=r.group[r.currIndex],l=c.opts,d=n.fancybox.scrollbarWidth;n.fancybox.getInstance()||l.hideScrollbar===!1||(n("body").addClass("fancybox-active"),!n.fancybox.isMobile&&e.body.scrollHeight>t.innerHeight&&(d===o&&(i=n('<div style="width:100px;height:100px;overflow:scroll;" />').appendTo("body"),d=n.fancybox.scrollbarWidth=i[0].offsetWidth-i[0].clientWidth,i.remove()),n("head").append('<style id="fancybox-style-noscroll" type="text/css">.compensate-for-scrollbar { margin-right: '+d+"px; }</style>"),n("body").addClass("compensate-for-scrollbar"))),s="",n.each(l.buttons,function(t,e){s+=l.btnTpl[e]||""}),a=n(r.translate(r,l.baseTpl.replace("{{buttons}}",s).replace("{{arrows}}",l.btnTpl.arrowLeft+l.btnTpl.arrowRight))).attr("id","fancybox-container-"+r.id).addClass("fancybox-is-hidden").addClass(l.baseClass).data("FancyBox",r).appendTo(l.parentEl),r.$refs={container:a},["bg","inner","infobar","toolbar","stage","caption","navigation"].forEach(function(t){r.$refs[t]=a.find(".fancybox-"+t)}),r.trigger("onInit"),r.activate(),r.jumpTo(r.currIndex)},translate:function(t,e){var n=t.opts.i18n[t.opts.lang];return e.replace(/\{\{(\w+)\}\}/g,function(t,e){var i=n[e];return i===o?t:i})},addContent:function(t){var e,i=this,a=n.makeArray(t);n.each(a,function(t,e){var a,s,r,c,l,d={},u={};n.isPlainObject(e)?(d=e,u=e.opts||e):"object"===n.type(e)&&n(e).length?(a=n(e),u=a.data()||{},u=n.extend(!0,{},u,u.options),u.$orig=a,d.src=i.opts.src||u.src||a.attr("href"),d.type||d.src||(d.type="inline",d.src=e)):d={type:"html",src:e+""},d.opts=n.extend(!0,{},i.opts,u),n.isArray(u.buttons)&&(d.opts.buttons=u.buttons),s=d.type||d.opts.type,c=d.src||"",!s&&c&&((r=c.match(/\.(mp4|mov|ogv)((\?|#).*)?$/i))?(s="video",d.opts.videoFormat||(d.opts.videoFormat="video/"+("ogv"===r[1]?"ogg":r[1]))):c.match(/(^data:image\/[a-z0-9+\/=]*,)|(\.(jp(e|g|eg)|gif|png|bmp|webp|svg|ico)((\?|#).*)?$)/i)?s="image":c.match(/\.(pdf)((\?|#).*)?$/i)?s="iframe":"#"===c.charAt(0)&&(s="inline")),s?d.type=s:i.trigger("objectNeedsType",d),d.contentType||(d.contentType=n.inArray(d.type,["html","inline","ajax"])>-1?"html":d.type),d.index=i.group.length,"auto"==d.opts.smallBtn&&(d.opts.smallBtn=n.inArray(d.type,["html","inline","ajax"])>-1),"auto"===d.opts.toolbar&&(d.opts.toolbar=!d.opts.smallBtn),d.opts.$trigger&&d.index===i.opts.index&&(d.opts.$thumb=d.opts.$trigger.find("img:first")),d.opts.$thumb&&d.opts.$thumb.length||!d.opts.$orig||(d.opts.$thumb=d.opts.$orig.find("img:first")),"function"===n.type(d.opts.caption)&&(d.opts.caption=d.opts.caption.apply(e,[i,d])),"function"===n.type(i.opts.caption)&&(d.opts.caption=i.opts.caption.apply(e,[i,d])),d.opts.caption instanceof n||(d.opts.caption=d.opts.caption===o?"":d.opts.caption+""),"ajax"===d.type&&(l=c.split(/\s+/,2),l.length>1&&(d.src=l.shift(),d.opts.filter=l.shift())),d.opts.modal&&(d.opts=n.extend(!0,d.opts,{infobar:0,toolbar:0,smallBtn:0,keyboard:0,slideShow:0,fullScreen:0,thumbs:0,touch:0,clickContent:!1,clickSlide:!1,clickOutside:!1,dblclickContent:!1,dblclickSlide:!1,dblclickOutside:!1})),i.group.push(d)}),Object.keys(i.slides).length&&(i.updateControls(),e=i.Thumbs,e&&e.isActive&&(e.create(),e.focus()))},addEvents:function(){var o=this;o.removeEvents(),o.$refs.container.on("click.fb-close","[data-fancybox-close]",function(t){t.stopPropagation(),t.preventDefault(),o.close(t)}).on("touchstart.fb-prev click.fb-prev","[data-fancybox-prev]",function(t){t.stopPropagation(),t.preventDefault(),o.previous()}).on("touchstart.fb-next click.fb-next","[data-fancybox-next]",function(t){t.stopPropagation(),t.preventDefault(),o.next()}).on("click.fb","[data-fancybox-zoom]",function(t){o[o.isScaledDown()?"scaleToActual":"scaleToFit"]()}),s.on("orientationchange.fb resize.fb",function(t){t&&t.originalEvent&&"resize"===t.originalEvent.type?d(function(){o.update()}):(o.$refs.stage.hide(),setTimeout(function(){o.$refs.stage.show(),o.update()},n.fancybox.isMobile?600:250))}),r.on("focusin.fb",function(t){var o=n.fancybox?n.fancybox.getInstance():null;o.isClosing||!o.current||!o.current.opts.trapFocus||n(t.target).hasClass("fancybox-container")||n(t.target).is(e)||o&&"fixed"!==n(t.target).css("position")&&!o.$refs.container.has(t.target).length&&(t.stopPropagation(),o.focus())}),r.on("keydown.fb",function(t){var e=o.current,i=t.keyCode||t.which;if(e&&e.opts.keyboard&&!(t.ctrlKey||t.altKey||t.shiftKey||n(t.target).is("input")||n(t.target).is("textarea")))return 8===i||27===i?(t.preventDefault(),void o.close(t)):37===i||38===i?(t.preventDefault(),void o.previous()):39===i||40===i?(t.preventDefault(),void o.next()):void o.trigger("afterKeydown",t,i)}),o.group[o.currIndex].opts.idleTime&&(o.idleSecondsCounter=0,r.on("mousemove.fb-idle mouseleave.fb-idle mousedown.fb-idle touchstart.fb-idle touchmove.fb-idle scroll.fb-idle keydown.fb-idle",function(t){o.idleSecondsCounter=0,o.isIdle&&o.showControls(),o.isIdle=!1}),o.idleInterval=t.setInterval(function(){o.idleSecondsCounter++,o.idleSecondsCounter>=o.group[o.currIndex].opts.idleTime&&!o.isDragging&&(o.isIdle=!0,o.idleSecondsCounter=0,o.hideControls())},1e3))},removeEvents:function(){var e=this;s.off("orientationchange.fb resize.fb"),r.off("focusin.fb keydown.fb .fb-idle"),this.$refs.container.off(".fb-close .fb-prev .fb-next"),e.idleInterval&&(t.clearInterval(e.idleInterval),e.idleInterval=null)},previous:function(t){return this.jumpTo(this.currPos-1,t)},next:function(t){return this.jumpTo(this.currPos+1,t)},jumpTo:function(t,e){var i,a,s,r,c,l,d,u=this,p=u.group.length;if(!(u.isDragging||u.isClosing||u.isAnimating&&u.firstRun)){if(t=parseInt(t,10),a=u.current?u.current.opts.loop:u.opts.loop,!a&&(t<0||t>=p))return!1;if(i=u.firstRun=!Object.keys(u.slides).length,!(p<2&&!i&&u.isDragging)){if(r=u.current,u.prevIndex=u.currIndex,u.prevPos=u.currPos,s=u.createSlide(t),p>1&&((a||s.index>0)&&u.createSlide(t-1),(a||s.index<p-1)&&u.createSlide(t+1)),u.current=s,u.currIndex=s.index,u.currPos=s.pos,u.trigger("beforeShow",i),u.updateControls(),l=n.fancybox.getTranslate(s.$slide),s.isMoved=(0!==l.left||0!==l.top)&&!s.$slide.hasClass("fancybox-animated"),s.forcedDuration=o,n.isNumeric(e)?s.forcedDuration=e:e=s.opts[i?"animationDuration":"transitionDuration"],e=parseInt(e,10),i)return s.opts.animationEffect&&e&&u.$refs.container.css("transition-duration",e+"ms"),u.$refs.container.removeClass("fancybox-is-hidden"),f(u.$refs.container),u.$refs.container.addClass("fancybox-is-open"),f(u.$refs.container),s.$slide.addClass("fancybox-slide--previous"),u.loadSlide(s),s.$slide.removeClass("fancybox-slide--previous").addClass("fancybox-slide--current"),void u.preload("image");n.each(u.slides,function(t,e){n.fancybox.stop(e.$slide)}),s.$slide.removeClass("fancybox-slide--next fancybox-slide--previous").addClass("fancybox-slide--current"),s.isMoved?(c=Math.round(s.$slide.width()),n.each(u.slides,function(t,o){var i=o.pos-s.pos;n.fancybox.animate(o.$slide,{top:0,left:i*c+i*o.opts.gutter},e,function(){o.$slide.removeAttr("style").removeClass("fancybox-slide--next fancybox-slide--previous"),o.pos===u.currPos&&(s.isMoved=!1,u.complete())})})):u.$refs.stage.children().removeAttr("style"),s.isLoaded?u.revealContent(s):u.loadSlide(s),u.preload("image"),r.pos!==s.pos&&(d="fancybox-slide--"+(r.pos>s.pos?"next":"previous"),r.$slide.removeClass("fancybox-slide--complete fancybox-slide--current fancybox-slide--next fancybox-slide--previous"),r.isComplete=!1,e&&(s.isMoved||s.opts.transitionEffect)&&(s.isMoved?r.$slide.addClass(d):(d="fancybox-animated "+d+" fancybox-fx-"+s.opts.transitionEffect,n.fancybox.animate(r.$slide,d,e,function(){r.$slide.removeClass(d).removeAttr("style")}))))}}},createSlide:function(t){var e,o,i=this;return o=t%i.group.length,o=o<0?i.group.length+o:o,!i.slides[t]&&i.group[o]&&(e=n('<div class="fancybox-slide"></div>').appendTo(i.$refs.stage),i.slides[t]=n.extend(!0,{},i.group[o],{pos:t,$slide:e,isLoaded:!1}),i.updateSlide(i.slides[t])),i.slides[t]},scaleToActual:function(t,e,i){var a,s,r,c,l,d=this,u=d.current,f=u.$content,p=n.fancybox.getTranslate(u.$slide).width,h=n.fancybox.getTranslate(u.$slide).height,g=u.width,b=u.height;!d.isAnimating&&f&&"image"==u.type&&u.isLoaded&&!u.hasError&&(n.fancybox.stop(f),d.isAnimating=!0,t=t===o?.5*p:t,e=e===o?.5*h:e,a=n.fancybox.getTranslate(f),a.top-=n.fancybox.getTranslate(u.$slide).top,a.left-=n.fancybox.getTranslate(u.$slide).left,c=g/a.width,l=b/a.height,s=.5*p-.5*g,r=.5*h-.5*b,g>p&&(s=a.left*c-(t*c-t),s>0&&(s=0),s<p-g&&(s=p-g)),b>h&&(r=a.top*l-(e*l-e),r>0&&(r=0),r<h-b&&(r=h-b)),d.updateCursor(g,b),n.fancybox.animate(f,{top:r,left:s,scaleX:c,scaleY:l},i||330,function(){d.isAnimating=!1}),d.SlideShow&&d.SlideShow.isActive&&d.SlideShow.stop())},scaleToFit:function(t){var e,o=this,i=o.current,a=i.$content;!o.isAnimating&&a&&"image"==i.type&&i.isLoaded&&!i.hasError&&(n.fancybox.stop(a),o.isAnimating=!0,e=o.getFitPos(i),o.updateCursor(e.width,e.height),n.fancybox.animate(a,{top:e.top,left:e.left,scaleX:e.width/a.width(),scaleY:e.height/a.height()},t||330,function(){o.isAnimating=!1}))},getFitPos:function(t){var e,n,o,i,a,s=this,r=t.$content,c=t.width||t.opts.width,l=t.height||t.opts.height,d={};return!!(t.isLoaded&&r&&r.length)&&(i={top:parseInt(t.$slide.css("paddingTop"),10),right:parseInt(t.$slide.css("paddingRight"),10),bottom:parseInt(t.$slide.css("paddingBottom"),10),left:parseInt(t.$slide.css("paddingLeft"),10)},e=parseInt(s.$refs.stage.width(),10)-(i.left+i.right),n=parseInt(s.$refs.stage.height(),10)-(i.top+i.bottom),c&&l||(c=e,l=n),o=Math.min(1,e/c,n/l),c=Math.floor(o*c),l=Math.floor(o*l),"image"===t.type?(d.top=Math.floor(.5*(n-l))+i.top,d.left=Math.floor(.5*(e-c))+i.left):"video"===t.contentType&&(a=t.opts.width&&t.opts.height?c/l:t.opts.ratio||16/9,l>c/a?l=c/a:c>l*a&&(c=l*a)),d.width=c,d.height=l,d)},update:function(){var t=this;n.each(t.slides,function(e,n){t.updateSlide(n)})},updateSlide:function(t,e){var o=this,i=t&&t.$content,a=t.width||t.opts.width,s=t.height||t.opts.height;i&&(a||s||"video"===t.contentType)&&!t.hasError&&(n.fancybox.stop(i),n.fancybox.setTranslate(i,o.getFitPos(t)),t.pos===o.currPos&&(o.isAnimating=!1,o.updateCursor())),t.$slide.trigger("refresh"),o.$refs.toolbar.toggleClass("compensate-for-scrollbar",t.$slide.get(0).scrollHeight>t.$slide.get(0).clientHeight),o.trigger("onUpdate",t)},centerSlide:function(t,e){var i,a,s=this;s.current&&(i=Math.round(t.$slide.width()),a=t.pos-s.current.pos,n.fancybox.animate(t.$slide,{top:0,left:a*i+a*t.opts.gutter,opacity:1},e===o?0:e,null,!1))},updateCursor:function(t,e){var o,i=this,a=i.current,s=i.$refs.container.removeClass("fancybox-is-zoomable fancybox-can-zoomIn fancybox-can-drag fancybox-can-zoomOut");a&&!i.isClosing&&(o=i.isZoomable(),s.toggleClass("fancybox-is-zoomable",o),n("[data-fancybox-zoom]").prop("disabled",!o),o&&("zoom"===a.opts.clickContent||n.isFunction(a.opts.clickContent)&&"zoom"===a.opts.clickContent(a))?i.isScaledDown(t,e)?s.addClass("fancybox-can-zoomIn"):a.opts.touch?s.addClass("fancybox-can-drag"):s.addClass("fancybox-can-zoomOut"):a.opts.touch&&"video"!==a.contentType&&s.addClass("fancybox-can-drag"))},isZoomable:function(){var t,e=this,n=e.current;if(n&&!e.isClosing&&"image"===n.type&&!n.hasError){if(!n.isLoaded)return!0;if(t=e.getFitPos(n),n.width>t.width||n.height>t.height)return!0}return!1},isScaledDown:function(t,e){var i=this,a=!1,s=i.current,r=s.$content;return t!==o&&e!==o?a=t<s.width&&e<s.height:r&&(a=n.fancybox.getTranslate(r),a=a.width<s.width&&a.height<s.height),a},canPan:function(){var t,e=this,n=!1,o=e.current;return"image"===o.type&&(t=o.$content)&&!o.hasError&&(n=e.getFitPos(o),n=Math.abs(t.width()-n.width)>1||Math.abs(t.height()-n.height)>1),n},loadSlide:function(t){var e,o,i,a=this;if(!t.isLoading&&!t.isLoaded){switch(t.isLoading=!0,a.trigger("beforeLoad",t),e=t.type,o=t.$slide,o.off("refresh").trigger("onReset").addClass(t.opts.slideClass),e){case"image":a.setImage(t);break;case"iframe":a.setIframe(t);break;case"html":a.setContent(t,t.src||t.content);break;case"video":a.setContent(t,'<video class="fancybox-video" controls controlsList="nodownload"><source src="'+t.src+'" type="'+t.opts.videoFormat+"\">Your browser doesn't support HTML5 video</video");break;case"inline":n(t.src).length?a.setContent(t,n(t.src)):a.setError(t);break;case"ajax":a.showLoading(t),i=n.ajax(n.extend({},t.opts.ajax.settings,{url:t.src,success:function(e,n){"success"===n&&a.setContent(t,e)},error:function(e,n){e&&"abort"!==n&&a.setError(t)}})),o.one("onReset",function(){i.abort()});break;default:a.setError(t)}return!0}},setImage:function(e){var o,i,a,s,r,c=this,l=e.opts.srcset||e.opts.image.srcset;if(e.timouts=setTimeout(function(){var t=e.$image;!e.isLoading||t&&t[0].complete||e.hasError||c.showLoading(e)},350),l){s=t.devicePixelRatio||1,r=t.innerWidth*s,a=l.split(",").map(function(t){var e={};return t.trim().split(/\s+/).forEach(function(t,n){var o=parseInt(t.substring(0,t.length-1),10);return 0===n?e.url=t:void(o&&(e.value=o,e.postfix=t[t.length-1]))}),e}),a.sort(function(t,e){return t.value-e.value});for(var d=0;d<a.length;d++){var u=a[d];if("w"===u.postfix&&u.value>=r||"x"===u.postfix&&u.value>=s){i=u;break}}!i&&a.length&&(i=a[a.length-1]),i&&(e.src=i.url,e.width&&e.height&&"w"==i.postfix&&(e.height=e.width/e.height*i.value,e.width=i.value),e.opts.srcset=l)}e.$content=n('<div class="fancybox-content"></div>').addClass("fancybox-is-hidden").appendTo(e.$slide.addClass("fancybox-slide--image")),o=e.opts.thumb||!(!e.opts.$thumb||!e.opts.$thumb.length)&&e.opts.$thumb.attr("src"),e.opts.preload!==!1&&e.opts.width&&e.opts.height&&o&&(e.width=e.opts.width,e.height=e.opts.height,e.$ghost=n("<img />").one("error",function(){n(this).remove(),e.$ghost=null}).one("load",function(){c.afterLoad(e)}).addClass("fancybox-image").appendTo(e.$content).attr("src",o)),c.setBigImage(e)},setBigImage:function(t){var e=this,o=n("<img />");t.$image=o.one("error",function(){e.setError(t)}).one("load",function(){var n;t.$ghost||(e.resolveImageSlideSize(t,this.naturalWidth,this.naturalHeight),e.afterLoad(t)),t.timouts&&(clearTimeout(t.timouts),t.timouts=null),e.isClosing||(t.opts.srcset&&(n=t.opts.sizes,n&&"auto"!==n||(n=(t.width/t.height>1&&s.width()/s.height()>1?"100":Math.round(t.width/t.height*100))+"vw"),o.attr("sizes",n).attr("srcset",t.opts.srcset)),t.$ghost&&setTimeout(function(){t.$ghost&&!e.isClosing&&t.$ghost.hide()},Math.min(300,Math.max(1e3,t.height/1600))),e.hideLoading(t))}).addClass("fancybox-image").attr("src",t.src).appendTo(t.$content),(o[0].complete||"complete"==o[0].readyState)&&o[0].naturalWidth&&o[0].naturalHeight?o.trigger("load"):o[0].error&&o.trigger("error")},resolveImageSlideSize:function(t,e,n){var o=parseInt(t.opts.width,10),i=parseInt(t.opts.height,10);t.width=e,t.height=n,o>0&&(t.width=o,t.height=Math.floor(o*n/e)),i>0&&(t.width=Math.floor(i*e/n),t.height=i)},setIframe:function(t){var e,i=this,a=t.opts.iframe,s=t.$slide;t.$content=n('<div class="fancybox-content'+(a.preload?" fancybox-is-hidden":"")+'"></div>').css(a.css).appendTo(s),s.addClass("fancybox-slide--"+t.contentType),t.$iframe=e=n(a.tpl.replace(/\{rnd\}/g,(new Date).getTime())).attr(a.attr).appendTo(t.$content),a.preload?(i.showLoading(t),e.on("load.fb error.fb",function(e){this.isReady=1,t.$slide.trigger("refresh"),i.afterLoad(t)}),s.on("refresh.fb",function(){var n,i,s=t.$content,r=a.css.width,c=a.css.height;if(1===e[0].isReady){try{n=e.contents(),i=n.find("body")}catch(t){}i&&i.length&&i.children().length&&(s.css({width:"",height:""}),r===o&&(r=Math.ceil(Math.max(i[0].clientWidth,i.outerWidth(!0)))),r&&s.width(r),c===o&&(c=Math.ceil(Math.max(i[0].clientHeight,i.outerHeight(!0)))),c&&s.height(c)),s.removeClass("fancybox-is-hidden")}})):this.afterLoad(t),e.attr("src",t.src),s.one("onReset",function(){try{n(this).find("iframe").hide().unbind().attr("src","//about:blank")}catch(t){}n(this).off("refresh.fb").empty(),t.isLoaded=!1})},setContent:function(t,e){var o=this;o.isClosing||(o.hideLoading(t),t.$content&&n.fancybox.stop(t.$content),t.$slide.empty(),l(e)&&e.parent().length?(e.parent().parent(".fancybox-slide--inline").trigger("onReset"),t.$placeholder=n("<div>").hide().insertAfter(e),e.css("display","inline-block")):t.hasError||("string"===n.type(e)&&(e=n("<div>").append(n.trim(e)).contents(),3===e[0].nodeType&&(e=n("<div>").html(e))),t.opts.filter&&(e=n("<div>").html(e).find(t.opts.filter))),t.$slide.one("onReset",function(){n(this).find("video,audio").trigger("pause"),t.$placeholder&&(t.$placeholder.after(e.hide()).remove(),t.$placeholder=null),t.$smallBtn&&(t.$smallBtn.remove(),t.$smallBtn=null),t.hasError||(n(this).empty(),t.isLoaded=!1)}),n(e).appendTo(t.$slide),n(e).is("video,audio")&&(n(e).addClass("fancybox-video"),n(e).wrap("<div></div>"),t.contentType="video",t.opts.width=t.opts.width||n(e).attr("width"),t.opts.height=t.opts.height||n(e).attr("height")),t.$content=t.$slide.children().filter("div,form,main,video,audio").first().addClass("fancybox-content"),t.$slide.addClass("fancybox-slide--"+t.contentType),this.afterLoad(t))},setError:function(t){t.hasError=!0,t.$slide.trigger("onReset").removeClass("fancybox-slide--"+t.contentType).addClass("fancybox-slide--error"),t.contentType="html",this.setContent(t,this.translate(t,t.opts.errorTpl)),t.pos===this.currPos&&(this.isAnimating=!1)},showLoading:function(t){var e=this;t=t||e.current,t&&!t.$spinner&&(t.$spinner=n(e.translate(e,e.opts.spinnerTpl)).appendTo(t.$slide))},hideLoading:function(t){var e=this;t=t||e.current,t&&t.$spinner&&(t.$spinner.remove(),delete t.$spinner)},afterLoad:function(t){var e=this;e.isClosing||(t.isLoading=!1,t.isLoaded=!0,e.trigger("afterLoad",t),e.hideLoading(t),t.pos===e.currPos&&e.updateCursor(),!t.opts.smallBtn||t.$smallBtn&&t.$smallBtn.length||(t.$smallBtn=n(e.translate(t,t.opts.btnTpl.smallBtn)).prependTo(t.$content)),t.opts.protect&&t.$content&&!t.hasError&&(t.$content.on("contextmenu.fb",function(t){return 2==t.button&&t.preventDefault(),!0}),"image"===t.type&&n('<div class="fancybox-spaceball"></div>').appendTo(t.$content)),e.revealContent(t))},revealContent:function(t){var e,i,a,s,r=this,c=t.$slide,l=!1,d=!1;return e=t.opts[r.firstRun?"animationEffect":"transitionEffect"],a=t.opts[r.firstRun?"animationDuration":"transitionDuration"],a=parseInt(t.forcedDuration===o?a:t.forcedDuration,10),t.pos===r.currPos&&(t.isComplete?e=!1:r.isAnimating=!0),!t.isMoved&&t.pos===r.currPos&&a||(e=!1),"zoom"===e&&(t.pos===r.currPos&&a&&"image"===t.type&&!t.hasError&&(d=r.getThumbPos(t))?l=r.getFitPos(t):e="fade"),"zoom"===e?(l.scaleX=l.width/d.width,l.scaleY=l.height/d.height,s=t.opts.zoomOpacity,"auto"==s&&(s=Math.abs(t.width/t.height-d.width/d.height)>.1),s&&(d.opacity=.1,l.opacity=1),n.fancybox.setTranslate(t.$content.removeClass("fancybox-is-hidden"),d),f(t.$content),void n.fancybox.animate(t.$content,l,a,function(){r.isAnimating=!1,r.complete()})):(r.updateSlide(t),e?(n.fancybox.stop(c),i="fancybox-animated fancybox-slide--"+(t.pos>=r.prevPos?"next":"previous")+" fancybox-fx-"+e,c.removeAttr("style").removeClass("fancybox-slide--current fancybox-slide--next fancybox-slide--previous").addClass(i),t.$content.removeClass("fancybox-is-hidden"),f(c),void n.fancybox.animate(c,"fancybox-slide--current",a,function(e){c.removeClass(i).removeAttr("style"),t.pos===r.currPos&&r.complete()},!0)):(f(c),t.$content.removeClass("fancybox-is-hidden"),void(t.pos===r.currPos&&r.complete())))},getThumbPos:function(o){var i,a=this,s=!1,r=o.opts.$thumb,c=r&&r.length&&r[0].ownerDocument===e?r.offset():0,l=function(e){for(var o,i=e[0],a=i.getBoundingClientRect(),s=[];null!==i.parentElement;)"hidden"!==n(i.parentElement).css("overflow")&&"auto"!==n(i.parentElement).css("overflow")||s.push(i.parentElement.getBoundingClientRect()),i=i.parentElement;return o=s.every(function(t){var e=Math.min(a.right,t.right)-Math.max(a.left,t.left),n=Math.min(a.bottom,t.bottom)-Math.max(a.top,t.top);return e>0&&n>0}),o&&a.bottom>0&&a.right>0&&a.left<n(t).width()&&a.top<n(t).height()};return c&&l(r)&&(i=a.$refs.stage.offset(),s={top:c.top-i.top+parseFloat(r.css("border-top-width")||0),left:c.left-i.left+parseFloat(r.css("border-left-width")||0),width:r.width(),height:r.height(),scaleX:1,scaleY:1}),s},complete:function(){var t=this,o=t.current,i={};!o.isMoved&&o.isLoaded&&(o.isComplete||(o.isComplete=!0,o.$slide.siblings().trigger("onReset"),t.preload("inline"),f(o.$slide),o.$slide.addClass("fancybox-slide--complete"),n.each(t.slides,function(e,o){o.pos>=t.currPos-1&&o.pos<=t.currPos+1?i[o.pos]=o:o&&(n.fancybox.stop(o.$slide),o.$slide.off().remove())}),t.slides=i),t.isAnimating=!1,t.updateCursor(),t.trigger("afterShow"),o.$slide.find("video,audio").filter(":visible:first").trigger("play"),(n(e.activeElement).is("[disabled]")||o.opts.autoFocus&&"image"!=o.type&&"iframe"!==o.type)&&t.focus())},preload:function(t){var e=this,n=e.slides[e.currPos+1],o=e.slides[e.currPos-1];n&&n.type===t&&e.loadSlide(n),o&&o.type===t&&e.loadSlide(o)},focus:function(){var t,e=this.current;this.isClosing||e&&e.isComplete&&e.$content&&(t=e.$content.find("input[autofocus]:enabled:visible:first"),t.length||(t=e.$content.find("button,:input,[tabindex],a").filter(":enabled:visible:first")),t=t&&t.length?t:e.$content,t.trigger("focus"))},activate:function(){var t=this;n(".fancybox-container").each(function(){var e=n(this).data("FancyBox");e&&e.id!==t.id&&!e.isClosing&&(e.trigger("onDeactivate"),e.removeEvents(),e.isVisible=!1)}),t.isVisible=!0,(t.current||t.isIdle)&&(t.update(),t.updateControls()),t.trigger("onActivate"),t.addEvents()},close:function(t,e){var o,i,a,s,r,c,l,p=this,h=p.current,g=function(){p.cleanUp(t)};return!p.isClosing&&(p.isClosing=!0,p.trigger("beforeClose",t)===!1?(p.isClosing=!1,d(function(){p.update()}),!1):(p.removeEvents(),h.timouts&&clearTimeout(h.timouts),a=h.$content,o=h.opts.animationEffect,i=n.isNumeric(e)?e:o?h.opts.animationDuration:0,h.$slide.off(u).removeClass("fancybox-slide--complete fancybox-slide--next fancybox-slide--previous fancybox-animated"),h.$slide.siblings().trigger("onReset").remove(),i&&p.$refs.container.removeClass("fancybox-is-open").addClass("fancybox-is-closing"),p.hideLoading(h),p.hideControls(),p.updateCursor(),"zoom"!==o||t!==!0&&a&&i&&"image"===h.type&&!h.hasError&&(l=p.getThumbPos(h))||(o="fade"),"zoom"===o?(n.fancybox.stop(a),s=n.fancybox.getTranslate(a),c={top:s.top,left:s.left,scaleX:s.width/l.width,scaleY:s.height/l.height,width:l.width,height:l.height},r=h.opts.zoomOpacity,"auto"==r&&(r=Math.abs(h.width/h.height-l.width/l.height)>.1),r&&(l.opacity=0),n.fancybox.setTranslate(a,c),f(a),n.fancybox.animate(a,l,i,g),!0):(o&&i?t===!0?setTimeout(g,i):n.fancybox.animate(h.$slide.removeClass("fancybox-slide--current"),"fancybox-animated fancybox-slide--previous fancybox-fx-"+o,i,g):g(),!0)))},cleanUp:function(t){var e,o=this,i=n("body");o.current.$slide.trigger("onReset"),o.$refs.container.empty().remove(),o.trigger("afterClose",t),o.$lastFocus&&o.current.opts.backFocus&&o.$lastFocus.trigger("focus"),o.current=null,e=n.fancybox.getInstance(),e?e.activate():(i.removeClass("fancybox-active compensate-for-scrollbar"),n("#fancybox-style-noscroll").remove())},trigger:function(t,e){var o,i=Array.prototype.slice.call(arguments,1),a=this,s=e&&e.opts?e:a.current;return s?i.unshift(s):s=a,i.unshift(a),n.isFunction(s.opts[t])&&(o=s.opts[t].apply(s,i)),o===!1?o:void("afterClose"!==t&&a.$refs?a.$refs.container.trigger(t+".fb",i):r.trigger(t+".fb",i))},updateControls:function(t){var e=this,n=e.current,o=n.index,i=n.opts.caption,a=e.$refs.container,s=e.$refs.caption;n.$slide.trigger("refresh"),e.$caption=i&&i.length?s.html(i):null,e.isHiddenControls||e.isIdle||e.showControls(),a.find("[data-fancybox-count]").html(e.group.length),a.find("[data-fancybox-index]").html(o+1),a.find("[data-fancybox-prev]").toggleClass("disabled",!n.opts.loop&&o<=0),a.find("[data-fancybox-next]").toggleClass("disabled",!n.opts.loop&&o>=e.group.length-1),"image"===n.type?a.find("[data-fancybox-zoom]").show().end().find("[data-fancybox-download]").attr("href",n.opts.image.src||n.src).show():n.opts.toolbar&&a.find("[data-fancybox-download],[data-fancybox-zoom]").hide()},hideControls:function(){this.isHiddenControls=!0,this.$refs.container.removeClass("fancybox-show-infobar fancybox-show-toolbar fancybox-show-caption fancybox-show-nav")},showControls:function(){var t=this,e=t.current?t.current.opts:t.opts,n=t.$refs.container;t.isHiddenControls=!1,t.idleSecondsCounter=0,n.toggleClass("fancybox-show-toolbar",!(!e.toolbar||!e.buttons)).toggleClass("fancybox-show-infobar",!!(e.infobar&&t.group.length>1)).toggleClass("fancybox-show-nav",!!(e.arrows&&t.group.length>1)).toggleClass("fancybox-is-modal",!!e.modal),t.$caption?n.addClass("fancybox-show-caption "):n.removeClass("fancybox-show-caption")},toggleControls:function(){this.isHiddenControls?this.showControls():this.hideControls()}}),n.fancybox={version:"3.3.5",defaults:a,getInstance:function(t){var e=n('.fancybox-container:not(".fancybox-is-closing"):last').data("FancyBox"),o=Array.prototype.slice.call(arguments,1);return e instanceof h&&("string"===n.type(t)?e[t].apply(e,o):"function"===n.type(t)&&t.apply(e,o),e)},open:function(t,e,n){return new h(t,e,n)},close:function(t){var e=this.getInstance();e&&(e.close(),t===!0&&this.close())},destroy:function(){this.close(!0),r.add("body").off("click.fb-start","**")},isMobile:e.createTouch!==o&&/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent),use3d:function(){var n=e.createElement("div");return t.getComputedStyle&&t.getComputedStyle(n)&&t.getComputedStyle(n).getPropertyValue("transform")&&!(e.documentMode&&e.documentMode<11)}(),getTranslate:function(t){var e;return!(!t||!t.length)&&(e=t[0].getBoundingClientRect(),{top:e.top||0,left:e.left||0,width:e.width,height:e.height,opacity:parseFloat(t.css("opacity"))})},setTranslate:function(t,e){var n="",i={};if(t&&e)return e.left===o&&e.top===o||(n=(e.left===o?t.position().left:e.left)+"px, "+(e.top===o?t.position().top:e.top)+"px",n=this.use3d?"translate3d("+n+", 0px)":"translate("+n+")"),e.scaleX!==o&&e.scaleY!==o&&(n=(n.length?n+" ":"")+"scale("+e.scaleX+", "+e.scaleY+")"),n.length&&(i.transform=n),e.opacity!==o&&(i.opacity=e.opacity),e.width!==o&&(i.width=e.width),e.height!==o&&(i.height=e.height),t.css(i)},animate:function(t,e,i,a,s){var r=!1;n.isFunction(i)&&(a=i,i=null),n.isPlainObject(e)||t.removeAttr("style"),n.fancybox.stop(t),t.on(u,function(o){(!o||!o.originalEvent||t.is(o.originalEvent.target)&&"z-index"!=o.originalEvent.propertyName)&&(n.fancybox.stop(t),r&&n.fancybox.setTranslate(t,r),
n.isPlainObject(e)?s===!1&&t.removeAttr("style"):s!==!0&&t.removeClass(e),n.isFunction(a)&&a(o))}),n.isNumeric(i)&&t.css("transition-duration",i+"ms"),n.isPlainObject(e)?(e.scaleX!==o&&e.scaleY!==o&&(r=n.extend({},e,{width:t.width()*e.scaleX,height:t.height()*e.scaleY,scaleX:1,scaleY:1}),delete e.width,delete e.height,t.parent().hasClass("fancybox-slide--image")&&t.parent().addClass("fancybox-is-scaling")),n.fancybox.setTranslate(t,e)):t.addClass(e),t.data("timer",setTimeout(function(){t.trigger("transitionend")},i+16))},stop:function(t){t&&t.length&&(clearTimeout(t.data("timer")),t.off("transitionend").css("transition-duration",""),t.parent().removeClass("fancybox-is-scaling"))}},n.fn.fancybox=function(t){var e;return t=t||{},e=t.selector||!1,e?n("body").off("click.fb-start",e).on("click.fb-start",e,{options:t},i):this.off("click.fb-start").on("click.fb-start",{items:this,options:t},i),this},r.on("click.fb-start","[data-fancybox]",i),r.on("click.fb-start","[data-trigger]",function(t){i(t,{$target:n('[data-fancybox="'+n(t.currentTarget).attr("data-trigger")+'"]').eq(n(t.currentTarget).attr("data-index")||0),$trigger:n(this)})})}}(window,document,window.jQuery||jQuery),function(t){"use strict";var e=function(e,n,o){if(e)return o=o||"","object"===t.type(o)&&(o=t.param(o,!0)),t.each(n,function(t,n){e=e.replace("$"+t,n||"")}),o.length&&(e+=(e.indexOf("?")>0?"&":"?")+o),e},n={youtube:{matcher:/(youtube\.com|youtu\.be|youtube\-nocookie\.com)\/(watch\?(.*&)?v=|v\/|u\/|embed\/?)?(videoseries\?list=(.*)|[\w-]{11}|\?listType=(.*)&list=(.*))(.*)/i,params:{autoplay:1,autohide:1,fs:1,rel:0,hd:1,wmode:"transparent",enablejsapi:1,html5:1},paramPlace:8,type:"iframe",url:"//www.youtube.com/embed/$4",thumb:"//img.youtube.com/vi/$4/hqdefault.jpg"},vimeo:{matcher:/^.+vimeo.com\/(.*\/)?([\d]+)(.*)?/,params:{autoplay:1,hd:1,show_title:1,show_byline:1,show_portrait:0,fullscreen:1,api:1},paramPlace:3,type:"iframe",url:"//player.vimeo.com/video/$2"},instagram:{matcher:/(instagr\.am|instagram\.com)\/p\/([a-zA-Z0-9_\-]+)\/?/i,type:"image",url:"//$1/p/$2/media/?size=l"},gmap_place:{matcher:/(maps\.)?google\.([a-z]{2,3}(\.[a-z]{2})?)\/(((maps\/(place\/(.*)\/)?\@(.*),(\d+.?\d+?)z))|(\?ll=))(.*)?/i,type:"iframe",url:function(t){return"//maps.google."+t[2]+"/?ll="+(t[9]?t[9]+"&z="+Math.floor(t[10])+(t[12]?t[12].replace(/^\//,"&"):""):t[12]+"").replace(/\?/,"&")+"&output="+(t[12]&&t[12].indexOf("layer=c")>0?"svembed":"embed")}},gmap_search:{matcher:/(maps\.)?google\.([a-z]{2,3}(\.[a-z]{2})?)\/(maps\/search\/)(.*)/i,type:"iframe",url:function(t){return"//maps.google."+t[2]+"/maps?q="+t[5].replace("query=","q=").replace("api=1","")+"&output=embed"}}};t(document).on("objectNeedsType.fb",function(o,i,a){var s,r,c,l,d,u,f,p=a.src||"",h=!1;s=t.extend(!0,{},n,a.opts.media),t.each(s,function(n,o){if(c=p.match(o.matcher)){if(h=o.type,f=n,u={},o.paramPlace&&c[o.paramPlace]){d=c[o.paramPlace],"?"==d[0]&&(d=d.substring(1)),d=d.split("&");for(var i=0;i<d.length;++i){var s=d[i].split("=",2);2==s.length&&(u[s[0]]=decodeURIComponent(s[1].replace(/\+/g," ")))}}return l=t.extend(!0,{},o.params,a.opts[n],u),p="function"===t.type(o.url)?o.url.call(this,c,l,a):e(o.url,c,l),r="function"===t.type(o.thumb)?o.thumb.call(this,c,l,a):e(o.thumb,c),"youtube"===n?p=p.replace(/&t=((\d+)m)?(\d+)s/,function(t,e,n,o){return"&start="+((n?60*parseInt(n,10):0)+parseInt(o,10))}):"vimeo"===n&&(p=p.replace("&%23","#")),!1}}),h?(a.opts.thumb||a.opts.$thumb&&a.opts.$thumb.length||(a.opts.thumb=r),"iframe"===h&&(a.opts=t.extend(!0,a.opts,{iframe:{preload:!1,attr:{scrolling:"no"}}})),t.extend(a,{type:h,src:p,origSrc:a.src,contentSource:f,contentType:"image"===h?"image":"gmap_place"==f||"gmap_search"==f?"map":"video"})):p&&(a.type=a.opts.defaultType)})}(window.jQuery||jQuery),function(t,e,n){"use strict";var o=function(){return t.requestAnimationFrame||t.webkitRequestAnimationFrame||t.mozRequestAnimationFrame||t.oRequestAnimationFrame||function(e){return t.setTimeout(e,1e3/60)}}(),i=function(){return t.cancelAnimationFrame||t.webkitCancelAnimationFrame||t.mozCancelAnimationFrame||t.oCancelAnimationFrame||function(e){t.clearTimeout(e)}}(),a=function(e){var n=[];e=e.originalEvent||e||t.e,e=e.touches&&e.touches.length?e.touches:e.changedTouches&&e.changedTouches.length?e.changedTouches:[e];for(var o in e)e[o].pageX?n.push({x:e[o].pageX,y:e[o].pageY}):e[o].clientX&&n.push({x:e[o].clientX,y:e[o].clientY});return n},s=function(t,e,n){return e&&t?"x"===n?t.x-e.x:"y"===n?t.y-e.y:Math.sqrt(Math.pow(t.x-e.x,2)+Math.pow(t.y-e.y,2)):0},r=function(t){if(t.is('a,area,button,[role="button"],input,label,select,summary,textarea,video,audio')||n.isFunction(t.get(0).onclick)||t.data("selectable"))return!0;for(var e=0,o=t[0].attributes,i=o.length;e<i;e++)if("data-fancybox-"===o[e].nodeName.substr(0,14))return!0;return!1},c=function(e){var n=t.getComputedStyle(e)["overflow-y"],o=t.getComputedStyle(e)["overflow-x"],i=("scroll"===n||"auto"===n)&&e.scrollHeight>e.clientHeight,a=("scroll"===o||"auto"===o)&&e.scrollWidth>e.clientWidth;return i||a},l=function(t){for(var e=!1;;){if(e=c(t.get(0)))break;if(t=t.parent(),!t.length||t.hasClass("fancybox-stage")||t.is("body"))break}return e},d=function(t){var e=this;e.instance=t,e.$bg=t.$refs.bg,e.$stage=t.$refs.stage,e.$container=t.$refs.container,e.destroy(),e.$container.on("touchstart.fb.touch mousedown.fb.touch",n.proxy(e,"ontouchstart"))};d.prototype.destroy=function(){this.$container.off(".fb.touch")},d.prototype.ontouchstart=function(o){var i=this,c=n(o.target),d=i.instance,u=d.current,f=u.$content,p="touchstart"==o.type;if(p&&i.$container.off("mousedown.fb.touch"),(!o.originalEvent||2!=o.originalEvent.button)&&c.length&&!r(c)&&!r(c.parent())&&(c.is("img")||!(o.originalEvent.clientX>c[0].clientWidth+c.offset().left))){if(!u||d.isAnimating||d.isClosing)return o.stopPropagation(),void o.preventDefault();if(i.realPoints=i.startPoints=a(o),i.startPoints.length){if(o.stopPropagation(),i.startEvent=o,i.canTap=!0,i.$target=c,i.$content=f,i.opts=u.opts.touch,i.isPanning=!1,i.isSwiping=!1,i.isZooming=!1,i.isScrolling=!1,i.startTime=(new Date).getTime(),i.distanceX=i.distanceY=i.distance=0,i.canvasWidth=Math.round(u.$slide[0].clientWidth),i.canvasHeight=Math.round(u.$slide[0].clientHeight),i.contentLastPos=null,i.contentStartPos=n.fancybox.getTranslate(i.$content)||{top:0,left:0},i.sliderStartPos=i.sliderLastPos||n.fancybox.getTranslate(u.$slide),i.stagePos=n.fancybox.getTranslate(d.$refs.stage),i.sliderStartPos.top-=i.stagePos.top,i.sliderStartPos.left-=i.stagePos.left,i.contentStartPos.top-=i.stagePos.top,i.contentStartPos.left-=i.stagePos.left,n(e).off(".fb.touch").on(p?"touchend.fb.touch touchcancel.fb.touch":"mouseup.fb.touch mouseleave.fb.touch",n.proxy(i,"ontouchend")).on(p?"touchmove.fb.touch":"mousemove.fb.touch",n.proxy(i,"ontouchmove")),n.fancybox.isMobile&&e.addEventListener("scroll",i.onscroll,!0),!i.opts&&!d.canPan()||!c.is(i.$stage)&&!i.$stage.find(c).length)return void(c.is(".fancybox-image")&&o.preventDefault());n.fancybox.isMobile&&(l(c)||l(c.parent()))||o.preventDefault(),(1===i.startPoints.length||u.hasError)&&(i.instance.canPan()?(n.fancybox.stop(i.$content),i.$content.css("transition-duration",""),i.isPanning=!0):i.isSwiping=!0,i.$container.addClass("fancybox-controls--isGrabbing")),2===i.startPoints.length&&"image"===u.type&&(u.isLoaded||u.$ghost)&&(i.canTap=!1,i.isSwiping=!1,i.isPanning=!1,i.isZooming=!0,n.fancybox.stop(i.$content),i.$content.css("transition-duration",""),i.centerPointStartX=.5*(i.startPoints[0].x+i.startPoints[1].x)-n(t).scrollLeft(),i.centerPointStartY=.5*(i.startPoints[0].y+i.startPoints[1].y)-n(t).scrollTop(),i.percentageOfImageAtPinchPointX=(i.centerPointStartX-i.contentStartPos.left)/i.contentStartPos.width,i.percentageOfImageAtPinchPointY=(i.centerPointStartY-i.contentStartPos.top)/i.contentStartPos.height,i.startDistanceBetweenFingers=s(i.startPoints[0],i.startPoints[1]))}}},d.prototype.onscroll=function(t){var n=this;n.isScrolling=!0,e.removeEventListener("scroll",n.onscroll,!0)},d.prototype.ontouchmove=function(t){var e=this,o=n(t.target);return void 0!==t.originalEvent.buttons&&0===t.originalEvent.buttons?void e.ontouchend(t):e.isScrolling||!o.is(e.$stage)&&!e.$stage.find(o).length?void(e.canTap=!1):(e.newPoints=a(t),void((e.opts||e.instance.canPan())&&e.newPoints.length&&e.newPoints.length&&(e.isSwiping&&e.isSwiping===!0||t.preventDefault(),e.distanceX=s(e.newPoints[0],e.startPoints[0],"x"),e.distanceY=s(e.newPoints[0],e.startPoints[0],"y"),e.distance=s(e.newPoints[0],e.startPoints[0]),e.distance>0&&(e.isSwiping?e.onSwipe(t):e.isPanning?e.onPan():e.isZooming&&e.onZoom()))))},d.prototype.onSwipe=function(e){var a,s=this,r=s.isSwiping,c=s.sliderStartPos.left||0;if(r!==!0)"x"==r&&(s.distanceX>0&&(s.instance.group.length<2||0===s.instance.current.index&&!s.instance.current.opts.loop)?c+=Math.pow(s.distanceX,.8):s.distanceX<0&&(s.instance.group.length<2||s.instance.current.index===s.instance.group.length-1&&!s.instance.current.opts.loop)?c-=Math.pow(-s.distanceX,.8):c+=s.distanceX),s.sliderLastPos={top:"x"==r?0:s.sliderStartPos.top+s.distanceY,left:c},s.requestId&&(i(s.requestId),s.requestId=null),s.requestId=o(function(){s.sliderLastPos&&(n.each(s.instance.slides,function(t,e){var o=e.pos-s.instance.currPos;n.fancybox.setTranslate(e.$slide,{top:s.sliderLastPos.top,left:s.sliderLastPos.left+o*s.canvasWidth+o*e.opts.gutter})}),s.$container.addClass("fancybox-is-sliding"))});else if(Math.abs(s.distance)>10){if(s.canTap=!1,s.instance.group.length<2&&s.opts.vertical?s.isSwiping="y":s.instance.isDragging||s.opts.vertical===!1||"auto"===s.opts.vertical&&n(t).width()>800?s.isSwiping="x":(a=Math.abs(180*Math.atan2(s.distanceY,s.distanceX)/Math.PI),s.isSwiping=a>45&&a<135?"y":"x"),s.canTap=!1,"y"===s.isSwiping&&n.fancybox.isMobile&&(l(s.$target)||l(s.$target.parent())))return void(s.isScrolling=!0);s.instance.isDragging=s.isSwiping,s.startPoints=s.newPoints,n.each(s.instance.slides,function(t,e){n.fancybox.stop(e.$slide),e.$slide.css("transition-duration",""),e.inTransition=!1,e.pos===s.instance.current.pos&&(s.sliderStartPos.left=n.fancybox.getTranslate(e.$slide).left-n.fancybox.getTranslate(s.instance.$refs.stage).left)}),s.instance.SlideShow&&s.instance.SlideShow.isActive&&s.instance.SlideShow.stop()}},d.prototype.onPan=function(){var t=this;return s(t.newPoints[0],t.realPoints[0])<(n.fancybox.isMobile?10:5)?void(t.startPoints=t.newPoints):(t.canTap=!1,t.contentLastPos=t.limitMovement(),t.requestId&&(i(t.requestId),t.requestId=null),void(t.requestId=o(function(){n.fancybox.setTranslate(t.$content,t.contentLastPos)})))},d.prototype.limitMovement=function(){var t,e,n,o,i,a,s=this,r=s.canvasWidth,c=s.canvasHeight,l=s.distanceX,d=s.distanceY,u=s.contentStartPos,f=u.left,p=u.top,h=u.width,g=u.height;return i=h>r?f+l:f,a=p+d,t=Math.max(0,.5*r-.5*h),e=Math.max(0,.5*c-.5*g),n=Math.min(r-h,.5*r-.5*h),o=Math.min(c-g,.5*c-.5*g),l>0&&i>t&&(i=t-1+Math.pow(-t+f+l,.8)||0),l<0&&i<n&&(i=n+1-Math.pow(n-f-l,.8)||0),d>0&&a>e&&(a=e-1+Math.pow(-e+p+d,.8)||0),d<0&&a<o&&(a=o+1-Math.pow(o-p-d,.8)||0),{top:a,left:i}},d.prototype.limitPosition=function(t,e,n,o){var i=this,a=i.canvasWidth,s=i.canvasHeight;return n>a?(t=t>0?0:t,t=t<a-n?a-n:t):t=Math.max(0,a/2-n/2),o>s?(e=e>0?0:e,e=e<s-o?s-o:e):e=Math.max(0,s/2-o/2),{top:e,left:t}},d.prototype.onZoom=function(){var e=this,a=e.contentStartPos,r=a.width,c=a.height,l=a.left,d=a.top,u=s(e.newPoints[0],e.newPoints[1]),f=u/e.startDistanceBetweenFingers,p=Math.floor(r*f),h=Math.floor(c*f),g=(r-p)*e.percentageOfImageAtPinchPointX,b=(c-h)*e.percentageOfImageAtPinchPointY,m=(e.newPoints[0].x+e.newPoints[1].x)/2-n(t).scrollLeft(),y=(e.newPoints[0].y+e.newPoints[1].y)/2-n(t).scrollTop(),v=m-e.centerPointStartX,x=y-e.centerPointStartY,w=l+(g+v),$=d+(b+x),S={top:$,left:w,scaleX:f,scaleY:f};e.canTap=!1,e.newWidth=p,e.newHeight=h,e.contentLastPos=S,e.requestId&&(i(e.requestId),e.requestId=null),e.requestId=o(function(){n.fancybox.setTranslate(e.$content,e.contentLastPos)})},d.prototype.ontouchend=function(t){var o=this,s=Math.max((new Date).getTime()-o.startTime,1),r=o.isSwiping,c=o.isPanning,l=o.isZooming,d=o.isScrolling;return o.endPoints=a(t),o.$container.removeClass("fancybox-controls--isGrabbing"),n(e).off(".fb.touch"),e.removeEventListener("scroll",o.onscroll,!0),o.requestId&&(i(o.requestId),o.requestId=null),o.isSwiping=!1,o.isPanning=!1,o.isZooming=!1,o.isScrolling=!1,o.instance.isDragging=!1,o.canTap?o.onTap(t):(o.speed=366,o.velocityX=o.distanceX/s*.5,o.velocityY=o.distanceY/s*.5,o.speedX=Math.max(.5*o.speed,Math.min(1.5*o.speed,1/Math.abs(o.velocityX)*o.speed)),void(c?o.endPanning():l?o.endZooming():o.endSwiping(r,d)))},d.prototype.endSwiping=function(t,e){var o=this,i=!1,a=o.instance.group.length;o.sliderLastPos=null,"y"==t&&!e&&Math.abs(o.distanceY)>50?(n.fancybox.animate(o.instance.current.$slide,{top:o.sliderStartPos.top+o.distanceY+150*o.velocityY,opacity:0},200),i=o.instance.close(!0,200)):"x"==t&&o.distanceX>50&&a>1?i=o.instance.previous(o.speedX):"x"==t&&o.distanceX<-50&&a>1&&(i=o.instance.next(o.speedX)),i!==!1||"x"!=t&&"y"!=t||(e||a<2?o.instance.centerSlide(o.instance.current,150):o.instance.jumpTo(o.instance.current.index)),o.$container.removeClass("fancybox-is-sliding")},d.prototype.endPanning=function(){var t,e,o,i=this;i.contentLastPos&&(i.opts.momentum===!1?(t=i.contentLastPos.left,e=i.contentLastPos.top):(t=i.contentLastPos.left+i.velocityX*i.speed,e=i.contentLastPos.top+i.velocityY*i.speed),o=i.limitPosition(t,e,i.contentStartPos.width,i.contentStartPos.height),o.width=i.contentStartPos.width,o.height=i.contentStartPos.height,n.fancybox.animate(i.$content,o,330))},d.prototype.endZooming=function(){var t,e,o,i,a=this,s=a.instance.current,r=a.newWidth,c=a.newHeight;a.contentLastPos&&(t=a.contentLastPos.left,e=a.contentLastPos.top,i={top:e,left:t,width:r,height:c,scaleX:1,scaleY:1},n.fancybox.setTranslate(a.$content,i),r<a.canvasWidth&&c<a.canvasHeight?a.instance.scaleToFit(150):r>s.width||c>s.height?a.instance.scaleToActual(a.centerPointStartX,a.centerPointStartY,150):(o=a.limitPosition(t,e,r,c),n.fancybox.setTranslate(a.$content,n.fancybox.getTranslate(a.$content)),n.fancybox.animate(a.$content,o,150)))},d.prototype.onTap=function(e){var o,i=this,s=n(e.target),r=i.instance,c=r.current,l=e&&a(e)||i.startPoints,d=l[0]?l[0].x-n(t).scrollLeft()-i.stagePos.left:0,u=l[0]?l[0].y-n(t).scrollTop()-i.stagePos.top:0,f=function(t){var o=c.opts[t];if(n.isFunction(o)&&(o=o.apply(r,[c,e])),o)switch(o){case"close":r.close(i.startEvent);break;case"toggleControls":r.toggleControls(!0);break;case"next":r.next();break;case"nextOrClose":r.group.length>1?r.next():r.close(i.startEvent);break;case"zoom":"image"==c.type&&(c.isLoaded||c.$ghost)&&(r.canPan()?r.scaleToFit():r.isScaledDown()?r.scaleToActual(d,u):r.group.length<2&&r.close(i.startEvent))}};if((!e.originalEvent||2!=e.originalEvent.button)&&(s.is("img")||!(d>s[0].clientWidth+s.offset().left))){if(s.is(".fancybox-bg,.fancybox-inner,.fancybox-outer,.fancybox-container"))o="Outside";else if(s.is(".fancybox-slide"))o="Slide";else{if(!r.current.$content||!r.current.$content.find(s).addBack().filter(s).length)return;o="Content"}if(i.tapped){if(clearTimeout(i.tapped),i.tapped=null,Math.abs(d-i.tapX)>50||Math.abs(u-i.tapY)>50)return this;f("dblclick"+o)}else i.tapX=d,i.tapY=u,c.opts["dblclick"+o]&&c.opts["dblclick"+o]!==c.opts["click"+o]?i.tapped=setTimeout(function(){i.tapped=null,f("click"+o)},500):f("click"+o);return this}},n(e).on("onActivate.fb",function(t,e){e&&!e.Guestures&&(e.Guestures=new d(e))})}(window,document,window.jQuery||jQuery),function(t,e){"use strict";e.extend(!0,e.fancybox.defaults,{btnTpl:{slideShow:'<button data-fancybox-play class="fancybox-button fancybox-button--play" title="{{PLAY_START}}"><svg viewBox="0 0 40 40"><path d="M13,12 L27,20 L13,27 Z" /><path d="M15,10 v19 M23,10 v19" /></svg></button>'},slideShow:{autoStart:!1,speed:3e3}});var n=function(t){this.instance=t,this.init()};e.extend(n.prototype,{timer:null,isActive:!1,$button:null,init:function(){var t=this;t.$button=t.instance.$refs.toolbar.find("[data-fancybox-play]").on("click",function(){t.toggle()}),(t.instance.group.length<2||!t.instance.group[t.instance.currIndex].opts.slideShow)&&t.$button.hide()},set:function(t){var e=this;e.instance&&e.instance.current&&(t===!0||e.instance.current.opts.loop||e.instance.currIndex<e.instance.group.length-1)?e.timer=setTimeout(function(){e.isActive&&e.instance.jumpTo((e.instance.currIndex+1)%e.instance.group.length)},e.instance.current.opts.slideShow.speed):(e.stop(),e.instance.idleSecondsCounter=0,e.instance.showControls())},clear:function(){var t=this;clearTimeout(t.timer),t.timer=null},start:function(){var t=this,e=t.instance.current;e&&(t.isActive=!0,t.$button.attr("title",e.opts.i18n[e.opts.lang].PLAY_STOP).removeClass("fancybox-button--play").addClass("fancybox-button--pause"),t.set(!0))},stop:function(){var t=this,e=t.instance.current;t.clear(),t.$button.attr("title",e.opts.i18n[e.opts.lang].PLAY_START).removeClass("fancybox-button--pause").addClass("fancybox-button--play"),t.isActive=!1},toggle:function(){var t=this;t.isActive?t.stop():t.start()}}),e(t).on({"onInit.fb":function(t,e){e&&!e.SlideShow&&(e.SlideShow=new n(e))},"beforeShow.fb":function(t,e,n,o){var i=e&&e.SlideShow;o?i&&n.opts.slideShow.autoStart&&i.start():i&&i.isActive&&i.clear()},"afterShow.fb":function(t,e,n){var o=e&&e.SlideShow;o&&o.isActive&&o.set()},"afterKeydown.fb":function(n,o,i,a,s){var r=o&&o.SlideShow;!r||!i.opts.slideShow||80!==s&&32!==s||e(t.activeElement).is("button,a,input")||(a.preventDefault(),r.toggle())},"beforeClose.fb onDeactivate.fb":function(t,e){var n=e&&e.SlideShow;n&&n.stop()}}),e(t).on("visibilitychange",function(){var n=e.fancybox.getInstance(),o=n&&n.SlideShow;o&&o.isActive&&(t.hidden?o.clear():o.set())})}(document,window.jQuery||jQuery),function(t,e){"use strict";var n=function(){for(var e=[["requestFullscreen","exitFullscreen","fullscreenElement","fullscreenEnabled","fullscreenchange","fullscreenerror"],["webkitRequestFullscreen","webkitExitFullscreen","webkitFullscreenElement","webkitFullscreenEnabled","webkitfullscreenchange","webkitfullscreenerror"],["webkitRequestFullScreen","webkitCancelFullScreen","webkitCurrentFullScreenElement","webkitCancelFullScreen","webkitfullscreenchange","webkitfullscreenerror"],["mozRequestFullScreen","mozCancelFullScreen","mozFullScreenElement","mozFullScreenEnabled","mozfullscreenchange","mozfullscreenerror"],["msRequestFullscreen","msExitFullscreen","msFullscreenElement","msFullscreenEnabled","MSFullscreenChange","MSFullscreenError"]],n={},o=0;o<e.length;o++){var i=e[o];if(i&&i[1]in t){for(var a=0;a<i.length;a++)n[e[0][a]]=i[a];return n}}return!1}();if(!n)return void(e&&e.fancybox&&(e.fancybox.defaults.btnTpl.fullScreen=!1));var o={request:function(e){e=e||t.documentElement,e[n.requestFullscreen](e.ALLOW_KEYBOARD_INPUT)},exit:function(){t[n.exitFullscreen]()},toggle:function(e){e=e||t.documentElement,this.isFullscreen()?this.exit():this.request(e)},isFullscreen:function(){return Boolean(t[n.fullscreenElement])},enabled:function(){return Boolean(t[n.fullscreenEnabled])}};e.extend(!0,e.fancybox.defaults,{btnTpl:{fullScreen:'<button data-fancybox-fullscreen class="fancybox-button fancybox-button--fullscreen" title="{{FULL_SCREEN}}"><svg viewBox="0 0 40 40"><path d="M9,12 v16 h22 v-16 h-22 v8" /></svg></button>'},fullScreen:{autoStart:!1}}),e(t).on({"onInit.fb":function(t,e){var n;e&&e.group[e.currIndex].opts.fullScreen?(n=e.$refs.container,n.on("click.fb-fullscreen","[data-fancybox-fullscreen]",function(t){t.stopPropagation(),t.preventDefault(),o.toggle()}),e.opts.fullScreen&&e.opts.fullScreen.autoStart===!0&&o.request(),e.FullScreen=o):e&&e.$refs.toolbar.find("[data-fancybox-fullscreen]").hide()},"afterKeydown.fb":function(t,e,n,o,i){e&&e.FullScreen&&70===i&&(o.preventDefault(),e.FullScreen.toggle())},"beforeClose.fb":function(t,e){e&&e.FullScreen&&e.$refs.container.hasClass("fancybox-is-fullscreen")&&o.exit()}}),e(t).on(n.fullscreenchange,function(){var t=o.isFullscreen(),n=e.fancybox.getInstance();n&&(n.current&&"image"===n.current.type&&n.isAnimating&&(n.current.$content.css("transition","none"),n.isAnimating=!1,n.update(!0,!0,0)),n.trigger("onFullscreenChange",t),n.$refs.container.toggleClass("fancybox-is-fullscreen",t))})}(document,window.jQuery||jQuery),function(t,e){"use strict";var n="fancybox-thumbs",o=n+"-active",i=n+"-loading";e.fancybox.defaults=e.extend(!0,{btnTpl:{thumbs:'<button data-fancybox-thumbs class="fancybox-button fancybox-button--thumbs" title="{{THUMBS}}"><svg viewBox="0 0 120 120"><path d="M30,30 h14 v14 h-14 Z M50,30 h14 v14 h-14 Z M70,30 h14 v14 h-14 Z M30,50 h14 v14 h-14 Z M50,50 h14 v14 h-14 Z M70,50 h14 v14 h-14 Z M30,70 h14 v14 h-14 Z M50,70 h14 v14 h-14 Z M70,70 h14 v14 h-14 Z" /></svg></button>'},thumbs:{autoStart:!1,hideOnClose:!0,parentEl:".fancybox-container",axis:"y"}},e.fancybox.defaults);var a=function(t){this.init(t)};e.extend(a.prototype,{$button:null,$grid:null,$list:null,isVisible:!1,isActive:!1,init:function(t){var e,n,o=this;o.instance=t,t.Thumbs=o,o.opts=t.group[t.currIndex].opts.thumbs,e=t.group[0],e=e.opts.thumb||!(!e.opts.$thumb||!e.opts.$thumb.length)&&e.opts.$thumb.attr("src"),t.group.length>1&&(n=t.group[1],n=n.opts.thumb||!(!n.opts.$thumb||!n.opts.$thumb.length)&&n.opts.$thumb.attr("src")),o.$button=t.$refs.toolbar.find("[data-fancybox-thumbs]"),o.opts&&e&&n&&e&&n?(o.$button.show().on("click",function(){o.toggle()}),o.isActive=!0):o.$button.hide()},create:function(){var t,o=this,a=o.instance,s=o.opts.parentEl,r=[];o.$grid||(o.$grid=e('<div class="'+n+" "+n+"-"+o.opts.axis+'"></div>').appendTo(a.$refs.container.find(s).addBack().filter(s)),o.$grid.on("click","li",function(){a.jumpTo(e(this).attr("data-index"))})),o.$list||(o.$list=e("<ul>").appendTo(o.$grid)),e.each(a.group,function(e,n){t=n.opts.thumb||(n.opts.$thumb?n.opts.$thumb.attr("src"):null),t||"image"!==n.type||(t=n.src),r.push('<li data-index="'+e+'" tabindex="0" class="'+i+'"'+(t&&t.length?' style="background-image:url('+t+')" />':"")+"></li>")}),o.$list[0].innerHTML=r.join(""),"x"===o.opts.axis&&o.$list.width(parseInt(o.$grid.css("padding-right"),10)+a.group.length*o.$list.children().eq(0).outerWidth(!0))},focus:function(t){var e,n,i=this,a=i.$list,s=i.$grid;i.instance.current&&(e=a.children().removeClass(o).filter('[data-index="'+i.instance.current.index+'"]').addClass(o),n=e.position(),"y"===i.opts.axis&&(n.top<0||n.top>a.height()-e.outerHeight())?a.stop().animate({scrollTop:a.scrollTop()+n.top},t):"x"===i.opts.axis&&(n.left<s.scrollLeft()||n.left>s.scrollLeft()+(s.width()-e.outerWidth()))&&a.parent().stop().animate({scrollLeft:n.left},t))},update:function(){var t=this;t.instance.$refs.container.toggleClass("fancybox-show-thumbs",this.isVisible),t.isVisible?(t.$grid||t.create(),t.instance.trigger("onThumbsShow"),t.focus(0)):t.$grid&&t.instance.trigger("onThumbsHide"),t.instance.update()},hide:function(){this.isVisible=!1,this.update()},show:function(){this.isVisible=!0,this.update()},toggle:function(){this.isVisible=!this.isVisible,this.update()}}),e(t).on({"onInit.fb":function(t,e){var n;e&&!e.Thumbs&&(n=new a(e),n.isActive&&n.opts.autoStart===!0&&n.show())},"beforeShow.fb":function(t,e,n,o){var i=e&&e.Thumbs;i&&i.isVisible&&i.focus(o?0:250)},"afterKeydown.fb":function(t,e,n,o,i){var a=e&&e.Thumbs;a&&a.isActive&&71===i&&(o.preventDefault(),a.toggle())},"beforeClose.fb":function(t,e){var n=e&&e.Thumbs;n&&n.isVisible&&n.opts.hideOnClose!==!1&&n.$grid.hide()}})}(document,window.jQuery||jQuery),function(t,e){"use strict";function n(t){var e={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;","/":"&#x2F;","`":"&#x60;","=":"&#x3D;"};return String(t).replace(/[&<>"'`=\/]/g,function(t){return e[t]})}e.extend(!0,e.fancybox.defaults,{btnTpl:{share:'<button data-fancybox-share class="fancybox-button fancybox-button--share" title="{{SHARE}}"><svg viewBox="0 0 40 40"><path d="M6,30 C8,18 19,16 23,16 L23,16 L23,10 L33,20 L23,29 L23,24 C19,24 8,27 6,30 Z"></svg></button>'},share:{url:function(t,e){return!t.currentHash&&"inline"!==e.type&&"html"!==e.type&&(e.origSrc||e.src)||window.location},tpl:'<div class="fancybox-share"><h1>{{SHARE}}</h1><p><a class="fancybox-share__button fancybox-share__button--fb" href="https://www.facebook.com/sharer/sharer.php?u={{url}}"><svg viewBox="0 0 512 512" xmlns="http://www.w3.org/2000/svg"><path d="m287 456v-299c0-21 6-35 35-35h38v-63c-7-1-29-3-55-3-54 0-91 33-91 94v306m143-254h-205v72h196" /></svg><span>Facebook</span></a><a class="fancybox-share__button fancybox-share__button--tw" href="https://twitter.com/intent/tweet?url={{url}}&text={{descr}}"><svg viewBox="0 0 512 512" xmlns="http://www.w3.org/2000/svg"><path d="m456 133c-14 7-31 11-47 13 17-10 30-27 37-46-15 10-34 16-52 20-61-62-157-7-141 75-68-3-129-35-169-85-22 37-11 86 26 109-13 0-26-4-37-9 0 39 28 72 65 80-12 3-25 4-37 2 10 33 41 57 77 57-42 30-77 38-122 34 170 111 378-32 359-208 16-11 30-25 41-42z" /></svg><span>Twitter</span></a><a class="fancybox-share__button fancybox-share__button--pt" href="https://www.pinterest.com/pin/create/button/?url={{url}}&description={{descr}}&media={{media}}"><svg viewBox="0 0 512 512" xmlns="http://www.w3.org/2000/svg"><path d="m265 56c-109 0-164 78-164 144 0 39 15 74 47 87 5 2 10 0 12-5l4-19c2-6 1-8-3-13-9-11-15-25-15-45 0-58 43-110 113-110 62 0 96 38 96 88 0 67-30 122-73 122-24 0-42-19-36-44 6-29 20-60 20-81 0-19-10-35-31-35-25 0-44 26-44 60 0 21 7 36 7 36l-30 125c-8 37-1 83 0 87 0 3 4 4 5 2 2-3 32-39 42-75l16-64c8 16 31 29 56 29 74 0 124-67 124-157 0-69-58-132-146-132z" fill="#fff"/></svg><span>Pinterest</span></a></p><p><input class="fancybox-share__input" type="text" value="{{url_raw}}" /></p></div>'}}),e(t).on("click","[data-fancybox-share]",function(){var t,o,i=e.fancybox.getInstance(),a=i.current||null;a&&("function"===e.type(a.opts.share.url)&&(t=a.opts.share.url.apply(a,[i,a])),o=a.opts.share.tpl.replace(/\{\{media\}\}/g,"image"===a.type?encodeURIComponent(a.src):"").replace(/\{\{url\}\}/g,encodeURIComponent(t)).replace(/\{\{url_raw\}\}/g,n(t)).replace(/\{\{descr\}\}/g,i.$caption?encodeURIComponent(i.$caption.text()):""),e.fancybox.open({src:i.translate(i,o),type:"html",opts:{animationEffect:!1,afterLoad:function(t,e){i.$refs.container.one("beforeClose.fb",function(){t.close(null,0)}),e.$content.find(".fancybox-share__links a").click(function(){return window.open(this.href,"Share","width=550, height=450"),!1})}}}))})}(document,window.jQuery||jQuery),function(t,e,n){"use strict";function o(){var t=e.location.hash.substr(1),n=t.split("-"),o=n.length>1&&/^\+?\d+$/.test(n[n.length-1])?parseInt(n.pop(-1),10)||1:1,i=n.join("-");return{hash:t,index:o<1?1:o,gallery:i}}function i(t){var e;""!==t.gallery&&(e=n("[data-fancybox='"+n.escapeSelector(t.gallery)+"']").eq(t.index-1).trigger("click.fb-start"))}function a(t){var e,n;return!!t&&(e=t.current?t.current.opts:t.opts,n=e.hash||(e.$orig?e.$orig.data("fancybox"):""),""!==n&&n)}n.escapeSelector||(n.escapeSelector=function(t){var e=/([\0-\x1f\x7f]|^-?\d)|^-$|[^\x80-\uFFFF\w-]/g,n=function(t,e){return e?"\0"===t?"�":t.slice(0,-1)+"\\"+t.charCodeAt(t.length-1).toString(16)+" ":"\\"+t};return(t+"").replace(e,n)}),n(function(){n.fancybox.defaults.hash!==!1&&(n(t).on({"onInit.fb":function(t,e){var n,i;e.group[e.currIndex].opts.hash!==!1&&(n=o(),i=a(e),i&&n.gallery&&i==n.gallery&&(e.currIndex=n.index-1))},"beforeShow.fb":function(n,o,i,s){var r;i&&i.opts.hash!==!1&&(r=a(o),r&&(o.currentHash=r+(o.group.length>1?"-"+(i.index+1):""),e.location.hash!=="#"+o.currentHash&&(o.origHash||(o.origHash=e.location.hash),o.hashTimer&&clearTimeout(o.hashTimer),o.hashTimer=setTimeout(function(){"replaceState"in e.history?(e.history[s?"pushState":"replaceState"]({},t.title,e.location.pathname+e.location.search+"#"+o.currentHash),s&&(o.hasCreatedHistory=!0)):e.location.hash=o.currentHash,o.hashTimer=null},300))))},"beforeClose.fb":function(n,o,i){var s;i.opts.hash!==!1&&(s=a(o),o.currentHash&&o.hasCreatedHistory?e.history.back():o.currentHash&&("replaceState"in e.history?e.history.replaceState({},t.title,e.location.pathname+e.location.search+(o.origHash||"")):e.location.hash=o.origHash),o.currentHash=null,clearTimeout(o.hashTimer))}}),n(e).on("hashchange.fb",function(){var t,e=o();n.each(n(".fancybox-container").get().reverse(),function(e,o){var i=n(o).data("FancyBox");if(i.currentHash)return t=i,!1}),t?!t.currentHash||t.currentHash===e.gallery+"-"+e.index||1===e.index&&t.currentHash==e.gallery||(t.currentHash=null,t.close()):""!==e.gallery&&i(e)}),setTimeout(function(){n.fancybox.getInstance()||i(o())},50))})}(document,window,window.jQuery||jQuery),function(t,e){"use strict";var n=(new Date).getTime();e(t).on({"onInit.fb":function(t,e,o){e.$refs.stage.on("mousewheel DOMMouseScroll wheel MozMousePixelScroll",function(t){var o=e.current,i=(new Date).getTime();e.group.length<2||o.opts.wheel===!1||"auto"===o.opts.wheel&&"image"!==o.type||(t.preventDefault(),t.stopPropagation(),o.$slide.hasClass("fancybox-animated")||(t=t.originalEvent||t,i-n<250||(n=i,e[(-t.deltaY||-t.deltaX||t.wheelDelta||-t.detail)<0?"next":"previous"]())))})}})}(document,window.jQuery||jQuery);/*
* jquery-match-height 0.7.2 by @liabru
* http://brm.io/jquery-match-height/
* License MIT
*/
!function(t){"use strict";"function"==typeof define&&define.amd?define(["jquery"],t):"undefined"!=typeof module&&module.exports?module.exports=t(require("jquery")):t(jQuery)}(function(t){var e=-1,o=-1,n=function(t){return parseFloat(t)||0},a=function(e){var o=1,a=t(e),i=null,r=[];return a.each(function(){var e=t(this),a=e.offset().top-n(e.css("margin-top")),s=r.length>0?r[r.length-1]:null;null===s?r.push(e):Math.floor(Math.abs(i-a))<=o?r[r.length-1]=s.add(e):r.push(e),i=a}),r},i=function(e){var o={
byRow:!0,property:"height",target:null,remove:!1};return"object"==typeof e?t.extend(o,e):("boolean"==typeof e?o.byRow=e:"remove"===e&&(o.remove=!0),o)},r=t.fn.matchHeight=function(e){var o=i(e);if(o.remove){var n=this;return this.css(o.property,""),t.each(r._groups,function(t,e){e.elements=e.elements.not(n)}),this}return this.length<=1&&!o.target?this:(r._groups.push({elements:this,options:o}),r._apply(this,o),this)};r.version="0.7.2",r._groups=[],r._throttle=80,r._maintainScroll=!1,r._beforeUpdate=null,
r._afterUpdate=null,r._rows=a,r._parse=n,r._parseOptions=i,r._apply=function(e,o){var s=i(o),h=t(e),l=[h],c=t(window).scrollTop(),p=t("html").outerHeight(!0),u=h.parents().filter(":hidden");return u.each(function(){var e=t(this);e.data("style-cache",e.attr("style"))}),u.css("display","block"),s.byRow&&!s.target&&(h.each(function(){var e=t(this),o=e.css("display");"inline-block"!==o&&"flex"!==o&&"inline-flex"!==o&&(o="block"),e.data("style-cache",e.attr("style")),e.css({display:o,"padding-top":"0",
"padding-bottom":"0","margin-top":"0","margin-bottom":"0","border-top-width":"0","border-bottom-width":"0",height:"100px",overflow:"hidden"})}),l=a(h),h.each(function(){var e=t(this);e.attr("style",e.data("style-cache")||"")})),t.each(l,function(e,o){var a=t(o),i=0;if(s.target)i=s.target.outerHeight(!1);else{if(s.byRow&&a.length<=1)return void a.css(s.property,"");a.each(function(){var e=t(this),o=e.attr("style"),n=e.css("display");"inline-block"!==n&&"flex"!==n&&"inline-flex"!==n&&(n="block");var a={
display:n};a[s.property]="",e.css(a),e.outerHeight(!1)>i&&(i=e.outerHeight(!1)),o?e.attr("style",o):e.css("display","")})}a.each(function(){var e=t(this),o=0;s.target&&e.is(s.target)||("border-box"!==e.css("box-sizing")&&(o+=n(e.css("border-top-width"))+n(e.css("border-bottom-width")),o+=n(e.css("padding-top"))+n(e.css("padding-bottom"))),e.css(s.property,i-o+"px"))})}),u.each(function(){var e=t(this);e.attr("style",e.data("style-cache")||null)}),r._maintainScroll&&t(window).scrollTop(c/p*t("html").outerHeight(!0)),
this},r._applyDataApi=function(){var e={};t("[data-match-height], [data-mh]").each(function(){var o=t(this),n=o.attr("data-mh")||o.attr("data-match-height");n in e?e[n]=e[n].add(o):e[n]=o}),t.each(e,function(){this.matchHeight(!0)})};var s=function(e){r._beforeUpdate&&r._beforeUpdate(e,r._groups),t.each(r._groups,function(){r._apply(this.elements,this.options)}),r._afterUpdate&&r._afterUpdate(e,r._groups)};r._update=function(n,a){if(a&&"resize"===a.type){var i=t(window).width();if(i===e)return;e=i;
}n?o===-1&&(o=setTimeout(function(){s(a),o=-1},r._throttle)):s(a)},t(r._applyDataApi);var h=t.fn.on?"on":"bind";t(window)[h]("load",function(t){r._update(!1,t)}),t(window)[h]("resize orientationchange",function(t){r._update(!0,t)})});/*! jQuery UI - v1.12.1 - 2018-09-17
* http://jqueryui.com
* Includes: widget.js, position.js, form-reset-mixin.js, keycode.js, labels.js, unique-id.js, widgets/menu.js, widgets/selectmenu.js, effect.js, effects/effect-blind.js, effects/effect-bounce.js, effects/effect-clip.js, effects/effect-drop.js, effects/effect-explode.js, effects/effect-fade.js, effects/effect-fold.js, effects/effect-highlight.js, effects/effect-puff.js, effects/effect-pulsate.js, effects/effect-scale.js, effects/effect-shake.js, effects/effect-size.js, effects/effect-slide.js, effects/effect-transfer.js
* Copyright jQuery Foundation and other contributors; Licensed MIT */
(function( factory ) {
	if ( typeof define === "function" && define.amd ) {
		// AMD. Register as an anonymous module.
		define([ "jquery" ], factory );
	} else {
		// Browser globals
		factory( jQuery );
	}
}(function( $ ) {
$.ui = $.ui || {};
var version = $.ui.version = "1.12.1";
/*!
 * jQuery UI Widget 1.12.1
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */
//>>label: Widget
//>>group: Core
//>>description: Provides a factory for creating stateful widgets with a common API.
//>>docs: http://api.jqueryui.com/jQuery.widget/
//>>demos: http://jqueryui.com/widget/
var widgetUuid = 0;
var widgetSlice = Array.prototype.slice;
$.cleanData = ( function( orig ) {
	return function( elems ) {
		var events, elem, i;
		for ( i = 0; ( elem = elems[ i ] ) != null; i++ ) {
			try {
				// Only trigger remove when necessary to save time
				events = $._data( elem, "events" );
				if ( events && events.remove ) {
					$( elem ).triggerHandler( "remove" );
				}
			// Http://bugs.jquery.com/ticket/8235
			} catch ( e ) {}
		}
		orig( elems );
	};
} )( $.cleanData );
$.widget = function( name, base, prototype ) {
	var existingConstructor, constructor, basePrototype;
	// ProxiedPrototype allows the provided prototype to remain unmodified
	// so that it can be used as a mixin for multiple widgets (#8876)
	var proxiedPrototype = {};
	var namespace = name.split( "." )[ 0 ];
	name = name.split( "." )[ 1 ];
	var fullName = namespace + "-" + name;
	if ( !prototype ) {
		prototype = base;
		base = $.Widget;
	}
	if ( $.isArray( prototype ) ) {
		prototype = $.extend.apply( null, [ {} ].concat( prototype ) );
	}
	// Create selector for plugin
	$.expr[ ":" ][ fullName.toLowerCase() ] = function( elem ) {
		return !!$.data( elem, fullName );
	};
	$[ namespace ] = $[ namespace ] || {};
	existingConstructor = $[ namespace ][ name ];
	constructor = $[ namespace ][ name ] = function( options, element ) {
		// Allow instantiation without "new" keyword
		if ( !this._createWidget ) {
			return new constructor( options, element );
		}
		// Allow instantiation without initializing for simple inheritance
		// must use "new" keyword (the code above always passes args)
		if ( arguments.length ) {
			this._createWidget( options, element );
		}
	};
	// Extend with the existing constructor to carry over any static properties
	$.extend( constructor, existingConstructor, {
		version: prototype.version,
		// Copy the object used to create the prototype in case we need to
		// redefine the widget later
		_proto: $.extend( {}, prototype ),
		// Track widgets that inherit from this widget in case this widget is
		// redefined after a widget inherits from it
		_childConstructors: []
	} );
	basePrototype = new base();
	// We need to make the options hash a property directly on the new instance
	// otherwise we'll modify the options hash on the prototype that we're
	// inheriting from
	basePrototype.options = $.widget.extend( {}, basePrototype.options );
	$.each( prototype, function( prop, value ) {
		if ( !$.isFunction( value ) ) {
			proxiedPrototype[ prop ] = value;
			return;
		}
		proxiedPrototype[ prop ] = ( function() {
			function _super() {
				return base.prototype[ prop ].apply( this, arguments );
			}
			function _superApply( args ) {
				return base.prototype[ prop ].apply( this, args );
			}
			return function() {
				var __super = this._super;
				var __superApply = this._superApply;
				var returnValue;
				this._super = _super;
				this._superApply = _superApply;
				returnValue = value.apply( this, arguments );
				this._super = __super;
				this._superApply = __superApply;
				return returnValue;
			};
		} )();
	} );
	constructor.prototype = $.widget.extend( basePrototype, {
		// TODO: remove support for widgetEventPrefix
		// always use the name + a colon as the prefix, e.g., draggable:start
		// don't prefix for widgets that aren't DOM-based
		widgetEventPrefix: existingConstructor ? ( basePrototype.widgetEventPrefix || name ) : name
	}, proxiedPrototype, {
		constructor: constructor,
		namespace: namespace,
		widgetName: name,
		widgetFullName: fullName
	} );
	// If this widget is being redefined then we need to find all widgets that
	// are inheriting from it and redefine all of them so that they inherit from
	// the new version of this widget. We're essentially trying to replace one
	// level in the prototype chain.
	if ( existingConstructor ) {
		$.each( existingConstructor._childConstructors, function( i, child ) {
			var childPrototype = child.prototype;
			// Redefine the child widget using the same prototype that was
			// originally used, but inherit from the new version of the base
			$.widget( childPrototype.namespace + "." + childPrototype.widgetName, constructor,
				child._proto );
		} );
		// Remove the list of existing child constructors from the old constructor
		// so the old child constructors can be garbage collected
		delete existingConstructor._childConstructors;
	} else {
		base._childConstructors.push( constructor );
	}
	$.widget.bridge( name, constructor );
	return constructor;
};
$.widget.extend = function( target ) {
	var input = widgetSlice.call( arguments, 1 );
	var inputIndex = 0;
	var inputLength = input.length;
	var key;
	var value;
	for ( ; inputIndex < inputLength; inputIndex++ ) {
		for ( key in input[ inputIndex ] ) {
			value = input[ inputIndex ][ key ];
			if ( input[ inputIndex ].hasOwnProperty( key ) && value !== undefined ) {
				// Clone objects
				if ( $.isPlainObject( value ) ) {
					target[ key ] = $.isPlainObject( target[ key ] ) ?
						$.widget.extend( {}, target[ key ], value ) :
						// Don't extend strings, arrays, etc. with objects
						$.widget.extend( {}, value );
				// Copy everything else by reference
				} else {
					target[ key ] = value;
				}
			}
		}
	}
	return target;
};
$.widget.bridge = function( name, object ) {
	var fullName = object.prototype.widgetFullName || name;
	$.fn[ name ] = function( options ) {
		var isMethodCall = typeof options === "string";
		var args = widgetSlice.call( arguments, 1 );
		var returnValue = this;
		if ( isMethodCall ) {
			// If this is an empty collection, we need to have the instance method
			// return undefined instead of the jQuery instance
			if ( !this.length && options === "instance" ) {
				returnValue = undefined;
			} else {
				this.each( function() {
					var methodValue;
					var instance = $.data( this, fullName );
					if ( options === "instance" ) {
						returnValue = instance;
						return false;
					}
					if ( !instance ) {
						return $.error( "cannot call methods on " + name +
							" prior to initialization; " +
							"attempted to call method '" + options + "'" );
					}
					if ( !$.isFunction( instance[ options ] ) || options.charAt( 0 ) === "_" ) {
						return $.error( "no such method '" + options + "' for " + name +
							" widget instance" );
					}
					methodValue = instance[ options ].apply( instance, args );
					if ( methodValue !== instance && methodValue !== undefined ) {
						returnValue = methodValue && methodValue.jquery ?
							returnValue.pushStack( methodValue.get() ) :
							methodValue;
						return false;
					}
				} );
			}
		} else {
			// Allow multiple hashes to be passed on init
			if ( args.length ) {
				options = $.widget.extend.apply( null, [ options ].concat( args ) );
			}
			this.each( function() {
				var instance = $.data( this, fullName );
				if ( instance ) {
					instance.option( options || {} );
					if ( instance._init ) {
						instance._init();
					}
				} else {
					$.data( this, fullName, new object( options, this ) );
				}
			} );
		}
		return returnValue;
	};
};
$.Widget = function( /* options, element */ ) {};
$.Widget._childConstructors = [];
$.Widget.prototype = {
	widgetName: "widget",
	widgetEventPrefix: "",
	defaultElement: "<div>",
	options: {
		classes: {},
		disabled: false,
		// Callbacks
		create: null
	},
	_createWidget: function( options, element ) {
		element = $( element || this.defaultElement || this )[ 0 ];
		this.element = $( element );
		this.uuid = widgetUuid++;
		this.eventNamespace = "." + this.widgetName + this.uuid;
		this.bindings = $();
		this.hoverable = $();
		this.focusable = $();
		this.classesElementLookup = {};
		if ( element !== this ) {
			$.data( element, this.widgetFullName, this );
			this._on( true, this.element, {
				remove: function( event ) {
					if ( event.target === element ) {
						this.destroy();
					}
				}
			} );
			this.document = $( element.style ?
				// Element within the document
				element.ownerDocument :
				// Element is window or document
				element.document || element );
			this.window = $( this.document[ 0 ].defaultView || this.document[ 0 ].parentWindow );
		}
		this.options = $.widget.extend( {},
			this.options,
			this._getCreateOptions(),
			options );
		this._create();
		if ( this.options.disabled ) {
			this._setOptionDisabled( this.options.disabled );
		}
		this._trigger( "create", null, this._getCreateEventData() );
		this._init();
	},
	_getCreateOptions: function() {
		return {};
	},
	_getCreateEventData: $.noop,
	_create: $.noop,
	_init: $.noop,
	destroy: function() {
		var that = this;
		this._destroy();
		$.each( this.classesElementLookup, function( key, value ) {
			that._removeClass( value, key );
		} );
		// We can probably remove the unbind calls in 2.0
		// all event bindings should go through this._on()
		this.element
			.off( this.eventNamespace )
			.removeData( this.widgetFullName );
		this.widget()
			.off( this.eventNamespace )
			.removeAttr( "aria-disabled" );
		// Clean up events and states
		this.bindings.off( this.eventNamespace );
	},
	_destroy: $.noop,
	widget: function() {
		return this.element;
	},
	option: function( key, value ) {
		var options = key;
		var parts;
		var curOption;
		var i;
		if ( arguments.length === 0 ) {
			// Don't return a reference to the internal hash
			return $.widget.extend( {}, this.options );
		}
		if ( typeof key === "string" ) {
			// Handle nested keys, e.g., "foo.bar" => { foo: { bar: ___ } }
			options = {};
			parts = key.split( "." );
			key = parts.shift();
			if ( parts.length ) {
				curOption = options[ key ] = $.widget.extend( {}, this.options[ key ] );
				for ( i = 0; i < parts.length - 1; i++ ) {
					curOption[ parts[ i ] ] = curOption[ parts[ i ] ] || {};
					curOption = curOption[ parts[ i ] ];
				}
				key = parts.pop();
				if ( arguments.length === 1 ) {
					return curOption[ key ] === undefined ? null : curOption[ key ];
				}
				curOption[ key ] = value;
			} else {
				if ( arguments.length === 1 ) {
					return this.options[ key ] === undefined ? null : this.options[ key ];
				}
				options[ key ] = value;
			}
		}
		this._setOptions( options );
		return this;
	},
	_setOptions: function( options ) {
		var key;
		for ( key in options ) {
			this._setOption( key, options[ key ] );
		}
		return this;
	},
	_setOption: function( key, value ) {
		if ( key === "classes" ) {
			this._setOptionClasses( value );
		}
		this.options[ key ] = value;
		if ( key === "disabled" ) {
			this._setOptionDisabled( value );
		}
		return this;
	},
	_setOptionClasses: function( value ) {
		var classKey, elements, currentElements;
		for ( classKey in value ) {
			currentElements = this.classesElementLookup[ classKey ];
			if ( value[ classKey ] === this.options.classes[ classKey ] ||
					!currentElements ||
					!currentElements.length ) {
				continue;
			}
			// We are doing this to create a new jQuery object because the _removeClass() call
			// on the next line is going to destroy the reference to the current elements being
			// tracked. We need to save a copy of this collection so that we can add the new classes
			// below.
			elements = $( currentElements.get() );
			this._removeClass( currentElements, classKey );
			// We don't use _addClass() here, because that uses this.options.classes
			// for generating the string of classes. We want to use the value passed in from
			// _setOption(), this is the new value of the classes option which was passed to
			// _setOption(). We pass this value directly to _classes().
			elements.addClass( this._classes( {
				element: elements,
				keys: classKey,
				classes: value,
				add: true
			} ) );
		}
	},
	_setOptionDisabled: function( value ) {
		this._toggleClass( this.widget(), this.widgetFullName + "-disabled", null, !!value );
		// If the widget is becoming disabled, then nothing is interactive
		if ( value ) {
			this._removeClass( this.hoverable, null, "ui-state-hover" );
			this._removeClass( this.focusable, null, "ui-state-focus" );
		}
	},
	enable: function() {
		return this._setOptions( { disabled: false } );
	},
	disable: function() {
		return this._setOptions( { disabled: true } );
	},
	_classes: function( options ) {
		var full = [];
		var that = this;
		options = $.extend( {
			element: this.element,
			classes: this.options.classes || {}
		}, options );
		function processClassString( classes, checkOption ) {
			var current, i;
			for ( i = 0; i < classes.length; i++ ) {
				current = that.classesElementLookup[ classes[ i ] ] || $();
				if ( options.add ) {
					current = $( $.unique( current.get().concat( options.element.get() ) ) );
				} else {
					current = $( current.not( options.element ).get() );
				}
				that.classesElementLookup[ classes[ i ] ] = current;
				full.push( classes[ i ] );
				if ( checkOption && options.classes[ classes[ i ] ] ) {
					full.push( options.classes[ classes[ i ] ] );
				}
			}
		}
		this._on( options.element, {
			"remove": "_untrackClassesElement"
		} );
		if ( options.keys ) {
			processClassString( options.keys.match( /\S+/g ) || [], true );
		}
		if ( options.extra ) {
			processClassString( options.extra.match( /\S+/g ) || [] );
		}
		return full.join( " " );
	},
	_untrackClassesElement: function( event ) {
		var that = this;
		$.each( that.classesElementLookup, function( key, value ) {
			if ( $.inArray( event.target, value ) !== -1 ) {
				that.classesElementLookup[ key ] = $( value.not( event.target ).get() );
			}
		} );
	},
	_removeClass: function( element, keys, extra ) {
		return this._toggleClass( element, keys, extra, false );
	},
	_addClass: function( element, keys, extra ) {
		return this._toggleClass( element, keys, extra, true );
	},
	_toggleClass: function( element, keys, extra, add ) {
		add = ( typeof add === "boolean" ) ? add : extra;
		var shift = ( typeof element === "string" || element === null ),
			options = {
				extra: shift ? keys : extra,
				keys: shift ? element : keys,
				element: shift ? this.element : element,
				add: add
			};
		options.element.toggleClass( this._classes( options ), add );
		return this;
	},
	_on: function( suppressDisabledCheck, element, handlers ) {
		var delegateElement;
		var instance = this;
		// No suppressDisabledCheck flag, shuffle arguments
		if ( typeof suppressDisabledCheck !== "boolean" ) {
			handlers = element;
			element = suppressDisabledCheck;
			suppressDisabledCheck = false;
		}
		// No element argument, shuffle and use this.element
		if ( !handlers ) {
			handlers = element;
			element = this.element;
			delegateElement = this.widget();
		} else {
			element = delegateElement = $( element );
			this.bindings = this.bindings.add( element );
		}
		$.each( handlers, function( event, handler ) {
			function handlerProxy() {
				// Allow widgets to customize the disabled handling
				// - disabled as an array instead of boolean
				// - disabled class as method for disabling individual parts
				if ( !suppressDisabledCheck &&
						( instance.options.disabled === true ||
						$( this ).hasClass( "ui-state-disabled" ) ) ) {
					return;
				}
				return ( typeof handler === "string" ? instance[ handler ] : handler )
					.apply( instance, arguments );
			}
			// Copy the guid so direct unbinding works
			if ( typeof handler !== "string" ) {
				handlerProxy.guid = handler.guid =
					handler.guid || handlerProxy.guid || $.guid++;
			}
			var match = event.match( /^([\w:-]*)\s*(.*)$/ );
			var eventName = match[ 1 ] + instance.eventNamespace;
			var selector = match[ 2 ];
			if ( selector ) {
				delegateElement.on( eventName, selector, handlerProxy );
			} else {
				element.on( eventName, handlerProxy );
			}
		} );
	},
	_off: function( element, eventName ) {
		eventName = ( eventName || "" ).split( " " ).join( this.eventNamespace + " " ) +
			this.eventNamespace;
		element.off( eventName ).off( eventName );
		// Clear the stack to avoid memory leaks (#10056)
		this.bindings = $( this.bindings.not( element ).get() );
		this.focusable = $( this.focusable.not( element ).get() );
		this.hoverable = $( this.hoverable.not( element ).get() );
	},
	_delay: function( handler, delay ) {
		function handlerProxy() {
			return ( typeof handler === "string" ? instance[ handler ] : handler )
				.apply( instance, arguments );
		}
		var instance = this;
		return setTimeout( handlerProxy, delay || 0 );
	},
	_hoverable: function( element ) {
		this.hoverable = this.hoverable.add( element );
		this._on( element, {
			mouseenter: function( event ) {
				this._addClass( $( event.currentTarget ), null, "ui-state-hover" );
			},
			mouseleave: function( event ) {
				this._removeClass( $( event.currentTarget ), null, "ui-state-hover" );
			}
		} );
	},
	_focusable: function( element ) {
		this.focusable = this.focusable.add( element );
		this._on( element, {
			focusin: function( event ) {
				this._addClass( $( event.currentTarget ), null, "ui-state-focus" );
			},
			focusout: function( event ) {
				this._removeClass( $( event.currentTarget ), null, "ui-state-focus" );
			}
		} );
	},
	_trigger: function( type, event, data ) {
		var prop, orig;
		var callback = this.options[ type ];
		data = data || {};
		event = $.Event( event );
		event.type = ( type === this.widgetEventPrefix ?
			type :
			this.widgetEventPrefix + type ).toLowerCase();
		// The original event may come from any element
		// so we need to reset the target on the new event
		event.target = this.element[ 0 ];
		// Copy original event properties over to the new event
		orig = event.originalEvent;
		if ( orig ) {
			for ( prop in orig ) {
				if ( !( prop in event ) ) {
					event[ prop ] = orig[ prop ];
				}
			}
		}
		this.element.trigger( event, data );
		return !( $.isFunction( callback ) &&
			callback.apply( this.element[ 0 ], [ event ].concat( data ) ) === false ||
			event.isDefaultPrevented() );
	}
};
$.each( { show: "fadeIn", hide: "fadeOut" }, function( method, defaultEffect ) {
	$.Widget.prototype[ "_" + method ] = function( element, options, callback ) {
		if ( typeof options === "string" ) {
			options = { effect: options };
		}
		var hasOptions;
		var effectName = !options ?
			method :
			options === true || typeof options === "number" ?
				defaultEffect :
				options.effect || defaultEffect;
		options = options || {};
		if ( typeof options === "number" ) {
			options = { duration: options };
		}
		hasOptions = !$.isEmptyObject( options );
		options.complete = callback;
		if ( options.delay ) {
			element.delay( options.delay );
		}
		if ( hasOptions && $.effects && $.effects.effect[ effectName ] ) {
			element[ method ]( options );
		} else if ( effectName !== method && element[ effectName ] ) {
			element[ effectName ]( options.duration, options.easing, callback );
		} else {
			element.queue( function( next ) {
				$( this )[ method ]();
				if ( callback ) {
					callback.call( element[ 0 ] );
				}
				next();
			} );
		}
	};
} );
var widget = $.widget;
/*!
 * jQuery UI Position 1.12.1
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 *
 * http://api.jqueryui.com/position/
 */
//>>label: Position
//>>group: Core
//>>description: Positions elements relative to other elements.
//>>docs: http://api.jqueryui.com/position/
//>>demos: http://jqueryui.com/position/
( function() {
var cachedScrollbarWidth,
	max = Math.max,
	abs = Math.abs,
	rhorizontal = /left|center|right/,
	rvertical = /top|center|bottom/,
	roffset = /[\+\-]\d+(\.[\d]+)?%?/,
	rposition = /^\w+/,
	rpercent = /%$/,
	_position = $.fn.position;
function getOffsets( offsets, width, height ) {
	return [
		parseFloat( offsets[ 0 ] ) * ( rpercent.test( offsets[ 0 ] ) ? width / 100 : 1 ),
		parseFloat( offsets[ 1 ] ) * ( rpercent.test( offsets[ 1 ] ) ? height / 100 : 1 )
	];
}
function parseCss( element, property ) {
	return parseInt( $.css( element, property ), 10 ) || 0;
}
function getDimensions( elem ) {
	var raw = elem[ 0 ];
	if ( raw.nodeType === 9 ) {
		return {
			width: elem.width(),
			height: elem.height(),
			offset: { top: 0, left: 0 }
		};
	}
	if ( $.isWindow( raw ) ) {
		return {
			width: elem.width(),
			height: elem.height(),
			offset: { top: elem.scrollTop(), left: elem.scrollLeft() }
		};
	}
	if ( raw.preventDefault ) {
		return {
			width: 0,
			height: 0,
			offset: { top: raw.pageY, left: raw.pageX }
		};
	}
	return {
		width: elem.outerWidth(),
		height: elem.outerHeight(),
		offset: elem.offset()
	};
}
$.position = {
	scrollbarWidth: function() {
		if ( cachedScrollbarWidth !== undefined ) {
			return cachedScrollbarWidth;
		}
		var w1, w2,
			div = $( "<div " +
				"style='display:block;position:absolute;width:50px;height:50px;overflow:hidden;'>" +
				"<div style='height:100px;width:auto;'></div></div>" ),
			innerDiv = div.children()[ 0 ];
		$( "body" ).append( div );
		w1 = innerDiv.offsetWidth;
		div.css( "overflow", "scroll" );
		w2 = innerDiv.offsetWidth;
		if ( w1 === w2 ) {
			w2 = div[ 0 ].clientWidth;
		}
		div.remove();
		return ( cachedScrollbarWidth = w1 - w2 );
	},
	getScrollInfo: function( within ) {
		var overflowX = within.isWindow || within.isDocument ? "" :
				within.element.css( "overflow-x" ),
			overflowY = within.isWindow || within.isDocument ? "" :
				within.element.css( "overflow-y" ),
			hasOverflowX = overflowX === "scroll" ||
				( overflowX === "auto" && within.width < within.element[ 0 ].scrollWidth ),
			hasOverflowY = overflowY === "scroll" ||
				( overflowY === "auto" && within.height < within.element[ 0 ].scrollHeight );
		return {
			width: hasOverflowY ? $.position.scrollbarWidth() : 0,
			height: hasOverflowX ? $.position.scrollbarWidth() : 0
		};
	},
	getWithinInfo: function( element ) {
		var withinElement = $( element || window ),
			isWindow = $.isWindow( withinElement[ 0 ] ),
			isDocument = !!withinElement[ 0 ] && withinElement[ 0 ].nodeType === 9,
			hasOffset = !isWindow && !isDocument;
		return {
			element: withinElement,
			isWindow: isWindow,
			isDocument: isDocument,
			offset: hasOffset ? $( element ).offset() : { left: 0, top: 0 },
			scrollLeft: withinElement.scrollLeft(),
			scrollTop: withinElement.scrollTop(),
			width: withinElement.outerWidth(),
			height: withinElement.outerHeight()
		};
	}
};
$.fn.position = function( options ) {
	if ( !options || !options.of ) {
		return _position.apply( this, arguments );
	}
	// Make a copy, we don't want to modify arguments
	options = $.extend( {}, options );
	var atOffset, targetWidth, targetHeight, targetOffset, basePosition, dimensions,
		target = $( options.of ),
		within = $.position.getWithinInfo( options.within ),
		scrollInfo = $.position.getScrollInfo( within ),
		collision = ( options.collision || "flip" ).split( " " ),
		offsets = {};
	dimensions = getDimensions( target );
	if ( target[ 0 ].preventDefault ) {
		// Force left top to allow flipping
		options.at = "left top";
	}
	targetWidth = dimensions.width;
	targetHeight = dimensions.height;
	targetOffset = dimensions.offset;
	// Clone to reuse original targetOffset later
	basePosition = $.extend( {}, targetOffset );
	// Force my and at to have valid horizontal and vertical positions
	// if a value is missing or invalid, it will be converted to center
	$.each( [ "my", "at" ], function() {
		var pos = ( options[ this ] || "" ).split( " " ),
			horizontalOffset,
			verticalOffset;
		if ( pos.length === 1 ) {
			pos = rhorizontal.test( pos[ 0 ] ) ?
				pos.concat( [ "center" ] ) :
				rvertical.test( pos[ 0 ] ) ?
					[ "center" ].concat( pos ) :
					[ "center", "center" ];
		}
		pos[ 0 ] = rhorizontal.test( pos[ 0 ] ) ? pos[ 0 ] : "center";
		pos[ 1 ] = rvertical.test( pos[ 1 ] ) ? pos[ 1 ] : "center";
		// Calculate offsets
		horizontalOffset = roffset.exec( pos[ 0 ] );
		verticalOffset = roffset.exec( pos[ 1 ] );
		offsets[ this ] = [
			horizontalOffset ? horizontalOffset[ 0 ] : 0,
			verticalOffset ? verticalOffset[ 0 ] : 0
		];
		// Reduce to just the positions without the offsets
		options[ this ] = [
			rposition.exec( pos[ 0 ] )[ 0 ],
			rposition.exec( pos[ 1 ] )[ 0 ]
		];
	} );
	// Normalize collision option
	if ( collision.length === 1 ) {
		collision[ 1 ] = collision[ 0 ];
	}
	if ( options.at[ 0 ] === "right" ) {
		basePosition.left += targetWidth;
	} else if ( options.at[ 0 ] === "center" ) {
		basePosition.left += targetWidth / 2;
	}
	if ( options.at[ 1 ] === "bottom" ) {
		basePosition.top += targetHeight;
	} else if ( options.at[ 1 ] === "center" ) {
		basePosition.top += targetHeight / 2;
	}
	atOffset = getOffsets( offsets.at, targetWidth, targetHeight );
	basePosition.left += atOffset[ 0 ];
	basePosition.top += atOffset[ 1 ];
	return this.each( function() {
		var collisionPosition, using,
			elem = $( this ),
			elemWidth = elem.outerWidth(),
			elemHeight = elem.outerHeight(),
			marginLeft = parseCss( this, "marginLeft" ),
			marginTop = parseCss( this, "marginTop" ),
			collisionWidth = elemWidth + marginLeft + parseCss( this, "marginRight" ) +
				scrollInfo.width,
			collisionHeight = elemHeight + marginTop + parseCss( this, "marginBottom" ) +
				scrollInfo.height,
			position = $.extend( {}, basePosition ),
			myOffset = getOffsets( offsets.my, elem.outerWidth(), elem.outerHeight() );
		if ( options.my[ 0 ] === "right" ) {
			position.left -= elemWidth;
		} else if ( options.my[ 0 ] === "center" ) {
			position.left -= elemWidth / 2;
		}
		if ( options.my[ 1 ] === "bottom" ) {
			position.top -= elemHeight;
		} else if ( options.my[ 1 ] === "center" ) {
			position.top -= elemHeight / 2;
		}
		position.left += myOffset[ 0 ];
		position.top += myOffset[ 1 ];
		collisionPosition = {
			marginLeft: marginLeft,
			marginTop: marginTop
		};
		$.each( [ "left", "top" ], function( i, dir ) {
			if ( $.ui.position[ collision[ i ] ] ) {
				$.ui.position[ collision[ i ] ][ dir ]( position, {
					targetWidth: targetWidth,
					targetHeight: targetHeight,
					elemWidth: elemWidth,
					elemHeight: elemHeight,
					collisionPosition: collisionPosition,
					collisionWidth: collisionWidth,
					collisionHeight: collisionHeight,
					offset: [ atOffset[ 0 ] + myOffset[ 0 ], atOffset [ 1 ] + myOffset[ 1 ] ],
					my: options.my,
					at: options.at,
					within: within,
					elem: elem
				} );
			}
		} );
		if ( options.using ) {
			// Adds feedback as second argument to using callback, if present
			using = function( props ) {
				var left = targetOffset.left - position.left,
					right = left + targetWidth - elemWidth,
					top = targetOffset.top - position.top,
					bottom = top + targetHeight - elemHeight,
					feedback = {
						target: {
							element: target,
							left: targetOffset.left,
							top: targetOffset.top,
							width: targetWidth,
							height: targetHeight
						},
						element: {
							element: elem,
							left: position.left,
							top: position.top,
							width: elemWidth,
							height: elemHeight
						},
						horizontal: right < 0 ? "left" : left > 0 ? "right" : "center",
						vertical: bottom < 0 ? "top" : top > 0 ? "bottom" : "middle"
					};
				if ( targetWidth < elemWidth && abs( left + right ) < targetWidth ) {
					feedback.horizontal = "center";
				}
				if ( targetHeight < elemHeight && abs( top + bottom ) < targetHeight ) {
					feedback.vertical = "middle";
				}
				if ( max( abs( left ), abs( right ) ) > max( abs( top ), abs( bottom ) ) ) {
					feedback.important = "horizontal";
				} else {
					feedback.important = "vertical";
				}
				options.using.call( this, props, feedback );
			};
		}
		elem.offset( $.extend( position, { using: using } ) );
	} );
};
$.ui.position = {
	fit: {
		left: function( position, data ) {
			var within = data.within,
				withinOffset = within.isWindow ? within.scrollLeft : within.offset.left,
				outerWidth = within.width,
				collisionPosLeft = position.left - data.collisionPosition.marginLeft,
				overLeft = withinOffset - collisionPosLeft,
				overRight = collisionPosLeft + data.collisionWidth - outerWidth - withinOffset,
				newOverRight;
			// Element is wider than within
			if ( data.collisionWidth > outerWidth ) {
				// Element is initially over the left side of within
				if ( overLeft > 0 && overRight <= 0 ) {
					newOverRight = position.left + overLeft + data.collisionWidth - outerWidth -
						withinOffset;
					position.left += overLeft - newOverRight;
				// Element is initially over right side of within
				} else if ( overRight > 0 && overLeft <= 0 ) {
					position.left = withinOffset;
				// Element is initially over both left and right sides of within
				} else {
					if ( overLeft > overRight ) {
						position.left = withinOffset + outerWidth - data.collisionWidth;
					} else {
						position.left = withinOffset;
					}
				}
			// Too far left -> align with left edge
			} else if ( overLeft > 0 ) {
				position.left += overLeft;
			// Too far right -> align with right edge
			} else if ( overRight > 0 ) {
				position.left -= overRight;
			// Adjust based on position and margin
			} else {
				position.left = max( position.left - collisionPosLeft, position.left );
			}
		},
		top: function( position, data ) {
			var within = data.within,
				withinOffset = within.isWindow ? within.scrollTop : within.offset.top,
				outerHeight = data.within.height,
				collisionPosTop = position.top - data.collisionPosition.marginTop,
				overTop = withinOffset - collisionPosTop,
				overBottom = collisionPosTop + data.collisionHeight - outerHeight - withinOffset,
				newOverBottom;
			// Element is taller than within
			if ( data.collisionHeight > outerHeight ) {
				// Element is initially over the top of within
				if ( overTop > 0 && overBottom <= 0 ) {
					newOverBottom = position.top + overTop + data.collisionHeight - outerHeight -
						withinOffset;
					position.top += overTop - newOverBottom;
				// Element is initially over bottom of within
				} else if ( overBottom > 0 && overTop <= 0 ) {
					position.top = withinOffset;
				// Element is initially over both top and bottom of within
				} else {
					if ( overTop > overBottom ) {
						position.top = withinOffset + outerHeight - data.collisionHeight;
					} else {
						position.top = withinOffset;
					}
				}
			// Too far up -> align with top
			} else if ( overTop > 0 ) {
				position.top += overTop;
			// Too far down -> align with bottom edge
			} else if ( overBottom > 0 ) {
				position.top -= overBottom;
			// Adjust based on position and margin
			} else {
				position.top = max( position.top - collisionPosTop, position.top );
			}
		}
	},
	flip: {
		left: function( position, data ) {
			var within = data.within,
				withinOffset = within.offset.left + within.scrollLeft,
				outerWidth = within.width,
				offsetLeft = within.isWindow ? within.scrollLeft : within.offset.left,
				collisionPosLeft = position.left - data.collisionPosition.marginLeft,
				overLeft = collisionPosLeft - offsetLeft,
				overRight = collisionPosLeft + data.collisionWidth - outerWidth - offsetLeft,
				myOffset = data.my[ 0 ] === "left" ?
					-data.elemWidth :
					data.my[ 0 ] === "right" ?
						data.elemWidth :
						0,
				atOffset = data.at[ 0 ] === "left" ?
					data.targetWidth :
					data.at[ 0 ] === "right" ?
						-data.targetWidth :
						0,
				offset = -2 * data.offset[ 0 ],
				newOverRight,
				newOverLeft;
			if ( overLeft < 0 ) {
				newOverRight = position.left + myOffset + atOffset + offset + data.collisionWidth -
					outerWidth - withinOffset;
				if ( newOverRight < 0 || newOverRight < abs( overLeft ) ) {
					position.left += myOffset + atOffset + offset;
				}
			} else if ( overRight > 0 ) {
				newOverLeft = position.left - data.collisionPosition.marginLeft + myOffset +
					atOffset + offset - offsetLeft;
				if ( newOverLeft > 0 || abs( newOverLeft ) < overRight ) {
					position.left += myOffset + atOffset + offset;
				}
			}
		},
		top: function( position, data ) {
			var within = data.within,
				withinOffset = within.offset.top + within.scrollTop,
				outerHeight = within.height,
				offsetTop = within.isWindow ? within.scrollTop : within.offset.top,
				collisionPosTop = position.top - data.collisionPosition.marginTop,
				overTop = collisionPosTop - offsetTop,
				overBottom = collisionPosTop + data.collisionHeight - outerHeight - offsetTop,
				top = data.my[ 1 ] === "top",
				myOffset = top ?
					-data.elemHeight :
					data.my[ 1 ] === "bottom" ?
						data.elemHeight :
						0,
				atOffset = data.at[ 1 ] === "top" ?
					data.targetHeight :
					data.at[ 1 ] === "bottom" ?
						-data.targetHeight :
						0,
				offset = -2 * data.offset[ 1 ],
				newOverTop,
				newOverBottom;
			if ( overTop < 0 ) {
				newOverBottom = position.top + myOffset + atOffset + offset + data.collisionHeight -
					outerHeight - withinOffset;
				if ( newOverBottom < 0 || newOverBottom < abs( overTop ) ) {
					position.top += myOffset + atOffset + offset;
				}
			} else if ( overBottom > 0 ) {
				newOverTop = position.top - data.collisionPosition.marginTop + myOffset + atOffset +
					offset - offsetTop;
				if ( newOverTop > 0 || abs( newOverTop ) < overBottom ) {
					position.top += myOffset + atOffset + offset;
				}
			}
		}
	},
	flipfit: {
		left: function() {
			$.ui.position.flip.left.apply( this, arguments );
			$.ui.position.fit.left.apply( this, arguments );
		},
		top: function() {
			$.ui.position.flip.top.apply( this, arguments );
			$.ui.position.fit.top.apply( this, arguments );
		}
	}
};
} )();
var position = $.ui.position;
// Support: IE8 Only
// IE8 does not support the form attribute and when it is supplied. It overwrites the form prop
// with a string, so we need to find the proper form.
var form = $.fn.form = function() {
	return typeof this[ 0 ].form === "string" ? this.closest( "form" ) : $( this[ 0 ].form );
};
/*!
 * jQuery UI Form Reset Mixin 1.12.1
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */
//>>label: Form Reset Mixin
//>>group: Core
//>>description: Refresh input widgets when their form is reset
//>>docs: http://api.jqueryui.com/form-reset-mixin/
var formResetMixin = $.ui.formResetMixin = {
	_formResetHandler: function() {
		var form = $( this );
		// Wait for the form reset to actually happen before refreshing
		setTimeout( function() {
			var instances = form.data( "ui-form-reset-instances" );
			$.each( instances, function() {
				this.refresh();
			} );
		} );
	},
	_bindFormResetHandler: function() {
		this.form = this.element.form();
		if ( !this.form.length ) {
			return;
		}
		var instances = this.form.data( "ui-form-reset-instances" ) || [];
		if ( !instances.length ) {
			// We don't use _on() here because we use a single event handler per form
			this.form.on( "reset.ui-form-reset", this._formResetHandler );
		}
		instances.push( this );
		this.form.data( "ui-form-reset-instances", instances );
	},
	_unbindFormResetHandler: function() {
		if ( !this.form.length ) {
			return;
		}
		var instances = this.form.data( "ui-form-reset-instances" );
		instances.splice( $.inArray( this, instances ), 1 );
		if ( instances.length ) {
			this.form.data( "ui-form-reset-instances", instances );
		} else {
			this.form
				.removeData( "ui-form-reset-instances" )
				.off( "reset.ui-form-reset" );
		}
	}
};
/*!
 * jQuery UI Keycode 1.12.1
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */
//>>label: Keycode
//>>group: Core
//>>description: Provide keycodes as keynames
//>>docs: http://api.jqueryui.com/jQuery.ui.keyCode/
var keycode = $.ui.keyCode = {
	BACKSPACE: 8,
	COMMA: 188,
	DELETE: 46,
	DOWN: 40,
	END: 35,
	ENTER: 13,
	ESCAPE: 27,
	HOME: 36,
	LEFT: 37,
	PAGE_DOWN: 34,
	PAGE_UP: 33,
	PERIOD: 190,
	RIGHT: 39,
	SPACE: 32,
	TAB: 9,
	UP: 38
};
// Internal use only
var escapeSelector = $.ui.escapeSelector = ( function() {
	var selectorEscape = /([!"#$%&'()*+,./:;<=>?@[\]^`{|}~])/g;
	return function( selector ) {
		return selector.replace( selectorEscape, "\\$1" );
	};
} )();
/*!
 * jQuery UI Labels 1.12.1
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */
//>>label: labels
//>>group: Core
//>>description: Find all the labels associated with a given input
//>>docs: http://api.jqueryui.com/labels/
var labels = $.fn.labels = function() {
	var ancestor, selector, id, labels, ancestors;
	// Check control.labels first
	if ( this[ 0 ].labels && this[ 0 ].labels.length ) {
		return this.pushStack( this[ 0 ].labels );
	}
	// Support: IE <= 11, FF <= 37, Android <= 2.3 only
	// Above browsers do not support control.labels. Everything below is to support them
	// as well as document fragments. control.labels does not work on document fragments
	labels = this.eq( 0 ).parents( "label" );
	// Look for the label based on the id
	id = this.attr( "id" );
	if ( id ) {
		// We don't search against the document in case the element
		// is disconnected from the DOM
		ancestor = this.eq( 0 ).parents().last();
		// Get a full set of top level ancestors
		ancestors = ancestor.add( ancestor.length ? ancestor.siblings() : this.siblings() );
		// Create a selector for the label based on the id
		selector = "label[for='" + $.ui.escapeSelector( id ) + "']";
		labels = labels.add( ancestors.find( selector ).addBack( selector ) );
	}
	// Return whatever we have found for labels
	return this.pushStack( labels );
};
/*!
 * jQuery UI Unique ID 1.12.1
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */
//>>label: uniqueId
//>>group: Core
//>>description: Functions to generate and remove uniqueId's
//>>docs: http://api.jqueryui.com/uniqueId/
var uniqueId = $.fn.extend( {
	uniqueId: ( function() {
		var uuid = 0;
		return function() {
			return this.each( function() {
				if ( !this.id ) {
					this.id = "ui-id-" + ( ++uuid );
				}
			} );
		};
	} )(),
	removeUniqueId: function() {
		return this.each( function() {
			if ( /^ui-id-\d+$/.test( this.id ) ) {
				$( this ).removeAttr( "id" );
			}
		} );
	}
} );
var safeActiveElement = $.ui.safeActiveElement = function( document ) {
	var activeElement;
	// Support: IE 9 only
	// IE9 throws an "Unspecified error" accessing document.activeElement from an <iframe>
	try {
		activeElement = document.activeElement;
	} catch ( error ) {
		activeElement = document.body;
	}
	// Support: IE 9 - 11 only
	// IE may return null instead of an element
	// Interestingly, this only seems to occur when NOT in an iframe
	if ( !activeElement ) {
		activeElement = document.body;
	}
	// Support: IE 11 only
	// IE11 returns a seemingly empty object in some cases when accessing
	// document.activeElement from an <iframe>
	if ( !activeElement.nodeName ) {
		activeElement = document.body;
	}
	return activeElement;
};
/*!
 * jQuery UI Menu 1.12.1
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */
//>>label: Menu
//>>group: Widgets
//>>description: Creates nestable menus.
//>>docs: http://api.jqueryui.com/menu/
//>>demos: http://jqueryui.com/menu/
//>>css.structure: ../../themes/base/core.css
//>>css.structure: ../../themes/base/menu.css
//>>css.theme: ../../themes/base/theme.css
var widgetsMenu = $.widget( "ui.menu", {
	version: "1.12.1",
	defaultElement: "<ul>",
	delay: 300,
	options: {
		icons: {
			submenu: "ui-icon-caret-1-e"
		},
		items: "> *",
		menus: "ul",
		position: {
			my: "left top",
			at: "right top"
		},
		role: "menu",
		// Callbacks
		blur: null,
		focus: null,
		select: null
	},
	_create: function() {
		this.activeMenu = this.element;
		// Flag used to prevent firing of the click handler
		// as the event bubbles up through nested menus
		this.mouseHandled = false;
		this.element
			.uniqueId()
			.attr( {
				role: this.options.role,
				tabIndex: 0
			} );
		this._addClass( "ui-menu", "ui-widget ui-widget-content" );
		this._on( {
			// Prevent focus from sticking to links inside menu after clicking
			// them (focus should always stay on UL during navigation).
			"mousedown .ui-menu-item": function( event ) {
				event.preventDefault();
			},
			"click .ui-menu-item": function( event ) {
				var target = $( event.target );
				var active = $( $.ui.safeActiveElement( this.document[ 0 ] ) );
				if ( !this.mouseHandled && target.not( ".ui-state-disabled" ).length ) {
					this.select( event );
					// Only set the mouseHandled flag if the event will bubble, see #9469.
					if ( !event.isPropagationStopped() ) {
						this.mouseHandled = true;
					}
					// Open submenu on click
					if ( target.has( ".ui-menu" ).length ) {
						this.expand( event );
					} else if ( !this.element.is( ":focus" ) &&
							active.closest( ".ui-menu" ).length ) {
						// Redirect focus to the menu
						this.element.trigger( "focus", [ true ] );
						// If the active item is on the top level, let it stay active.
						// Otherwise, blur the active item since it is no longer visible.
						if ( this.active && this.active.parents( ".ui-menu" ).length === 1 ) {
							clearTimeout( this.timer );
						}
					}
				}
			},
			"mouseenter .ui-menu-item": function( event ) {
				// Ignore mouse events while typeahead is active, see #10458.
				// Prevents focusing the wrong item when typeahead causes a scroll while the mouse
				// is over an item in the menu
				if ( this.previousFilter ) {
					return;
				}
				var actualTarget = $( event.target ).closest( ".ui-menu-item" ),
					target = $( event.currentTarget );
				// Ignore bubbled events on parent items, see #11641
				if ( actualTarget[ 0 ] !== target[ 0 ] ) {
					return;
				}
				// Remove ui-state-active class from siblings of the newly focused menu item
				// to avoid a jump caused by adjacent elements both having a class with a border
				this._removeClass( target.siblings().children( ".ui-state-active" ),
					null, "ui-state-active" );
				this.focus( event, target );
			},
			mouseleave: "collapseAll",
			"mouseleave .ui-menu": "collapseAll",
			focus: function( event, keepActiveItem ) {
				// If there's already an active item, keep it active
				// If not, activate the first item
				var item = this.active || this.element.find( this.options.items ).eq( 0 );
				if ( !keepActiveItem ) {
					this.focus( event, item );
				}
			},
			blur: function( event ) {
				this._delay( function() {
					var notContained = !$.contains(
						this.element[ 0 ],
						$.ui.safeActiveElement( this.document[ 0 ] )
					);
					if ( notContained ) {
						this.collapseAll( event );
					}
				} );
			},
			keydown: "_keydown"
		} );
		this.refresh();
		// Clicks outside of a menu collapse any open menus
		this._on( this.document, {
			click: function( event ) {
				if ( this._closeOnDocumentClick( event ) ) {
					this.collapseAll( event );
				}
				// Reset the mouseHandled flag
				this.mouseHandled = false;
			}
		} );
	},
	_destroy: function() {
		var items = this.element.find( ".ui-menu-item" )
				.removeAttr( "role aria-disabled" ),
			submenus = items.children( ".ui-menu-item-wrapper" )
				.removeUniqueId()
				.removeAttr( "tabIndex role aria-haspopup" );
		// Destroy (sub)menus
		this.element
			.removeAttr( "aria-activedescendant" )
			.find( ".ui-menu" ).addBack()
				.removeAttr( "role aria-labelledby aria-expanded aria-hidden aria-disabled " +
					"tabIndex" )
				.removeUniqueId()
				.show();
		submenus.children().each( function() {
			var elem = $( this );
			if ( elem.data( "ui-menu-submenu-caret" ) ) {
				elem.remove();
			}
		} );
	},
	_keydown: function( event ) {
		var match, prev, character, skip,
			preventDefault = true;
		switch ( event.keyCode ) {
		case $.ui.keyCode.PAGE_UP:
			this.previousPage( event );
			break;
		case $.ui.keyCode.PAGE_DOWN:
			this.nextPage( event );
			break;
		case $.ui.keyCode.HOME:
			this._move( "first", "first", event );
			break;
		case $.ui.keyCode.END:
			this._move( "last", "last", event );
			break;
		case $.ui.keyCode.UP:
			this.previous( event );
			break;
		case $.ui.keyCode.DOWN:
			this.next( event );
			break;
		case $.ui.keyCode.LEFT:
			this.collapse( event );
			break;
		case $.ui.keyCode.RIGHT:
			if ( this.active && !this.active.is( ".ui-state-disabled" ) ) {
				this.expand( event );
			}
			break;
		case $.ui.keyCode.ENTER:
		case $.ui.keyCode.SPACE:
			this._activate( event );
			break;
		case $.ui.keyCode.ESCAPE:
			this.collapse( event );
			break;
		default:
			preventDefault = false;
			prev = this.previousFilter || "";
			skip = false;
			// Support number pad values
			character = event.keyCode >= 96 && event.keyCode <= 105 ?
				( event.keyCode - 96 ).toString() : String.fromCharCode( event.keyCode );
			clearTimeout( this.filterTimer );
			if ( character === prev ) {
				skip = true;
			} else {
				character = prev + character;
			}
			match = this._filterMenuItems( character );
			match = skip && match.index( this.active.next() ) !== -1 ?
				this.active.nextAll( ".ui-menu-item" ) :
				match;
			// If no matches on the current filter, reset to the last character pressed
			// to move down the menu to the first item that starts with that character
			if ( !match.length ) {
				character = String.fromCharCode( event.keyCode );
				match = this._filterMenuItems( character );
			}
			if ( match.length ) {
				this.focus( event, match );
				this.previousFilter = character;
				this.filterTimer = this._delay( function() {
					delete this.previousFilter;
				}, 1000 );
			} else {
				delete this.previousFilter;
			}
		}
		if ( preventDefault ) {
			event.preventDefault();
		}
	},
	_activate: function( event ) {
		if ( this.active && !this.active.is( ".ui-state-disabled" ) ) {
			if ( this.active.children( "[aria-haspopup='true']" ).length ) {
				this.expand( event );
			} else {
				this.select( event );
			}
		}
	},
	refresh: function() {
		var menus, items, newSubmenus, newItems, newWrappers,
			that = this,
			icon = this.options.icons.submenu,
			submenus = this.element.find( this.options.menus );
		this._toggleClass( "ui-menu-icons", null, !!this.element.find( ".ui-icon" ).length );
		// Initialize nested menus
		newSubmenus = submenus.filter( ":not(.ui-menu)" )
			.hide()
			.attr( {
				role: this.options.role,
				"aria-hidden": "true",
				"aria-expanded": "false"
			} )
			.each( function() {
				var menu = $( this ),
					item = menu.prev(),
					submenuCaret = $( "<span>" ).data( "ui-menu-submenu-caret", true );
				that._addClass( submenuCaret, "ui-menu-icon", "ui-icon " + icon );
				item
					.attr( "aria-haspopup", "true" )
					.prepend( submenuCaret );
				menu.attr( "aria-labelledby", item.attr( "id" ) );
			} );
		this._addClass( newSubmenus, "ui-menu", "ui-widget ui-widget-content ui-front" );
		menus = submenus.add( this.element );
		items = menus.find( this.options.items );
		// Initialize menu-items containing spaces and/or dashes only as dividers
		items.not( ".ui-menu-item" ).each( function() {
			var item = $( this );
			if ( that._isDivider( item ) ) {
				that._addClass( item, "ui-menu-divider", "ui-widget-content" );
			}
		} );
		// Don't refresh list items that are already adapted
		newItems = items.not( ".ui-menu-item, .ui-menu-divider" );
		newWrappers = newItems.children()
			.not( ".ui-menu" )
				.uniqueId()
				.attr( {
					tabIndex: -1,
					role: this._itemRole()
				} );
		this._addClass( newItems, "ui-menu-item" )
			._addClass( newWrappers, "ui-menu-item-wrapper" );
		// Add aria-disabled attribute to any disabled menu item
		items.filter( ".ui-state-disabled" ).attr( "aria-disabled", "true" );
		// If the active item has been removed, blur the menu
		if ( this.active && !$.contains( this.element[ 0 ], this.active[ 0 ] ) ) {
			this.blur();
		}
	},
	_itemRole: function() {
		return {
			menu: "menuitem",
			listbox: "option"
		}[ this.options.role ];
	},
	_setOption: function( key, value ) {
		if ( key === "icons" ) {
			var icons = this.element.find( ".ui-menu-icon" );
			this._removeClass( icons, null, this.options.icons.submenu )
				._addClass( icons, null, value.submenu );
		}
		this._super( key, value );
	},
	_setOptionDisabled: function( value ) {
		this._super( value );
		this.element.attr( "aria-disabled", String( value ) );
		this._toggleClass( null, "ui-state-disabled", !!value );
	},
	focus: function( event, item ) {
		var nested, focused, activeParent;
		this.blur( event, event && event.type === "focus" );
		this._scrollIntoView( item );
		this.active = item.first();
		focused = this.active.children( ".ui-menu-item-wrapper" );
		this._addClass( focused, null, "ui-state-active" );
		// Only update aria-activedescendant if there's a role
		// otherwise we assume focus is managed elsewhere
		if ( this.options.role ) {
			this.element.attr( "aria-activedescendant", focused.attr( "id" ) );
		}
		// Highlight active parent menu item, if any
		activeParent = this.active
			.parent()
				.closest( ".ui-menu-item" )
					.children( ".ui-menu-item-wrapper" );
		this._addClass( activeParent, null, "ui-state-active" );
		if ( event && event.type === "keydown" ) {
			this._close();
		} else {
			this.timer = this._delay( function() {
				this._close();
			}, this.delay );
		}
		nested = item.children( ".ui-menu" );
		if ( nested.length && event && ( /^mouse/.test( event.type ) ) ) {
			this._startOpening( nested );
		}
		this.activeMenu = item.parent();
		this._trigger( "focus", event, { item: item } );
	},
	_scrollIntoView: function( item ) {
		var borderTop, paddingTop, offset, scroll, elementHeight, itemHeight;
		if ( this._hasScroll() ) {
			borderTop = parseFloat( $.css( this.activeMenu[ 0 ], "borderTopWidth" ) ) || 0;
			paddingTop = parseFloat( $.css( this.activeMenu[ 0 ], "paddingTop" ) ) || 0;
			offset = item.offset().top - this.activeMenu.offset().top - borderTop - paddingTop;
			scroll = this.activeMenu.scrollTop();
			elementHeight = this.activeMenu.height();
			itemHeight = item.outerHeight();
			if ( offset < 0 ) {
				this.activeMenu.scrollTop( scroll + offset );
			} else if ( offset + itemHeight > elementHeight ) {
				this.activeMenu.scrollTop( scroll + offset - elementHeight + itemHeight );
			}
		}
	},
	blur: function( event, fromFocus ) {
		if ( !fromFocus ) {
			clearTimeout( this.timer );
		}
		if ( !this.active ) {
			return;
		}
		this._removeClass( this.active.children( ".ui-menu-item-wrapper" ),
			null, "ui-state-active" );
		this._trigger( "blur", event, { item: this.active } );
		this.active = null;
	},
	_startOpening: function( submenu ) {
		clearTimeout( this.timer );
		// Don't open if already open fixes a Firefox bug that caused a .5 pixel
		// shift in the submenu position when mousing over the caret icon
		if ( submenu.attr( "aria-hidden" ) !== "true" ) {
			return;
		}
		this.timer = this._delay( function() {
			this._close();
			this._open( submenu );
		}, this.delay );
	},
	_open: function( submenu ) {
		var position = $.extend( {
			of: this.active
		}, this.options.position );
		clearTimeout( this.timer );
		this.element.find( ".ui-menu" ).not( submenu.parents( ".ui-menu" ) )
			.hide()
			.attr( "aria-hidden", "true" );
		submenu
			.show()
			.removeAttr( "aria-hidden" )
			.attr( "aria-expanded", "true" )
			.position( position );
	},
	collapseAll: function( event, all ) {
		clearTimeout( this.timer );
		this.timer = this._delay( function() {
			// If we were passed an event, look for the submenu that contains the event
			var currentMenu = all ? this.element :
				$( event && event.target ).closest( this.element.find( ".ui-menu" ) );
			// If we found no valid submenu ancestor, use the main menu to close all
			// sub menus anyway
			if ( !currentMenu.length ) {
				currentMenu = this.element;
			}
			this._close( currentMenu );
			this.blur( event );
			// Work around active item staying active after menu is blurred
			this._removeClass( currentMenu.find( ".ui-state-active" ), null, "ui-state-active" );
			this.activeMenu = currentMenu;
		}, this.delay );
	},
	// With no arguments, closes the currently active menu - if nothing is active
	// it closes all menus.  If passed an argument, it will search for menus BELOW
	_close: function( startMenu ) {
		if ( !startMenu ) {
			startMenu = this.active ? this.active.parent() : this.element;
		}
		startMenu.find( ".ui-menu" )
			.hide()
			.attr( "aria-hidden", "true" )
			.attr( "aria-expanded", "false" );
	},
	_closeOnDocumentClick: function( event ) {
		return !$( event.target ).closest( ".ui-menu" ).length;
	},
	_isDivider: function( item ) {
		// Match hyphen, em dash, en dash
		return !/[^\-\u2014\u2013\s]/.test( item.text() );
	},
	collapse: function( event ) {
		var newItem = this.active &&
			this.active.parent().closest( ".ui-menu-item", this.element );
		if ( newItem && newItem.length ) {
			this._close();
			this.focus( event, newItem );
		}
	},
	expand: function( event ) {
		var newItem = this.active &&
			this.active
				.children( ".ui-menu " )
					.find( this.options.items )
						.first();
		if ( newItem && newItem.length ) {
			this._open( newItem.parent() );
			// Delay so Firefox will not hide activedescendant change in expanding submenu from AT
			this._delay( function() {
				this.focus( event, newItem );
			} );
		}
	},
	next: function( event ) {
		this._move( "next", "first", event );
	},
	previous: function( event ) {
		this._move( "prev", "last", event );
	},
	isFirstItem: function() {
		return this.active && !this.active.prevAll( ".ui-menu-item" ).length;
	},
	isLastItem: function() {
		return this.active && !this.active.nextAll( ".ui-menu-item" ).length;
	},
	_move: function( direction, filter, event ) {
		var next;
		if ( this.active ) {
			if ( direction === "first" || direction === "last" ) {
				next = this.active
					[ direction === "first" ? "prevAll" : "nextAll" ]( ".ui-menu-item" )
					.eq( -1 );
			} else {
				next = this.active
					[ direction + "All" ]( ".ui-menu-item" )
					.eq( 0 );
			}
		}
		if ( !next || !next.length || !this.active ) {
			next = this.activeMenu.find( this.options.items )[ filter ]();
		}
		this.focus( event, next );
	},
	nextPage: function( event ) {
		var item, base, height;
		if ( !this.active ) {
			this.next( event );
			return;
		}
		if ( this.isLastItem() ) {
			return;
		}
		if ( this._hasScroll() ) {
			base = this.active.offset().top;
			height = this.element.height();
			this.active.nextAll( ".ui-menu-item" ).each( function() {
				item = $( this );
				return item.offset().top - base - height < 0;
			} );
			this.focus( event, item );
		} else {
			this.focus( event, this.activeMenu.find( this.options.items )
				[ !this.active ? "first" : "last" ]() );
		}
	},
	previousPage: function( event ) {
		var item, base, height;
		if ( !this.active ) {
			this.next( event );
			return;
		}
		if ( this.isFirstItem() ) {
			return;
		}
		if ( this._hasScroll() ) {
			base = this.active.offset().top;
			height = this.element.height();
			this.active.prevAll( ".ui-menu-item" ).each( function() {
				item = $( this );
				return item.offset().top - base + height > 0;
			} );
			this.focus( event, item );
		} else {
			this.focus( event, this.activeMenu.find( this.options.items ).first() );
		}
	},
	_hasScroll: function() {
		return this.element.outerHeight() < this.element.prop( "scrollHeight" );
	},
	select: function( event ) {
		// TODO: It should never be possible to not have an active item at this
		// point, but the tests don't trigger mouseenter before click.
		this.active = this.active || $( event.target ).closest( ".ui-menu-item" );
		var ui = { item: this.active };
		if ( !this.active.has( ".ui-menu" ).length ) {
			this.collapseAll( event, true );
		}
		this._trigger( "select", event, ui );
	},
	_filterMenuItems: function( character ) {
		var escapedCharacter = character.replace( /[\-\[\]{}()*+?.,\\\^$|#\s]/g, "\\$&" ),
			regex = new RegExp( "^" + escapedCharacter, "i" );
		return this.activeMenu
			.find( this.options.items )
				// Only match on items, not dividers or other content (#10571)
				.filter( ".ui-menu-item" )
					.filter( function() {
						return regex.test(
							$.trim( $( this ).children( ".ui-menu-item-wrapper" ).text() ) );
					} );
	}
} );
/*!
 * jQuery UI Selectmenu 1.12.1
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */
//>>label: Selectmenu
//>>group: Widgets
// jscs:disable maximumLineLength
//>>description: Duplicates and extends the functionality of a native HTML select element, allowing it to be customizable in behavior and appearance far beyond the limitations of a native select.
// jscs:enable maximumLineLength
//>>docs: http://api.jqueryui.com/selectmenu/
//>>demos: http://jqueryui.com/selectmenu/
//>>css.structure: ../../themes/base/core.css
//>>css.structure: ../../themes/base/selectmenu.css, ../../themes/base/button.css
//>>css.theme: ../../themes/base/theme.css
var widgetsSelectmenu = $.widget( "ui.selectmenu", [ $.ui.formResetMixin, {
	version: "1.12.1",
	defaultElement: "<select>",
	options: {
		appendTo: null,
		classes: {
			"ui-selectmenu-button-open": "ui-corner-top",
			"ui-selectmenu-button-closed": "ui-corner-all"
		},
		disabled: null,
		icons: {
			button: "ui-icon-triangle-1-s"
		},
		position: {
			my: "left top",
			at: "left bottom",
			collision: "none"
		},
		width: false,
		// Callbacks
		change: null,
		close: null,
		focus: null,
		open: null,
		select: null
	},
	_create: function() {
		var selectmenuId = this.element.uniqueId().attr( "id" );
		this.ids = {
			element: selectmenuId,
			button: selectmenuId + "-button",
			menu: selectmenuId + "-menu"
		};
		this._drawButton();
		this._drawMenu();
		this._bindFormResetHandler();
		this._rendered = false;
		this.menuItems = $();
	},
	_drawButton: function() {
		var icon,
			that = this,
			item = this._parseOption(
				this.element.find( "option:selected" ),
				this.element[ 0 ].selectedIndex
			);
		// Associate existing label with the new button
		this.labels = this.element.labels().attr( "for", this.ids.button );
		this._on( this.labels, {
			click: function( event ) {
				this.button.focus();
				event.preventDefault();
			}
		} );
		// Hide original select element
		this.element.hide();
		// Create button
		this.button = $( "<span>", {
			tabindex: this.options.disabled ? -1 : 0,
			id: this.ids.button,
			role: "combobox",
			"aria-expanded": "false",
			"aria-autocomplete": "list",
			"aria-owns": this.ids.menu,
			"aria-haspopup": "true",
			title: this.element.attr( "title" )
		} )
			.insertAfter( this.element );
		this._addClass( this.button, "ui-selectmenu-button ui-selectmenu-button-closed",
			"ui-button ui-widget" );
		icon = $( "<span>" ).appendTo( this.button );
		this._addClass( icon, "ui-selectmenu-icon", "ui-icon " + this.options.icons.button );
		this.buttonItem = this._renderButtonItem( item )
			.appendTo( this.button );
		if ( this.options.width !== false ) {
			this._resizeButton();
		}
		this._on( this.button, this._buttonEvents );
		this.button.one( "focusin", function() {
			// Delay rendering the menu items until the button receives focus.
			// The menu may have already been rendered via a programmatic open.
			if ( !that._rendered ) {
				that._refreshMenu();
			}
		} );
	},
	_drawMenu: function() {
		var that = this;
		// Create menu
		this.menu = $( "<ul>", {
			"aria-hidden": "true",
			"aria-labelledby": this.ids.button,
			id: this.ids.menu
		} );
		// Wrap menu
		this.menuWrap = $( "<div>" ).append( this.menu );
		this._addClass( this.menuWrap, "ui-selectmenu-menu", "ui-front" );
		this.menuWrap.appendTo( this._appendTo() );
		// Initialize menu widget
		this.menuInstance = this.menu
			.menu( {
				classes: {
					"ui-menu": "ui-corner-bottom"
				},
				role: "listbox",
				select: function( event, ui ) {
					event.preventDefault();
					// Support: IE8
					// If the item was selected via a click, the text selection
					// will be destroyed in IE
					that._setSelection();
					that._select( ui.item.data( "ui-selectmenu-item" ), event );
				},
				focus: function( event, ui ) {
					var item = ui.item.data( "ui-selectmenu-item" );
					// Prevent inital focus from firing and check if its a newly focused item
					if ( that.focusIndex != null && item.index !== that.focusIndex ) {
						that._trigger( "focus", event, { item: item } );
						if ( !that.isOpen ) {
							that._select( item, event );
						}
					}
					that.focusIndex = item.index;
					that.button.attr( "aria-activedescendant",
						that.menuItems.eq( item.index ).attr( "id" ) );
				}
			} )
			.menu( "instance" );
		// Don't close the menu on mouseleave
		this.menuInstance._off( this.menu, "mouseleave" );
		// Cancel the menu's collapseAll on document click
		this.menuInstance._closeOnDocumentClick = function() {
			return false;
		};
		// Selects often contain empty items, but never contain dividers
		this.menuInstance._isDivider = function() {
			return false;
		};
	},
	refresh: function() {
		this._refreshMenu();
		this.buttonItem.replaceWith(
			this.buttonItem = this._renderButtonItem(
				// Fall back to an empty object in case there are no options
				this._getSelectedItem().data( "ui-selectmenu-item" ) || {}
			)
		);
		if ( this.options.width === null ) {
			this._resizeButton();
		}
	},
	_refreshMenu: function() {
		var item,
			options = this.element.find( "option" );
		this.menu.empty();
		this._parseOptions( options );
		this._renderMenu( this.menu, this.items );
		this.menuInstance.refresh();
		this.menuItems = this.menu.find( "li" )
			.not( ".ui-selectmenu-optgroup" )
				.find( ".ui-menu-item-wrapper" );
		this._rendered = true;
		if ( !options.length ) {
			return;
		}
		item = this._getSelectedItem();
		// Update the menu to have the correct item focused
		this.menuInstance.focus( null, item );
		this._setAria( item.data( "ui-selectmenu-item" ) );
		// Set disabled state
		this._setOption( "disabled", this.element.prop( "disabled" ) );
	},
	open: function( event ) {
		if ( this.options.disabled ) {
			return;
		}
		// If this is the first time the menu is being opened, render the items
		if ( !this._rendered ) {
			this._refreshMenu();
		} else {
			// Menu clears focus on close, reset focus to selected item
			this._removeClass( this.menu.find( ".ui-state-active" ), null, "ui-state-active" );
			this.menuInstance.focus( null, this._getSelectedItem() );
		}
		// If there are no options, don't open the menu
		if ( !this.menuItems.length ) {
			return;
		}
		this.isOpen = true;
		this._toggleAttr();
		this._resizeMenu();
		this._position();
		this._on( this.document, this._documentClick );
		this._trigger( "open", event );
	},
	_position: function() {
		this.menuWrap.position( $.extend( { of: this.button }, this.options.position ) );
	},
	close: function( event ) {
		if ( !this.isOpen ) {
			return;
		}
		this.isOpen = false;
		this._toggleAttr();
		this.range = null;
		this._off( this.document );
		this._trigger( "close", event );
	},
	widget: function() {
		return this.button;
	},
	menuWidget: function() {
		return this.menu;
	},
	_renderButtonItem: function( item ) {
		var buttonItem = $( "<span>" );
		this._setText( buttonItem, item.label );
		this._addClass( buttonItem, "ui-selectmenu-text" );
		return buttonItem;
	},
	_renderMenu: function( ul, items ) {
		var that = this,
			currentOptgroup = "";
		$.each( items, function( index, item ) {
			var li;
			if ( item.optgroup !== currentOptgroup ) {
				li = $( "<li>", {
					text: item.optgroup
				} );
				that._addClass( li, "ui-selectmenu-optgroup", "ui-menu-divider" +
					( item.element.parent( "optgroup" ).prop( "disabled" ) ?
						" ui-state-disabled" :
						"" ) );
				li.appendTo( ul );
				currentOptgroup = item.optgroup;
			}
			that._renderItemData( ul, item );
		} );
	},
	_renderItemData: function( ul, item ) {
		return this._renderItem( ul, item ).data( "ui-selectmenu-item", item );
	},
	_renderItem: function( ul, item ) {
		var li = $( "<li>" ),
			wrapper = $( "<div>", {
				title: item.element.attr( "title" )
			} );
		if ( item.disabled ) {
			this._addClass( li, null, "ui-state-disabled" );
		}
		this._setText( wrapper, item.label );
		return li.append( wrapper ).appendTo( ul );
	},
	_setText: function( element, value ) {
		if ( value ) {
			element.text( value );
		} else {
			element.html( "&#160;" );
		}
	},
	_move: function( direction, event ) {
		var item, next,
			filter = ".ui-menu-item";
		if ( this.isOpen ) {
			item = this.menuItems.eq( this.focusIndex ).parent( "li" );
		} else {
			item = this.menuItems.eq( this.element[ 0 ].selectedIndex ).parent( "li" );
			filter += ":not(.ui-state-disabled)";
		}
		if ( direction === "first" || direction === "last" ) {
			next = item[ direction === "first" ? "prevAll" : "nextAll" ]( filter ).eq( -1 );
		} else {
			next = item[ direction + "All" ]( filter ).eq( 0 );
		}
		if ( next.length ) {
			this.menuInstance.focus( event, next );
		}
	},
	_getSelectedItem: function() {
		return this.menuItems.eq( this.element[ 0 ].selectedIndex ).parent( "li" );
	},
	_toggle: function( event ) {
		this[ this.isOpen ? "close" : "open" ]( event );
	},
	_setSelection: function() {
		var selection;
		if ( !this.range ) {
			return;
		}
		if ( window.getSelection ) {
			selection = window.getSelection();
			selection.removeAllRanges();
			selection.addRange( this.range );
		// Support: IE8
		} else {
			this.range.select();
		}
		// Support: IE
		// Setting the text selection kills the button focus in IE, but
		// restoring the focus doesn't kill the selection.
		this.button.focus();
	},
	_documentClick: {
		mousedown: function( event ) {
			if ( !this.isOpen ) {
				return;
			}
			if ( !$( event.target ).closest( ".ui-selectmenu-menu, #" +
					$.ui.escapeSelector( this.ids.button ) ).length ) {
				this.close( event );
			}
		}
	},
	_buttonEvents: {
		// Prevent text selection from being reset when interacting with the selectmenu (#10144)
		mousedown: function() {
			var selection;
			if ( window.getSelection ) {
				selection = window.getSelection();
				if ( selection.rangeCount ) {
					this.range = selection.getRangeAt( 0 );
				}
			// Support: IE8
			} else {
				this.range = document.selection.createRange();
			}
		},
		click: function( event ) {
			this._setSelection();
			this._toggle( event );
		},
		keydown: function( event ) {
			var preventDefault = true;
			switch ( event.keyCode ) {
			case $.ui.keyCode.TAB:
			case $.ui.keyCode.ESCAPE:
				this.close( event );
				preventDefault = false;
				break;
			case $.ui.keyCode.ENTER:
				if ( this.isOpen ) {
					this._selectFocusedItem( event );
				}
				break;
			case $.ui.keyCode.UP:
				if ( event.altKey ) {
					this._toggle( event );
				} else {
					this._move( "prev", event );
				}
				break;
			case $.ui.keyCode.DOWN:
				if ( event.altKey ) {
					this._toggle( event );
				} else {
					this._move( "next", event );
				}
				break;
			case $.ui.keyCode.SPACE:
				if ( this.isOpen ) {
					this._selectFocusedItem( event );
				} else {
					this._toggle( event );
				}
				break;
			case $.ui.keyCode.LEFT:
				this._move( "prev", event );
				break;
			case $.ui.keyCode.RIGHT:
				this._move( "next", event );
				break;
			case $.ui.keyCode.HOME:
			case $.ui.keyCode.PAGE_UP:
				this._move( "first", event );
				break;
			case $.ui.keyCode.END:
			case $.ui.keyCode.PAGE_DOWN:
				this._move( "last", event );
				break;
			default:
				this.menu.trigger( event );
				preventDefault = false;
			}
			if ( preventDefault ) {
				event.preventDefault();
			}
		}
	},
	_selectFocusedItem: function( event ) {
		var item = this.menuItems.eq( this.focusIndex ).parent( "li" );
		if ( !item.hasClass( "ui-state-disabled" ) ) {
			this._select( item.data( "ui-selectmenu-item" ), event );
		}
	},
	_select: function( item, event ) {
		var oldIndex = this.element[ 0 ].selectedIndex;
		// Change native select element
		this.element[ 0 ].selectedIndex = item.index;
		this.buttonItem.replaceWith( this.buttonItem = this._renderButtonItem( item ) );
		this._setAria( item );
		this._trigger( "select", event, { item: item } );
		if ( item.index !== oldIndex ) {
			this._trigger( "change", event, { item: item } );
		}
		this.close( event );
	},
	_setAria: function( item ) {
		var id = this.menuItems.eq( item.index ).attr( "id" );
		this.button.attr( {
			"aria-labelledby": id,
			"aria-activedescendant": id
		} );
		this.menu.attr( "aria-activedescendant", id );
	},
	_setOption: function( key, value ) {
		if ( key === "icons" ) {
			var icon = this.button.find( "span.ui-icon" );
			this._removeClass( icon, null, this.options.icons.button )
				._addClass( icon, null, value.button );
		}
		this._super( key, value );
		if ( key === "appendTo" ) {
			this.menuWrap.appendTo( this._appendTo() );
		}
		if ( key === "width" ) {
			this._resizeButton();
		}
	},
	_setOptionDisabled: function( value ) {
		this._super( value );
		this.menuInstance.option( "disabled", value );
		this.button.attr( "aria-disabled", value );
		this._toggleClass( this.button, null, "ui-state-disabled", value );
		this.element.prop( "disabled", value );
		if ( value ) {
			this.button.attr( "tabindex", -1 );
			this.close();
		} else {
			this.button.attr( "tabindex", 0 );
		}
	},
	_appendTo: function() {
		var element = this.options.appendTo;
		if ( element ) {
			element = element.jquery || element.nodeType ?
				$( element ) :
				this.document.find( element ).eq( 0 );
		}
		if ( !element || !element[ 0 ] ) {
			element = this.element.closest( ".ui-front, dialog" );
		}
		if ( !element.length ) {
			element = this.document[ 0 ].body;
		}
		return element;
	},
	_toggleAttr: function() {
		this.button.attr( "aria-expanded", this.isOpen );
		// We can't use two _toggleClass() calls here, because we need to make sure
		// we always remove classes first and add them second, otherwise if both classes have the
		// same theme class, it will be removed after we add it.
		this._removeClass( this.button, "ui-selectmenu-button-" +
			( this.isOpen ? "closed" : "open" ) )
			._addClass( this.button, "ui-selectmenu-button-" +
				( this.isOpen ? "open" : "closed" ) )
			._toggleClass( this.menuWrap, "ui-selectmenu-open", null, this.isOpen );
		this.menu.attr( "aria-hidden", !this.isOpen );
	},
	_resizeButton: function() {
		var width = this.options.width;
		// For `width: false`, just remove inline style and stop
		if ( width === false ) {
			this.button.css( "width", "" );
			return;
		}
		// For `width: null`, match the width of the original element
		if ( width === null ) {
			width = this.element.show().outerWidth();
			this.element.hide();
		}
		this.button.outerWidth( width );
	},
	_resizeMenu: function() {
		this.menu.outerWidth( Math.max(
			this.button.outerWidth(),
			// Support: IE10
			// IE10 wraps long text (possibly a rounding bug)
			// so we add 1px to avoid the wrapping
			this.menu.width( "" ).outerWidth() + 1
		) );
	},
	_getCreateOptions: function() {
		var options = this._super();
		options.disabled = this.element.prop( "disabled" );
		return options;
	},
	_parseOptions: function( options ) {
		var that = this,
			data = [];
		options.each( function( index, item ) {
			data.push( that._parseOption( $( item ), index ) );
		} );
		this.items = data;
	},
	_parseOption: function( option, index ) {
		var optgroup = option.parent( "optgroup" );
		return {
			element: option,
			index: index,
			value: option.val(),
			label: option.text(),
			optgroup: optgroup.attr( "label" ) || "",
			disabled: optgroup.prop( "disabled" ) || option.prop( "disabled" )
		};
	},
	_destroy: function() {
		this._unbindFormResetHandler();
		this.menuWrap.remove();
		this.button.remove();
		this.element.show();
		this.element.removeUniqueId();
		this.labels.attr( "for", this.ids.element );
	}
} ] );
/*!
 * jQuery UI Effects 1.12.1
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */
//>>label: Effects Core
//>>group: Effects
// jscs:disable maximumLineLength
//>>description: Extends the internal jQuery effects. Includes morphing and easing. Required by all other effects.
// jscs:enable maximumLineLength
//>>docs: http://api.jqueryui.com/category/effects-core/
//>>demos: http://jqueryui.com/effect/
var dataSpace = "ui-effects-",
	dataSpaceStyle = "ui-effects-style",
	dataSpaceAnimated = "ui-effects-animated",
	// Create a local jQuery because jQuery Color relies on it and the
	// global may not exist with AMD and a custom build (#10199)
	jQuery = $;
$.effects = {
	effect: {}
};
/*!
 * jQuery Color Animations v2.1.2
 * https://github.com/jquery/jquery-color
 *
 * Copyright 2014 jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 *
 * Date: Wed Jan 16 08:47:09 2013 -0600
 */
( function( jQuery, undefined ) {
	var stepHooks = "backgroundColor borderBottomColor borderLeftColor borderRightColor " +
		"borderTopColor color columnRuleColor outlineColor textDecorationColor textEmphasisColor",
	// Plusequals test for += 100 -= 100
	rplusequals = /^([\-+])=\s*(\d+\.?\d*)/,
	// A set of RE's that can match strings and generate color tuples.
	stringParsers = [ {
			re: /rgba?\(\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*(\d{1,3})\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,
			parse: function( execResult ) {
				return [
					execResult[ 1 ],
					execResult[ 2 ],
					execResult[ 3 ],
					execResult[ 4 ]
				];
			}
		}, {
			re: /rgba?\(\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,
			parse: function( execResult ) {
				return [
					execResult[ 1 ] * 2.55,
					execResult[ 2 ] * 2.55,
					execResult[ 3 ] * 2.55,
					execResult[ 4 ]
				];
			}
		}, {
			// This regex ignores A-F because it's compared against an already lowercased string
			re: /#([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})/,
			parse: function( execResult ) {
				return [
					parseInt( execResult[ 1 ], 16 ),
					parseInt( execResult[ 2 ], 16 ),
					parseInt( execResult[ 3 ], 16 )
				];
			}
		}, {
			// This regex ignores A-F because it's compared against an already lowercased string
			re: /#([a-f0-9])([a-f0-9])([a-f0-9])/,
			parse: function( execResult ) {
				return [
					parseInt( execResult[ 1 ] + execResult[ 1 ], 16 ),
					parseInt( execResult[ 2 ] + execResult[ 2 ], 16 ),
					parseInt( execResult[ 3 ] + execResult[ 3 ], 16 )
				];
			}
		}, {
			re: /hsla?\(\s*(\d+(?:\.\d+)?)\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,
			space: "hsla",
			parse: function( execResult ) {
				return [
					execResult[ 1 ],
					execResult[ 2 ] / 100,
					execResult[ 3 ] / 100,
					execResult[ 4 ]
				];
			}
		} ],
	// JQuery.Color( )
	color = jQuery.Color = function( color, green, blue, alpha ) {
		return new jQuery.Color.fn.parse( color, green, blue, alpha );
	},
	spaces = {
		rgba: {
			props: {
				red: {
					idx: 0,
					type: "byte"
				},
				green: {
					idx: 1,
					type: "byte"
				},
				blue: {
					idx: 2,
					type: "byte"
				}
			}
		},
		hsla: {
			props: {
				hue: {
					idx: 0,
					type: "degrees"
				},
				saturation: {
					idx: 1,
					type: "percent"
				},
				lightness: {
					idx: 2,
					type: "percent"
				}
			}
		}
	},
	propTypes = {
		"byte": {
			floor: true,
			max: 255
		},
		"percent": {
			max: 1
		},
		"degrees": {
			mod: 360,
			floor: true
		}
	},
	support = color.support = {},
	// Element for support tests
	supportElem = jQuery( "<p>" )[ 0 ],
	// Colors = jQuery.Color.names
	colors,
	// Local aliases of functions called often
	each = jQuery.each;
// Determine rgba support immediately
supportElem.style.cssText = "background-color:rgba(1,1,1,.5)";
support.rgba = supportElem.style.backgroundColor.indexOf( "rgba" ) > -1;
// Define cache name and alpha properties
// for rgba and hsla spaces
each( spaces, function( spaceName, space ) {
	space.cache = "_" + spaceName;
	space.props.alpha = {
		idx: 3,
		type: "percent",
		def: 1
	};
} );
function clamp( value, prop, allowEmpty ) {
	var type = propTypes[ prop.type ] || {};
	if ( value == null ) {
		return ( allowEmpty || !prop.def ) ? null : prop.def;
	}
	// ~~ is an short way of doing floor for positive numbers
	value = type.floor ? ~~value : parseFloat( value );
	// IE will pass in empty strings as value for alpha,
	// which will hit this case
	if ( isNaN( value ) ) {
		return prop.def;
	}
	if ( type.mod ) {
		// We add mod before modding to make sure that negatives values
		// get converted properly: -10 -> 350
		return ( value + type.mod ) % type.mod;
	}
	// For now all property types without mod have min and max
	return 0 > value ? 0 : type.max < value ? type.max : value;
}
function stringParse( string ) {
	var inst = color(),
		rgba = inst._rgba = [];
	string = string.toLowerCase();
	each( stringParsers, function( i, parser ) {
		var parsed,
			match = parser.re.exec( string ),
			values = match && parser.parse( match ),
			spaceName = parser.space || "rgba";
		if ( values ) {
			parsed = inst[ spaceName ]( values );
			// If this was an rgba parse the assignment might happen twice
			// oh well....
			inst[ spaces[ spaceName ].cache ] = parsed[ spaces[ spaceName ].cache ];
			rgba = inst._rgba = parsed._rgba;
			// Exit each( stringParsers ) here because we matched
			return false;
		}
	} );
	// Found a stringParser that handled it
	if ( rgba.length ) {
		// If this came from a parsed string, force "transparent" when alpha is 0
		// chrome, (and maybe others) return "transparent" as rgba(0,0,0,0)
		if ( rgba.join() === "0,0,0,0" ) {
			jQuery.extend( rgba, colors.transparent );
		}
		return inst;
	}
	// Named colors
	return colors[ string ];
}
color.fn = jQuery.extend( color.prototype, {
	parse: function( red, green, blue, alpha ) {
		if ( red === undefined ) {
			this._rgba = [ null, null, null, null ];
			return this;
		}
		if ( red.jquery || red.nodeType ) {
			red = jQuery( red ).css( green );
			green = undefined;
		}
		var inst = this,
			type = jQuery.type( red ),
			rgba = this._rgba = [];
		// More than 1 argument specified - assume ( red, green, blue, alpha )
		if ( green !== undefined ) {
			red = [ red, green, blue, alpha ];
			type = "array";
		}
		if ( type === "string" ) {
			return this.parse( stringParse( red ) || colors._default );
		}
		if ( type === "array" ) {
			each( spaces.rgba.props, function( key, prop ) {
				rgba[ prop.idx ] = clamp( red[ prop.idx ], prop );
			} );
			return this;
		}
		if ( type === "object" ) {
			if ( red instanceof color ) {
				each( spaces, function( spaceName, space ) {
					if ( red[ space.cache ] ) {
						inst[ space.cache ] = red[ space.cache ].slice();
					}
				} );
			} else {
				each( spaces, function( spaceName, space ) {
					var cache = space.cache;
					each( space.props, function( key, prop ) {
						// If the cache doesn't exist, and we know how to convert
						if ( !inst[ cache ] && space.to ) {
							// If the value was null, we don't need to copy it
							// if the key was alpha, we don't need to copy it either
							if ( key === "alpha" || red[ key ] == null ) {
								return;
							}
							inst[ cache ] = space.to( inst._rgba );
						}
						// This is the only case where we allow nulls for ALL properties.
						// call clamp with alwaysAllowEmpty
						inst[ cache ][ prop.idx ] = clamp( red[ key ], prop, true );
					} );
					// Everything defined but alpha?
					if ( inst[ cache ] &&
							jQuery.inArray( null, inst[ cache ].slice( 0, 3 ) ) < 0 ) {
						// Use the default of 1
						inst[ cache ][ 3 ] = 1;
						if ( space.from ) {
							inst._rgba = space.from( inst[ cache ] );
						}
					}
				} );
			}
			return this;
		}
	},
	is: function( compare ) {
		var is = color( compare ),
			same = true,
			inst = this;
		each( spaces, function( _, space ) {
			var localCache,
				isCache = is[ space.cache ];
			if ( isCache ) {
				localCache = inst[ space.cache ] || space.to && space.to( inst._rgba ) || [];
				each( space.props, function( _, prop ) {
					if ( isCache[ prop.idx ] != null ) {
						same = ( isCache[ prop.idx ] === localCache[ prop.idx ] );
						return same;
					}
				} );
			}
			return same;
		} );
		return same;
	},
	_space: function() {
		var used = [],
			inst = this;
		each( spaces, function( spaceName, space ) {
			if ( inst[ space.cache ] ) {
				used.push( spaceName );
			}
		} );
		return used.pop();
	},
	transition: function( other, distance ) {
		var end = color( other ),
			spaceName = end._space(),
			space = spaces[ spaceName ],
			startColor = this.alpha() === 0 ? color( "transparent" ) : this,
			start = startColor[ space.cache ] || space.to( startColor._rgba ),
			result = start.slice();
		end = end[ space.cache ];
		each( space.props, function( key, prop ) {
			var index = prop.idx,
				startValue = start[ index ],
				endValue = end[ index ],
				type = propTypes[ prop.type ] || {};
			// If null, don't override start value
			if ( endValue === null ) {
				return;
			}
			// If null - use end
			if ( startValue === null ) {
				result[ index ] = endValue;
			} else {
				if ( type.mod ) {
					if ( endValue - startValue > type.mod / 2 ) {
						startValue += type.mod;
					} else if ( startValue - endValue > type.mod / 2 ) {
						startValue -= type.mod;
					}
				}
				result[ index ] = clamp( ( endValue - startValue ) * distance + startValue, prop );
			}
		} );
		return this[ spaceName ]( result );
	},
	blend: function( opaque ) {
		// If we are already opaque - return ourself
		if ( this._rgba[ 3 ] === 1 ) {
			return this;
		}
		var rgb = this._rgba.slice(),
			a = rgb.pop(),
			blend = color( opaque )._rgba;
		return color( jQuery.map( rgb, function( v, i ) {
			return ( 1 - a ) * blend[ i ] + a * v;
		} ) );
	},
	toRgbaString: function() {
		var prefix = "rgba(",
			rgba = jQuery.map( this._rgba, function( v, i ) {
				return v == null ? ( i > 2 ? 1 : 0 ) : v;
			} );
		if ( rgba[ 3 ] === 1 ) {
			rgba.pop();
			prefix = "rgb(";
		}
		return prefix + rgba.join() + ")";
	},
	toHslaString: function() {
		var prefix = "hsla(",
			hsla = jQuery.map( this.hsla(), function( v, i ) {
				if ( v == null ) {
					v = i > 2 ? 1 : 0;
				}
				// Catch 1 and 2
				if ( i && i < 3 ) {
					v = Math.round( v * 100 ) + "%";
				}
				return v;
			} );
		if ( hsla[ 3 ] === 1 ) {
			hsla.pop();
			prefix = "hsl(";
		}
		return prefix + hsla.join() + ")";
	},
	toHexString: function( includeAlpha ) {
		var rgba = this._rgba.slice(),
			alpha = rgba.pop();
		if ( includeAlpha ) {
			rgba.push( ~~( alpha * 255 ) );
		}
		return "#" + jQuery.map( rgba, function( v ) {
			// Default to 0 when nulls exist
			v = ( v || 0 ).toString( 16 );
			return v.length === 1 ? "0" + v : v;
		} ).join( "" );
	},
	toString: function() {
		return this._rgba[ 3 ] === 0 ? "transparent" : this.toRgbaString();
	}
} );
color.fn.parse.prototype = color.fn;
// Hsla conversions adapted from:
// https://code.google.com/p/maashaack/source/browse/packages/graphics/trunk/src/graphics/colors/HUE2RGB.as?r=5021
function hue2rgb( p, q, h ) {
	h = ( h + 1 ) % 1;
	if ( h * 6 < 1 ) {
		return p + ( q - p ) * h * 6;
	}
	if ( h * 2 < 1 ) {
		return q;
	}
	if ( h * 3 < 2 ) {
		return p + ( q - p ) * ( ( 2 / 3 ) - h ) * 6;
	}
	return p;
}
spaces.hsla.to = function( rgba ) {
	if ( rgba[ 0 ] == null || rgba[ 1 ] == null || rgba[ 2 ] == null ) {
		return [ null, null, null, rgba[ 3 ] ];
	}
	var r = rgba[ 0 ] / 255,
		g = rgba[ 1 ] / 255,
		b = rgba[ 2 ] / 255,
		a = rgba[ 3 ],
		max = Math.max( r, g, b ),
		min = Math.min( r, g, b ),
		diff = max - min,
		add = max + min,
		l = add * 0.5,
		h, s;
	if ( min === max ) {
		h = 0;
	} else if ( r === max ) {
		h = ( 60 * ( g - b ) / diff ) + 360;
	} else if ( g === max ) {
		h = ( 60 * ( b - r ) / diff ) + 120;
	} else {
		h = ( 60 * ( r - g ) / diff ) + 240;
	}
	// Chroma (diff) == 0 means greyscale which, by definition, saturation = 0%
	// otherwise, saturation is based on the ratio of chroma (diff) to lightness (add)
	if ( diff === 0 ) {
		s = 0;
	} else if ( l <= 0.5 ) {
		s = diff / add;
	} else {
		s = diff / ( 2 - add );
	}
	return [ Math.round( h ) % 360, s, l, a == null ? 1 : a ];
};
spaces.hsla.from = function( hsla ) {
	if ( hsla[ 0 ] == null || hsla[ 1 ] == null || hsla[ 2 ] == null ) {
		return [ null, null, null, hsla[ 3 ] ];
	}
	var h = hsla[ 0 ] / 360,
		s = hsla[ 1 ],
		l = hsla[ 2 ],
		a = hsla[ 3 ],
		q = l <= 0.5 ? l * ( 1 + s ) : l + s - l * s,
		p = 2 * l - q;
	return [
		Math.round( hue2rgb( p, q, h + ( 1 / 3 ) ) * 255 ),
		Math.round( hue2rgb( p, q, h ) * 255 ),
		Math.round( hue2rgb( p, q, h - ( 1 / 3 ) ) * 255 ),
		a
	];
};
each( spaces, function( spaceName, space ) {
	var props = space.props,
		cache = space.cache,
		to = space.to,
		from = space.from;
	// Makes rgba() and hsla()
	color.fn[ spaceName ] = function( value ) {
		// Generate a cache for this space if it doesn't exist
		if ( to && !this[ cache ] ) {
			this[ cache ] = to( this._rgba );
		}
		if ( value === undefined ) {
			return this[ cache ].slice();
		}
		var ret,
			type = jQuery.type( value ),
			arr = ( type === "array" || type === "object" ) ? value : arguments,
			local = this[ cache ].slice();
		each( props, function( key, prop ) {
			var val = arr[ type === "object" ? key : prop.idx ];
			if ( val == null ) {
				val = local[ prop.idx ];
			}
			local[ prop.idx ] = clamp( val, prop );
		} );
		if ( from ) {
			ret = color( from( local ) );
			ret[ cache ] = local;
			return ret;
		} else {
			return color( local );
		}
	};
	// Makes red() green() blue() alpha() hue() saturation() lightness()
	each( props, function( key, prop ) {
		// Alpha is included in more than one space
		if ( color.fn[ key ] ) {
			return;
		}
		color.fn[ key ] = function( value ) {
			var vtype = jQuery.type( value ),
				fn = ( key === "alpha" ? ( this._hsla ? "hsla" : "rgba" ) : spaceName ),
				local = this[ fn ](),
				cur = local[ prop.idx ],
				match;
			if ( vtype === "undefined" ) {
				return cur;
			}
			if ( vtype === "function" ) {
				value = value.call( this, cur );
				vtype = jQuery.type( value );
			}
			if ( value == null && prop.empty ) {
				return this;
			}
			if ( vtype === "string" ) {
				match = rplusequals.exec( value );
				if ( match ) {
					value = cur + parseFloat( match[ 2 ] ) * ( match[ 1 ] === "+" ? 1 : -1 );
				}
			}
			local[ prop.idx ] = value;
			return this[ fn ]( local );
		};
	} );
} );
// Add cssHook and .fx.step function for each named hook.
// accept a space separated string of properties
color.hook = function( hook ) {
	var hooks = hook.split( " " );
	each( hooks, function( i, hook ) {
		jQuery.cssHooks[ hook ] = {
			set: function( elem, value ) {
				var parsed, curElem,
					backgroundColor = "";
				if ( value !== "transparent" && ( jQuery.type( value ) !== "string" ||
						( parsed = stringParse( value ) ) ) ) {
					value = color( parsed || value );
					if ( !support.rgba && value._rgba[ 3 ] !== 1 ) {
						curElem = hook === "backgroundColor" ? elem.parentNode : elem;
						while (
							( backgroundColor === "" || backgroundColor === "transparent" ) &&
							curElem && curElem.style
						) {
							try {
								backgroundColor = jQuery.css( curElem, "backgroundColor" );
								curElem = curElem.parentNode;
							} catch ( e ) {
							}
						}
						value = value.blend( backgroundColor && backgroundColor !== "transparent" ?
							backgroundColor :
							"_default" );
					}
					value = value.toRgbaString();
				}
				try {
					elem.style[ hook ] = value;
				} catch ( e ) {
					// Wrapped to prevent IE from throwing errors on "invalid" values like
					// 'auto' or 'inherit'
				}
			}
		};
		jQuery.fx.step[ hook ] = function( fx ) {
			if ( !fx.colorInit ) {
				fx.start = color( fx.elem, hook );
				fx.end = color( fx.end );
				fx.colorInit = true;
			}
			jQuery.cssHooks[ hook ].set( fx.elem, fx.start.transition( fx.end, fx.pos ) );
		};
	} );
};
color.hook( stepHooks );
jQuery.cssHooks.borderColor = {
	expand: function( value ) {
		var expanded = {};
		each( [ "Top", "Right", "Bottom", "Left" ], function( i, part ) {
			expanded[ "border" + part + "Color" ] = value;
		} );
		return expanded;
	}
};
// Basic color names only.
// Usage of any of the other color names requires adding yourself or including
// jquery.color.svg-names.js.
colors = jQuery.Color.names = {
	// 4.1. Basic color keywords
	aqua: "#00ffff",
	black: "#000000",
	blue: "#0000ff",
	fuchsia: "#ff00ff",
	gray: "#808080",
	green: "#008000",
	lime: "#00ff00",
	maroon: "#800000",
	navy: "#000080",
	olive: "#808000",
	purple: "#800080",
	red: "#ff0000",
	silver: "#c0c0c0",
	teal: "#008080",
	white: "#ffffff",
	yellow: "#ffff00",
	// 4.2.3. "transparent" color keyword
	transparent: [ null, null, null, 0 ],
	_default: "#ffffff"
};
} )( jQuery );
/******************************************************************************/
/****************************** CLASS ANIMATIONS ******************************/
/******************************************************************************/
( function() {
var classAnimationActions = [ "add", "remove", "toggle" ],
	shorthandStyles = {
		border: 1,
		borderBottom: 1,
		borderColor: 1,
		borderLeft: 1,
		borderRight: 1,
		borderTop: 1,
		borderWidth: 1,
		margin: 1,
		padding: 1
	};
$.each(
	[ "borderLeftStyle", "borderRightStyle", "borderBottomStyle", "borderTopStyle" ],
	function( _, prop ) {
		$.fx.step[ prop ] = function( fx ) {
			if ( fx.end !== "none" && !fx.setAttr || fx.pos === 1 && !fx.setAttr ) {
				jQuery.style( fx.elem, prop, fx.end );
				fx.setAttr = true;
			}
		};
	}
);
function getElementStyles( elem ) {
	var key, len,
		style = elem.ownerDocument.defaultView ?
			elem.ownerDocument.defaultView.getComputedStyle( elem, null ) :
			elem.currentStyle,
		styles = {};
	if ( style && style.length && style[ 0 ] && style[ style[ 0 ] ] ) {
		len = style.length;
		while ( len-- ) {
			key = style[ len ];
			if ( typeof style[ key ] === "string" ) {
				styles[ $.camelCase( key ) ] = style[ key ];
			}
		}
	// Support: Opera, IE <9
	} else {
		for ( key in style ) {
			if ( typeof style[ key ] === "string" ) {
				styles[ key ] = style[ key ];
			}
		}
	}
	return styles;
}
function styleDifference( oldStyle, newStyle ) {
	var diff = {},
		name, value;
	for ( name in newStyle ) {
		value = newStyle[ name ];
		if ( oldStyle[ name ] !== value ) {
			if ( !shorthandStyles[ name ] ) {
				if ( $.fx.step[ name ] || !isNaN( parseFloat( value ) ) ) {
					diff[ name ] = value;
				}
			}
		}
	}
	return diff;
}
// Support: jQuery <1.8
if ( !$.fn.addBack ) {
	$.fn.addBack = function( selector ) {
		return this.add( selector == null ?
			this.prevObject : this.prevObject.filter( selector )
		);
	};
}
$.effects.animateClass = function( value, duration, easing, callback ) {
	var o = $.speed( duration, easing, callback );
	return this.queue( function() {
		var animated = $( this ),
			baseClass = animated.attr( "class" ) || "",
			applyClassChange,
			allAnimations = o.children ? animated.find( "*" ).addBack() : animated;
		// Map the animated objects to store the original styles.
		allAnimations = allAnimations.map( function() {
			var el = $( this );
			return {
				el: el,
				start: getElementStyles( this )
			};
		} );
		// Apply class change
		applyClassChange = function() {
			$.each( classAnimationActions, function( i, action ) {
				if ( value[ action ] ) {
					animated[ action + "Class" ]( value[ action ] );
				}
			} );
		};
		applyClassChange();
		// Map all animated objects again - calculate new styles and diff
		allAnimations = allAnimations.map( function() {
			this.end = getElementStyles( this.el[ 0 ] );
			this.diff = styleDifference( this.start, this.end );
			return this;
		} );
		// Apply original class
		animated.attr( "class", baseClass );
		// Map all animated objects again - this time collecting a promise
		allAnimations = allAnimations.map( function() {
			var styleInfo = this,
				dfd = $.Deferred(),
				opts = $.extend( {}, o, {
					queue: false,
					complete: function() {
						dfd.resolve( styleInfo );
					}
				} );
			this.el.animate( this.diff, opts );
			return dfd.promise();
		} );
		// Once all animations have completed:
		$.when.apply( $, allAnimations.get() ).done( function() {
			// Set the final class
			applyClassChange();
			// For each animated element,
			// clear all css properties that were animated
			$.each( arguments, function() {
				var el = this.el;
				$.each( this.diff, function( key ) {
					el.css( key, "" );
				} );
			} );
			// This is guarnteed to be there if you use jQuery.speed()
			// it also handles dequeuing the next anim...
			o.complete.call( animated[ 0 ] );
		} );
	} );
};
$.fn.extend( {
	addClass: ( function( orig ) {
		return function( classNames, speed, easing, callback ) {
			return speed ?
				$.effects.animateClass.call( this,
					{ add: classNames }, speed, easing, callback ) :
				orig.apply( this, arguments );
		};
	} )( $.fn.addClass ),
	removeClass: ( function( orig ) {
		return function( classNames, speed, easing, callback ) {
			return arguments.length > 1 ?
				$.effects.animateClass.call( this,
					{ remove: classNames }, speed, easing, callback ) :
				orig.apply( this, arguments );
		};
	} )( $.fn.removeClass ),
	toggleClass: ( function( orig ) {
		return function( classNames, force, speed, easing, callback ) {
			if ( typeof force === "boolean" || force === undefined ) {
				if ( !speed ) {
					// Without speed parameter
					return orig.apply( this, arguments );
				} else {
					return $.effects.animateClass.call( this,
						( force ? { add: classNames } : { remove: classNames } ),
						speed, easing, callback );
				}
			} else {
				// Without force parameter
				return $.effects.animateClass.call( this,
					{ toggle: classNames }, force, speed, easing );
			}
		};
	} )( $.fn.toggleClass ),
	switchClass: function( remove, add, speed, easing, callback ) {
		return $.effects.animateClass.call( this, {
			add: add,
			remove: remove
		}, speed, easing, callback );
	}
} );
} )();
/******************************************************************************/
/*********************************** EFFECTS **********************************/
/******************************************************************************/
( function() {
if ( $.expr && $.expr.filters && $.expr.filters.animated ) {
	$.expr.filters.animated = ( function( orig ) {
		return function( elem ) {
			return !!$( elem ).data( dataSpaceAnimated ) || orig( elem );
		};
	} )( $.expr.filters.animated );
}
if ( $.uiBackCompat !== false ) {
	$.extend( $.effects, {
		// Saves a set of properties in a data storage
		save: function( element, set ) {
			var i = 0, length = set.length;
			for ( ; i < length; i++ ) {
				if ( set[ i ] !== null ) {
					element.data( dataSpace + set[ i ], element[ 0 ].style[ set[ i ] ] );
				}
			}
		},
		// Restores a set of previously saved properties from a data storage
		restore: function( element, set ) {
			var val, i = 0, length = set.length;
			for ( ; i < length; i++ ) {
				if ( set[ i ] !== null ) {
					val = element.data( dataSpace + set[ i ] );
					element.css( set[ i ], val );
				}
			}
		},
		setMode: function( el, mode ) {
			if ( mode === "toggle" ) {
				mode = el.is( ":hidden" ) ? "show" : "hide";
			}
			return mode;
		},
		// Wraps the element around a wrapper that copies position properties
		createWrapper: function( element ) {
			// If the element is already wrapped, return it
			if ( element.parent().is( ".ui-effects-wrapper" ) ) {
				return element.parent();
			}
			// Wrap the element
			var props = {
					width: element.outerWidth( true ),
					height: element.outerHeight( true ),
					"float": element.css( "float" )
				},
				wrapper = $( "<div></div>" )
					.addClass( "ui-effects-wrapper" )
					.css( {
						fontSize: "100%",
						background: "transparent",
						border: "none",
						margin: 0,
						padding: 0
					} ),
				// Store the size in case width/height are defined in % - Fixes #5245
				size = {
					width: element.width(),
					height: element.height()
				},
				active = document.activeElement;
			// Support: Firefox
			// Firefox incorrectly exposes anonymous content
			// https://bugzilla.mozilla.org/show_bug.cgi?id=561664
			try {
				active.id;
			} catch ( e ) {
				active = document.body;
			}
			element.wrap( wrapper );
			// Fixes #7595 - Elements lose focus when wrapped.
			if ( element[ 0 ] === active || $.contains( element[ 0 ], active ) ) {
				$( active ).trigger( "focus" );
			}
			// Hotfix for jQuery 1.4 since some change in wrap() seems to actually
			// lose the reference to the wrapped element
			wrapper = element.parent();
			// Transfer positioning properties to the wrapper
			if ( element.css( "position" ) === "static" ) {
				wrapper.css( { position: "relative" } );
				element.css( { position: "relative" } );
			} else {
				$.extend( props, {
					position: element.css( "position" ),
					zIndex: element.css( "z-index" )
				} );
				$.each( [ "top", "left", "bottom", "right" ], function( i, pos ) {
					props[ pos ] = element.css( pos );
					if ( isNaN( parseInt( props[ pos ], 10 ) ) ) {
						props[ pos ] = "auto";
					}
				} );
				element.css( {
					position: "relative",
					top: 0,
					left: 0,
					right: "auto",
					bottom: "auto"
				} );
			}
			element.css( size );
			return wrapper.css( props ).show();
		},
		removeWrapper: function( element ) {
			var active = document.activeElement;
			if ( element.parent().is( ".ui-effects-wrapper" ) ) {
				element.parent().replaceWith( element );
				// Fixes #7595 - Elements lose focus when wrapped.
				if ( element[ 0 ] === active || $.contains( element[ 0 ], active ) ) {
					$( active ).trigger( "focus" );
				}
			}
			return element;
		}
	} );
}
$.extend( $.effects, {
	version: "1.12.1",
	define: function( name, mode, effect ) {
		if ( !effect ) {
			effect = mode;
			mode = "effect";
		}
		$.effects.effect[ name ] = effect;
		$.effects.effect[ name ].mode = mode;
		return effect;
	},
	scaledDimensions: function( element, percent, direction ) {
		if ( percent === 0 ) {
			return {
				height: 0,
				width: 0,
				outerHeight: 0,
				outerWidth: 0
			};
		}
		var x = direction !== "horizontal" ? ( ( percent || 100 ) / 100 ) : 1,
			y = direction !== "vertical" ? ( ( percent || 100 ) / 100 ) : 1;
		return {
			height: element.height() * y,
			width: element.width() * x,
			outerHeight: element.outerHeight() * y,
			outerWidth: element.outerWidth() * x
		};
	},
	clipToBox: function( animation ) {
		return {
			width: animation.clip.right - animation.clip.left,
			height: animation.clip.bottom - animation.clip.top,
			left: animation.clip.left,
			top: animation.clip.top
		};
	},
	// Injects recently queued functions to be first in line (after "inprogress")
	unshift: function( element, queueLength, count ) {
		var queue = element.queue();
		if ( queueLength > 1 ) {
			queue.splice.apply( queue,
				[ 1, 0 ].concat( queue.splice( queueLength, count ) ) );
		}
		element.dequeue();
	},
	saveStyle: function( element ) {
		element.data( dataSpaceStyle, element[ 0 ].style.cssText );
	},
	restoreStyle: function( element ) {
		element[ 0 ].style.cssText = element.data( dataSpaceStyle ) || "";
		element.removeData( dataSpaceStyle );
	},
	mode: function( element, mode ) {
		var hidden = element.is( ":hidden" );
		if ( mode === "toggle" ) {
			mode = hidden ? "show" : "hide";
		}
		if ( hidden ? mode === "hide" : mode === "show" ) {
			mode = "none";
		}
		return mode;
	},
	// Translates a [top,left] array into a baseline value
	getBaseline: function( origin, original ) {
		var y, x;
		switch ( origin[ 0 ] ) {
		case "top":
			y = 0;
			break;
		case "middle":
			y = 0.5;
			break;
		case "bottom":
			y = 1;
			break;
		default:
			y = origin[ 0 ] / original.height;
		}
		switch ( origin[ 1 ] ) {
		case "left":
			x = 0;
			break;
		case "center":
			x = 0.5;
			break;
		case "right":
			x = 1;
			break;
		default:
			x = origin[ 1 ] / original.width;
		}
		return {
			x: x,
			y: y
		};
	},
	// Creates a placeholder element so that the original element can be made absolute
	createPlaceholder: function( element ) {
		var placeholder,
			cssPosition = element.css( "position" ),
			position = element.position();
		// Lock in margins first to account for form elements, which
		// will change margin if you explicitly set height
		// see: http://jsfiddle.net/JZSMt/3/ https://bugs.webkit.org/show_bug.cgi?id=107380
		// Support: Safari
		element.css( {
			marginTop: element.css( "marginTop" ),
			marginBottom: element.css( "marginBottom" ),
			marginLeft: element.css( "marginLeft" ),
			marginRight: element.css( "marginRight" )
		} )
		.outerWidth( element.outerWidth() )
		.outerHeight( element.outerHeight() );
		if ( /^(static|relative)/.test( cssPosition ) ) {
			cssPosition = "absolute";
			placeholder = $( "<" + element[ 0 ].nodeName + ">" ).insertAfter( element ).css( {
				// Convert inline to inline block to account for inline elements
				// that turn to inline block based on content (like img)
				display: /^(inline|ruby)/.test( element.css( "display" ) ) ?
					"inline-block" :
					"block",
				visibility: "hidden",
				// Margins need to be set to account for margin collapse
				marginTop: element.css( "marginTop" ),
				marginBottom: element.css( "marginBottom" ),
				marginLeft: element.css( "marginLeft" ),
				marginRight: element.css( "marginRight" ),
				"float": element.css( "float" )
			} )
			.outerWidth( element.outerWidth() )
			.outerHeight( element.outerHeight() )
			.addClass( "ui-effects-placeholder" );
			element.data( dataSpace + "placeholder", placeholder );
		}
		element.css( {
			position: cssPosition,
			left: position.left,
			top: position.top
		} );
		return placeholder;
	},
	removePlaceholder: function( element ) {
		var dataKey = dataSpace + "placeholder",
				placeholder = element.data( dataKey );
		if ( placeholder ) {
			placeholder.remove();
			element.removeData( dataKey );
		}
	},
	// Removes a placeholder if it exists and restores
	// properties that were modified during placeholder creation
	cleanUp: function( element ) {
		$.effects.restoreStyle( element );
		$.effects.removePlaceholder( element );
	},
	setTransition: function( element, list, factor, value ) {
		value = value || {};
		$.each( list, function( i, x ) {
			var unit = element.cssUnit( x );
			if ( unit[ 0 ] > 0 ) {
				value[ x ] = unit[ 0 ] * factor + unit[ 1 ];
			}
		} );
		return value;
	}
} );
// Return an effect options object for the given parameters:
function _normalizeArguments( effect, options, speed, callback ) {
	// Allow passing all options as the first parameter
	if ( $.isPlainObject( effect ) ) {
		options = effect;
		effect = effect.effect;
	}
	// Convert to an object
	effect = { effect: effect };
	// Catch (effect, null, ...)
	if ( options == null ) {
		options = {};
	}
	// Catch (effect, callback)
	if ( $.isFunction( options ) ) {
		callback = options;
		speed = null;
		options = {};
	}
	// Catch (effect, speed, ?)
	if ( typeof options === "number" || $.fx.speeds[ options ] ) {
		callback = speed;
		speed = options;
		options = {};
	}
	// Catch (effect, options, callback)
	if ( $.isFunction( speed ) ) {
		callback = speed;
		speed = null;
	}
	// Add options to effect
	if ( options ) {
		$.extend( effect, options );
	}
	speed = speed || options.duration;
	effect.duration = $.fx.off ? 0 :
		typeof speed === "number" ? speed :
		speed in $.fx.speeds ? $.fx.speeds[ speed ] :
		$.fx.speeds._default;
	effect.complete = callback || options.complete;
	return effect;
}
function standardAnimationOption( option ) {
	// Valid standard speeds (nothing, number, named speed)
	if ( !option || typeof option === "number" || $.fx.speeds[ option ] ) {
		return true;
	}
	// Invalid strings - treat as "normal" speed
	if ( typeof option === "string" && !$.effects.effect[ option ] ) {
		return true;
	}
	// Complete callback
	if ( $.isFunction( option ) ) {
		return true;
	}
	// Options hash (but not naming an effect)
	if ( typeof option === "object" && !option.effect ) {
		return true;
	}
	// Didn't match any standard API
	return false;
}
$.fn.extend( {
	effect: function( /* effect, options, speed, callback */ ) {
		var args = _normalizeArguments.apply( this, arguments ),
			effectMethod = $.effects.effect[ args.effect ],
			defaultMode = effectMethod.mode,
			queue = args.queue,
			queueName = queue || "fx",
			complete = args.complete,
			mode = args.mode,
			modes = [],
			prefilter = function( next ) {
				var el = $( this ),
					normalizedMode = $.effects.mode( el, mode ) || defaultMode;
				// Sentinel for duck-punching the :animated psuedo-selector
				el.data( dataSpaceAnimated, true );
				// Save effect mode for later use,
				// we can't just call $.effects.mode again later,
				// as the .show() below destroys the initial state
				modes.push( normalizedMode );
				// See $.uiBackCompat inside of run() for removal of defaultMode in 1.13
				if ( defaultMode && ( normalizedMode === "show" ||
						( normalizedMode === defaultMode && normalizedMode === "hide" ) ) ) {
					el.show();
				}
				if ( !defaultMode || normalizedMode !== "none" ) {
					$.effects.saveStyle( el );
				}
				if ( $.isFunction( next ) ) {
					next();
				}
			};
		if ( $.fx.off || !effectMethod ) {
			// Delegate to the original method (e.g., .show()) if possible
			if ( mode ) {
				return this[ mode ]( args.duration, complete );
			} else {
				return this.each( function() {
					if ( complete ) {
						complete.call( this );
					}
				} );
			}
		}
		function run( next ) {
			var elem = $( this );
			function cleanup() {
				elem.removeData( dataSpaceAnimated );
				$.effects.cleanUp( elem );
				if ( args.mode === "hide" ) {
					elem.hide();
				}
				done();
			}
			function done() {
				if ( $.isFunction( complete ) ) {
					complete.call( elem[ 0 ] );
				}
				if ( $.isFunction( next ) ) {
					next();
				}
			}
			// Override mode option on a per element basis,
			// as toggle can be either show or hide depending on element state
			args.mode = modes.shift();
			if ( $.uiBackCompat !== false && !defaultMode ) {
				if ( elem.is( ":hidden" ) ? mode === "hide" : mode === "show" ) {
					// Call the core method to track "olddisplay" properly
					elem[ mode ]();
					done();
				} else {
					effectMethod.call( elem[ 0 ], args, done );
				}
			} else {
				if ( args.mode === "none" ) {
					// Call the core method to track "olddisplay" properly
					elem[ mode ]();
					done();
				} else {
					effectMethod.call( elem[ 0 ], args, cleanup );
				}
			}
		}
		// Run prefilter on all elements first to ensure that
		// any showing or hiding happens before placeholder creation,
		// which ensures that any layout changes are correctly captured.
		return queue === false ?
			this.each( prefilter ).each( run ) :
			this.queue( queueName, prefilter ).queue( queueName, run );
	},
	show: ( function( orig ) {
		return function( option ) {
			if ( standardAnimationOption( option ) ) {
				return orig.apply( this, arguments );
			} else {
				var args = _normalizeArguments.apply( this, arguments );
				args.mode = "show";
				return this.effect.call( this, args );
			}
		};
	} )( $.fn.show ),
	hide: ( function( orig ) {
		return function( option ) {
			if ( standardAnimationOption( option ) ) {
				return orig.apply( this, arguments );
			} else {
				var args = _normalizeArguments.apply( this, arguments );
				args.mode = "hide";
				return this.effect.call( this, args );
			}
		};
	} )( $.fn.hide ),
	toggle: ( function( orig ) {
		return function( option ) {
			if ( standardAnimationOption( option ) || typeof option === "boolean" ) {
				return orig.apply( this, arguments );
			} else {
				var args = _normalizeArguments.apply( this, arguments );
				args.mode = "toggle";
				return this.effect.call( this, args );
			}
		};
	} )( $.fn.toggle ),
	cssUnit: function( key ) {
		var style = this.css( key ),
			val = [];
		$.each( [ "em", "px", "%", "pt" ], function( i, unit ) {
			if ( style.indexOf( unit ) > 0 ) {
				val = [ parseFloat( style ), unit ];
			}
		} );
		return val;
	},
	cssClip: function( clipObj ) {
		if ( clipObj ) {
			return this.css( "clip", "rect(" + clipObj.top + "px " + clipObj.right + "px " +
				clipObj.bottom + "px " + clipObj.left + "px)" );
		}
		return parseClip( this.css( "clip" ), this );
	},
	transfer: function( options, done ) {
		var element = $( this ),
			target = $( options.to ),
			targetFixed = target.css( "position" ) === "fixed",
			body = $( "body" ),
			fixTop = targetFixed ? body.scrollTop() : 0,
			fixLeft = targetFixed ? body.scrollLeft() : 0,
			endPosition = target.offset(),
			animation = {
				top: endPosition.top - fixTop,
				left: endPosition.left - fixLeft,
				height: target.innerHeight(),
				width: target.innerWidth()
			},
			startPosition = element.offset(),
			transfer = $( "<div class='ui-effects-transfer'></div>" )
				.appendTo( "body" )
				.addClass( options.className )
				.css( {
					top: startPosition.top - fixTop,
					left: startPosition.left - fixLeft,
					height: element.innerHeight(),
					width: element.innerWidth(),
					position: targetFixed ? "fixed" : "absolute"
				} )
				.animate( animation, options.duration, options.easing, function() {
					transfer.remove();
					if ( $.isFunction( done ) ) {
						done();
					}
				} );
	}
} );
function parseClip( str, element ) {
		var outerWidth = element.outerWidth(),
			outerHeight = element.outerHeight(),
			clipRegex = /^rect\((-?\d*\.?\d*px|-?\d+%|auto),?\s*(-?\d*\.?\d*px|-?\d+%|auto),?\s*(-?\d*\.?\d*px|-?\d+%|auto),?\s*(-?\d*\.?\d*px|-?\d+%|auto)\)$/,
			values = clipRegex.exec( str ) || [ "", 0, outerWidth, outerHeight, 0 ];
		return {
			top: parseFloat( values[ 1 ] ) || 0,
			right: values[ 2 ] === "auto" ? outerWidth : parseFloat( values[ 2 ] ),
			bottom: values[ 3 ] === "auto" ? outerHeight : parseFloat( values[ 3 ] ),
			left: parseFloat( values[ 4 ] ) || 0
		};
}
$.fx.step.clip = function( fx ) {
	if ( !fx.clipInit ) {
		fx.start = $( fx.elem ).cssClip();
		if ( typeof fx.end === "string" ) {
			fx.end = parseClip( fx.end, fx.elem );
		}
		fx.clipInit = true;
	}
	$( fx.elem ).cssClip( {
		top: fx.pos * ( fx.end.top - fx.start.top ) + fx.start.top,
		right: fx.pos * ( fx.end.right - fx.start.right ) + fx.start.right,
		bottom: fx.pos * ( fx.end.bottom - fx.start.bottom ) + fx.start.bottom,
		left: fx.pos * ( fx.end.left - fx.start.left ) + fx.start.left
	} );
};
} )();
/******************************************************************************/
/*********************************** EASING ***********************************/
/******************************************************************************/
( function() {
// Based on easing equations from Robert Penner (http://www.robertpenner.com/easing)
var baseEasings = {};
$.each( [ "Quad", "Cubic", "Quart", "Quint", "Expo" ], function( i, name ) {
	baseEasings[ name ] = function( p ) {
		return Math.pow( p, i + 2 );
	};
} );
$.extend( baseEasings, {
	Sine: function( p ) {
		return 1 - Math.cos( p * Math.PI / 2 );
	},
	Circ: function( p ) {
		return 1 - Math.sqrt( 1 - p * p );
	},
	Elastic: function( p ) {
		return p === 0 || p === 1 ? p :
			-Math.pow( 2, 8 * ( p - 1 ) ) * Math.sin( ( ( p - 1 ) * 80 - 7.5 ) * Math.PI / 15 );
	},
	Back: function( p ) {
		return p * p * ( 3 * p - 2 );
	},
	Bounce: function( p ) {
		var pow2,
			bounce = 4;
		while ( p < ( ( pow2 = Math.pow( 2, --bounce ) ) - 1 ) / 11 ) {}
		return 1 / Math.pow( 4, 3 - bounce ) - 7.5625 * Math.pow( ( pow2 * 3 - 2 ) / 22 - p, 2 );
	}
} );
$.each( baseEasings, function( name, easeIn ) {
	$.easing[ "easeIn" + name ] = easeIn;
	$.easing[ "easeOut" + name ] = function( p ) {
		return 1 - easeIn( 1 - p );
	};
	$.easing[ "easeInOut" + name ] = function( p ) {
		return p < 0.5 ?
			easeIn( p * 2 ) / 2 :
			1 - easeIn( p * -2 + 2 ) / 2;
	};
} );
} )();
var effect = $.effects;
/*!
 * jQuery UI Effects Blind 1.12.1
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */
//>>label: Blind Effect
//>>group: Effects
//>>description: Blinds the element.
//>>docs: http://api.jqueryui.com/blind-effect/
//>>demos: http://jqueryui.com/effect/
var effectsEffectBlind = $.effects.define( "blind", "hide", function( options, done ) {
	var map = {
			up: [ "bottom", "top" ],
			vertical: [ "bottom", "top" ],
			down: [ "top", "bottom" ],
			left: [ "right", "left" ],
			horizontal: [ "right", "left" ],
			right: [ "left", "right" ]
		},
		element = $( this ),
		direction = options.direction || "up",
		start = element.cssClip(),
		animate = { clip: $.extend( {}, start ) },
		placeholder = $.effects.createPlaceholder( element );
	animate.clip[ map[ direction ][ 0 ] ] = animate.clip[ map[ direction ][ 1 ] ];
	if ( options.mode === "show" ) {
		element.cssClip( animate.clip );
		if ( placeholder ) {
			placeholder.css( $.effects.clipToBox( animate ) );
		}
		animate.clip = start;
	}
	if ( placeholder ) {
		placeholder.animate( $.effects.clipToBox( animate ), options.duration, options.easing );
	}
	element.animate( animate, {
		queue: false,
		duration: options.duration,
		easing: options.easing,
		complete: done
	} );
} );
/*!
 * jQuery UI Effects Bounce 1.12.1
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */
//>>label: Bounce Effect
//>>group: Effects
//>>description: Bounces an element horizontally or vertically n times.
//>>docs: http://api.jqueryui.com/bounce-effect/
//>>demos: http://jqueryui.com/effect/
var effectsEffectBounce = $.effects.define( "bounce", function( options, done ) {
	var upAnim, downAnim, refValue,
		element = $( this ),
		// Defaults:
		mode = options.mode,
		hide = mode === "hide",
		show = mode === "show",
		direction = options.direction || "up",
		distance = options.distance,
		times = options.times || 5,
		// Number of internal animations
		anims = times * 2 + ( show || hide ? 1 : 0 ),
		speed = options.duration / anims,
		easing = options.easing,
		// Utility:
		ref = ( direction === "up" || direction === "down" ) ? "top" : "left",
		motion = ( direction === "up" || direction === "left" ),
		i = 0,
		queuelen = element.queue().length;
	$.effects.createPlaceholder( element );
	refValue = element.css( ref );
	// Default distance for the BIGGEST bounce is the outer Distance / 3
	if ( !distance ) {
		distance = element[ ref === "top" ? "outerHeight" : "outerWidth" ]() / 3;
	}
	if ( show ) {
		downAnim = { opacity: 1 };
		downAnim[ ref ] = refValue;
		// If we are showing, force opacity 0 and set the initial position
		// then do the "first" animation
		element
			.css( "opacity", 0 )
			.css( ref, motion ? -distance * 2 : distance * 2 )
			.animate( downAnim, speed, easing );
	}
	// Start at the smallest distance if we are hiding
	if ( hide ) {
		distance = distance / Math.pow( 2, times - 1 );
	}
	downAnim = {};
	downAnim[ ref ] = refValue;
	// Bounces up/down/left/right then back to 0 -- times * 2 animations happen here
	for ( ; i < times; i++ ) {
		upAnim = {};
		upAnim[ ref ] = ( motion ? "-=" : "+=" ) + distance;
		element
			.animate( upAnim, speed, easing )
			.animate( downAnim, speed, easing );
		distance = hide ? distance * 2 : distance / 2;
	}
	// Last Bounce when Hiding
	if ( hide ) {
		upAnim = { opacity: 0 };
		upAnim[ ref ] = ( motion ? "-=" : "+=" ) + distance;
		element.animate( upAnim, speed, easing );
	}
	element.queue( done );
	$.effects.unshift( element, queuelen, anims + 1 );
} );
/*!
 * jQuery UI Effects Clip 1.12.1
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */
//>>label: Clip Effect
//>>group: Effects
//>>description: Clips the element on and off like an old TV.
//>>docs: http://api.jqueryui.com/clip-effect/
//>>demos: http://jqueryui.com/effect/
var effectsEffectClip = $.effects.define( "clip", "hide", function( options, done ) {
	var start,
		animate = {},
		element = $( this ),
		direction = options.direction || "vertical",
		both = direction === "both",
		horizontal = both || direction === "horizontal",
		vertical = both || direction === "vertical";
	start = element.cssClip();
	animate.clip = {
		top: vertical ? ( start.bottom - start.top ) / 2 : start.top,
		right: horizontal ? ( start.right - start.left ) / 2 : start.right,
		bottom: vertical ? ( start.bottom - start.top ) / 2 : start.bottom,
		left: horizontal ? ( start.right - start.left ) / 2 : start.left
	};
	$.effects.createPlaceholder( element );
	if ( options.mode === "show" ) {
		element.cssClip( animate.clip );
		animate.clip = start;
	}
	element.animate( animate, {
		queue: false,
		duration: options.duration,
		easing: options.easing,
		complete: done
	} );
} );
/*!
 * jQuery UI Effects Drop 1.12.1
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */
//>>label: Drop Effect
//>>group: Effects
//>>description: Moves an element in one direction and hides it at the same time.
//>>docs: http://api.jqueryui.com/drop-effect/
//>>demos: http://jqueryui.com/effect/
var effectsEffectDrop = $.effects.define( "drop", "hide", function( options, done ) {
	var distance,
		element = $( this ),
		mode = options.mode,
		show = mode === "show",
		direction = options.direction || "left",
		ref = ( direction === "up" || direction === "down" ) ? "top" : "left",
		motion = ( direction === "up" || direction === "left" ) ? "-=" : "+=",
		oppositeMotion = ( motion === "+=" ) ? "-=" : "+=",
		animation = {
			opacity: 0
		};
	$.effects.createPlaceholder( element );
	distance = options.distance ||
		element[ ref === "top" ? "outerHeight" : "outerWidth" ]( true ) / 2;
	animation[ ref ] = motion + distance;
	if ( show ) {
		element.css( animation );
		animation[ ref ] = oppositeMotion + distance;
		animation.opacity = 1;
	}
	// Animate
	element.animate( animation, {
		queue: false,
		duration: options.duration,
		easing: options.easing,
		complete: done
	} );
} );
/*!
 * jQuery UI Effects Explode 1.12.1
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */
//>>label: Explode Effect
//>>group: Effects
// jscs:disable maximumLineLength
//>>description: Explodes an element in all directions into n pieces. Implodes an element to its original wholeness.
// jscs:enable maximumLineLength
//>>docs: http://api.jqueryui.com/explode-effect/
//>>demos: http://jqueryui.com/effect/
var effectsEffectExplode = $.effects.define( "explode", "hide", function( options, done ) {
	var i, j, left, top, mx, my,
		rows = options.pieces ? Math.round( Math.sqrt( options.pieces ) ) : 3,
		cells = rows,
		element = $( this ),
		mode = options.mode,
		show = mode === "show",
		// Show and then visibility:hidden the element before calculating offset
		offset = element.show().css( "visibility", "hidden" ).offset(),
		// Width and height of a piece
		width = Math.ceil( element.outerWidth() / cells ),
		height = Math.ceil( element.outerHeight() / rows ),
		pieces = [];
	// Children animate complete:
	function childComplete() {
		pieces.push( this );
		if ( pieces.length === rows * cells ) {
			animComplete();
		}
	}
	// Clone the element for each row and cell.
	for ( i = 0; i < rows; i++ ) { // ===>
		top = offset.top + i * height;
		my = i - ( rows - 1 ) / 2;
		for ( j = 0; j < cells; j++ ) { // |||
			left = offset.left + j * width;
			mx = j - ( cells - 1 ) / 2;
			// Create a clone of the now hidden main element that will be absolute positioned
			// within a wrapper div off the -left and -top equal to size of our pieces
			element
				.clone()
				.appendTo( "body" )
				.wrap( "<div></div>" )
				.css( {
					position: "absolute",
					visibility: "visible",
					left: -j * width,
					top: -i * height
				} )
				// Select the wrapper - make it overflow: hidden and absolute positioned based on
				// where the original was located +left and +top equal to the size of pieces
				.parent()
					.addClass( "ui-effects-explode" )
					.css( {
						position: "absolute",
						overflow: "hidden",
						width: width,
						height: height,
						left: left + ( show ? mx * width : 0 ),
						top: top + ( show ? my * height : 0 ),
						opacity: show ? 0 : 1
					} )
					.animate( {
						left: left + ( show ? 0 : mx * width ),
						top: top + ( show ? 0 : my * height ),
						opacity: show ? 1 : 0
					}, options.duration || 500, options.easing, childComplete );
		}
	}
	function animComplete() {
		element.css( {
			visibility: "visible"
		} );
		$( pieces ).remove();
		done();
	}
} );
/*!
 * jQuery UI Effects Fade 1.12.1
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */
//>>label: Fade Effect
//>>group: Effects
//>>description: Fades the element.
//>>docs: http://api.jqueryui.com/fade-effect/
//>>demos: http://jqueryui.com/effect/
var effectsEffectFade = $.effects.define( "fade", "toggle", function( options, done ) {
	var show = options.mode === "show";
	$( this )
		.css( "opacity", show ? 0 : 1 )
		.animate( {
			opacity: show ? 1 : 0
		}, {
			queue: false,
			duration: options.duration,
			easing: options.easing,
			complete: done
		} );
} );
/*!
 * jQuery UI Effects Fold 1.12.1
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */
//>>label: Fold Effect
//>>group: Effects
//>>description: Folds an element first horizontally and then vertically.
//>>docs: http://api.jqueryui.com/fold-effect/
//>>demos: http://jqueryui.com/effect/
var effectsEffectFold = $.effects.define( "fold", "hide", function( options, done ) {
	// Create element
	var element = $( this ),
		mode = options.mode,
		show = mode === "show",
		hide = mode === "hide",
		size = options.size || 15,
		percent = /([0-9]+)%/.exec( size ),
		horizFirst = !!options.horizFirst,
		ref = horizFirst ? [ "right", "bottom" ] : [ "bottom", "right" ],
		duration = options.duration / 2,
		placeholder = $.effects.createPlaceholder( element ),
		start = element.cssClip(),
		animation1 = { clip: $.extend( {}, start ) },
		animation2 = { clip: $.extend( {}, start ) },
		distance = [ start[ ref[ 0 ] ], start[ ref[ 1 ] ] ],
		queuelen = element.queue().length;
	if ( percent ) {
		size = parseInt( percent[ 1 ], 10 ) / 100 * distance[ hide ? 0 : 1 ];
	}
	animation1.clip[ ref[ 0 ] ] = size;
	animation2.clip[ ref[ 0 ] ] = size;
	animation2.clip[ ref[ 1 ] ] = 0;
	if ( show ) {
		element.cssClip( animation2.clip );
		if ( placeholder ) {
			placeholder.css( $.effects.clipToBox( animation2 ) );
		}
		animation2.clip = start;
	}
	// Animate
	element
		.queue( function( next ) {
			if ( placeholder ) {
				placeholder
					.animate( $.effects.clipToBox( animation1 ), duration, options.easing )
					.animate( $.effects.clipToBox( animation2 ), duration, options.easing );
			}
			next();
		} )
		.animate( animation1, duration, options.easing )
		.animate( animation2, duration, options.easing )
		.queue( done );
	$.effects.unshift( element, queuelen, 4 );
} );
/*!
 * jQuery UI Effects Highlight 1.12.1
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */
//>>label: Highlight Effect
//>>group: Effects
//>>description: Highlights the background of an element in a defined color for a custom duration.
//>>docs: http://api.jqueryui.com/highlight-effect/
//>>demos: http://jqueryui.com/effect/
var effectsEffectHighlight = $.effects.define( "highlight", "show", function( options, done ) {
	var element = $( this ),
		animation = {
			backgroundColor: element.css( "backgroundColor" )
		};
	if ( options.mode === "hide" ) {
		animation.opacity = 0;
	}
	$.effects.saveStyle( element );
	element
		.css( {
			backgroundImage: "none",
			backgroundColor: options.color || "#ffff99"
		} )
		.animate( animation, {
			queue: false,
			duration: options.duration,
			easing: options.easing,
			complete: done
		} );
} );
/*!
 * jQuery UI Effects Size 1.12.1
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */
//>>label: Size Effect
//>>group: Effects
//>>description: Resize an element to a specified width and height.
//>>docs: http://api.jqueryui.com/size-effect/
//>>demos: http://jqueryui.com/effect/
var effectsEffectSize = $.effects.define( "size", function( options, done ) {
	// Create element
	var baseline, factor, temp,
		element = $( this ),
		// Copy for children
		cProps = [ "fontSize" ],
		vProps = [ "borderTopWidth", "borderBottomWidth", "paddingTop", "paddingBottom" ],
		hProps = [ "borderLeftWidth", "borderRightWidth", "paddingLeft", "paddingRight" ],
		// Set options
		mode = options.mode,
		restore = mode !== "effect",
		scale = options.scale || "both",
		origin = options.origin || [ "middle", "center" ],
		position = element.css( "position" ),
		pos = element.position(),
		original = $.effects.scaledDimensions( element ),
		from = options.from || original,
		to = options.to || $.effects.scaledDimensions( element, 0 );
	$.effects.createPlaceholder( element );
	if ( mode === "show" ) {
		temp = from;
		from = to;
		to = temp;
	}
	// Set scaling factor
	factor = {
		from: {
			y: from.height / original.height,
			x: from.width / original.width
		},
		to: {
			y: to.height / original.height,
			x: to.width / original.width
		}
	};
	// Scale the css box
	if ( scale === "box" || scale === "both" ) {
		// Vertical props scaling
		if ( factor.from.y !== factor.to.y ) {
			from = $.effects.setTransition( element, vProps, factor.from.y, from );
			to = $.effects.setTransition( element, vProps, factor.to.y, to );
		}
		// Horizontal props scaling
		if ( factor.from.x !== factor.to.x ) {
			from = $.effects.setTransition( element, hProps, factor.from.x, from );
			to = $.effects.setTransition( element, hProps, factor.to.x, to );
		}
	}
	// Scale the content
	if ( scale === "content" || scale === "both" ) {
		// Vertical props scaling
		if ( factor.from.y !== factor.to.y ) {
			from = $.effects.setTransition( element, cProps, factor.from.y, from );
			to = $.effects.setTransition( element, cProps, factor.to.y, to );
		}
	}
	// Adjust the position properties based on the provided origin points
	if ( origin ) {
		baseline = $.effects.getBaseline( origin, original );
		from.top = ( original.outerHeight - from.outerHeight ) * baseline.y + pos.top;
		from.left = ( original.outerWidth - from.outerWidth ) * baseline.x + pos.left;
		to.top = ( original.outerHeight - to.outerHeight ) * baseline.y + pos.top;
		to.left = ( original.outerWidth - to.outerWidth ) * baseline.x + pos.left;
	}
	element.css( from );
	// Animate the children if desired
	if ( scale === "content" || scale === "both" ) {
		vProps = vProps.concat( [ "marginTop", "marginBottom" ] ).concat( cProps );
		hProps = hProps.concat( [ "marginLeft", "marginRight" ] );
		// Only animate children with width attributes specified
		// TODO: is this right? should we include anything with css width specified as well
		element.find( "*[width]" ).each( function() {
			var child = $( this ),
				childOriginal = $.effects.scaledDimensions( child ),
				childFrom = {
					height: childOriginal.height * factor.from.y,
					width: childOriginal.width * factor.from.x,
					outerHeight: childOriginal.outerHeight * factor.from.y,
					outerWidth: childOriginal.outerWidth * factor.from.x
				},
				childTo = {
					height: childOriginal.height * factor.to.y,
					width: childOriginal.width * factor.to.x,
					outerHeight: childOriginal.height * factor.to.y,
					outerWidth: childOriginal.width * factor.to.x
				};
			// Vertical props scaling
			if ( factor.from.y !== factor.to.y ) {
				childFrom = $.effects.setTransition( child, vProps, factor.from.y, childFrom );
				childTo = $.effects.setTransition( child, vProps, factor.to.y, childTo );
			}
			// Horizontal props scaling
			if ( factor.from.x !== factor.to.x ) {
				childFrom = $.effects.setTransition( child, hProps, factor.from.x, childFrom );
				childTo = $.effects.setTransition( child, hProps, factor.to.x, childTo );
			}
			if ( restore ) {
				$.effects.saveStyle( child );
			}
			// Animate children
			child.css( childFrom );
			child.animate( childTo, options.duration, options.easing, function() {
				// Restore children
				if ( restore ) {
					$.effects.restoreStyle( child );
				}
			} );
		} );
	}
	// Animate
	element.animate( to, {
		queue: false,
		duration: options.duration,
		easing: options.easing,
		complete: function() {
			var offset = element.offset();
			if ( to.opacity === 0 ) {
				element.css( "opacity", from.opacity );
			}
			if ( !restore ) {
				element
					.css( "position", position === "static" ? "relative" : position )
					.offset( offset );
				// Need to save style here so that automatic style restoration
				// doesn't restore to the original styles from before the animation.
				$.effects.saveStyle( element );
			}
			done();
		}
	} );
} );
/*!
 * jQuery UI Effects Scale 1.12.1
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */
//>>label: Scale Effect
//>>group: Effects
//>>description: Grows or shrinks an element and its content.
//>>docs: http://api.jqueryui.com/scale-effect/
//>>demos: http://jqueryui.com/effect/
var effectsEffectScale = $.effects.define( "scale", function( options, done ) {
	// Create element
	var el = $( this ),
		mode = options.mode,
		percent = parseInt( options.percent, 10 ) ||
			( parseInt( options.percent, 10 ) === 0 ? 0 : ( mode !== "effect" ? 0 : 100 ) ),
		newOptions = $.extend( true, {
			from: $.effects.scaledDimensions( el ),
			to: $.effects.scaledDimensions( el, percent, options.direction || "both" ),
			origin: options.origin || [ "middle", "center" ]
		}, options );
	// Fade option to support puff
	if ( options.fade ) {
		newOptions.from.opacity = 1;
		newOptions.to.opacity = 0;
	}
	$.effects.effect.size.call( this, newOptions, done );
} );
/*!
 * jQuery UI Effects Puff 1.12.1
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */
//>>label: Puff Effect
//>>group: Effects
//>>description: Creates a puff effect by scaling the element up and hiding it at the same time.
//>>docs: http://api.jqueryui.com/puff-effect/
//>>demos: http://jqueryui.com/effect/
var effectsEffectPuff = $.effects.define( "puff", "hide", function( options, done ) {
	var newOptions = $.extend( true, {}, options, {
		fade: true,
		percent: parseInt( options.percent, 10 ) || 150
	} );
	$.effects.effect.scale.call( this, newOptions, done );
} );
/*!
 * jQuery UI Effects Pulsate 1.12.1
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */
//>>label: Pulsate Effect
//>>group: Effects
//>>description: Pulsates an element n times by changing the opacity to zero and back.
//>>docs: http://api.jqueryui.com/pulsate-effect/
//>>demos: http://jqueryui.com/effect/
var effectsEffectPulsate = $.effects.define( "pulsate", "show", function( options, done ) {
	var element = $( this ),
		mode = options.mode,
		show = mode === "show",
		hide = mode === "hide",
		showhide = show || hide,
		// Showing or hiding leaves off the "last" animation
		anims = ( ( options.times || 5 ) * 2 ) + ( showhide ? 1 : 0 ),
		duration = options.duration / anims,
		animateTo = 0,
		i = 1,
		queuelen = element.queue().length;
	if ( show || !element.is( ":visible" ) ) {
		element.css( "opacity", 0 ).show();
		animateTo = 1;
	}
	// Anims - 1 opacity "toggles"
	for ( ; i < anims; i++ ) {
		element.animate( { opacity: animateTo }, duration, options.easing );
		animateTo = 1 - animateTo;
	}
	element.animate( { opacity: animateTo }, duration, options.easing );
	element.queue( done );
	$.effects.unshift( element, queuelen, anims + 1 );
} );
/*!
 * jQuery UI Effects Shake 1.12.1
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */
//>>label: Shake Effect
//>>group: Effects
//>>description: Shakes an element horizontally or vertically n times.
//>>docs: http://api.jqueryui.com/shake-effect/
//>>demos: http://jqueryui.com/effect/
var effectsEffectShake = $.effects.define( "shake", function( options, done ) {
	var i = 1,
		element = $( this ),
		direction = options.direction || "left",
		distance = options.distance || 20,
		times = options.times || 3,
		anims = times * 2 + 1,
		speed = Math.round( options.duration / anims ),
		ref = ( direction === "up" || direction === "down" ) ? "top" : "left",
		positiveMotion = ( direction === "up" || direction === "left" ),
		animation = {},
		animation1 = {},
		animation2 = {},
		queuelen = element.queue().length;
	$.effects.createPlaceholder( element );
	// Animation
	animation[ ref ] = ( positiveMotion ? "-=" : "+=" ) + distance;
	animation1[ ref ] = ( positiveMotion ? "+=" : "-=" ) + distance * 2;
	animation2[ ref ] = ( positiveMotion ? "-=" : "+=" ) + distance * 2;
	// Animate
	element.animate( animation, speed, options.easing );
	// Shakes
	for ( ; i < times; i++ ) {
		element
			.animate( animation1, speed, options.easing )
			.animate( animation2, speed, options.easing );
	}
	element
		.animate( animation1, speed, options.easing )
		.animate( animation, speed / 2, options.easing )
		.queue( done );
	$.effects.unshift( element, queuelen, anims + 1 );
} );
/*!
 * jQuery UI Effects Slide 1.12.1
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */
//>>label: Slide Effect
//>>group: Effects
//>>description: Slides an element in and out of the viewport.
//>>docs: http://api.jqueryui.com/slide-effect/
//>>demos: http://jqueryui.com/effect/
var effectsEffectSlide = $.effects.define( "slide", "show", function( options, done ) {
	var startClip, startRef,
		element = $( this ),
		map = {
			up: [ "bottom", "top" ],
			down: [ "top", "bottom" ],
			left: [ "right", "left" ],
			right: [ "left", "right" ]
		},
		mode = options.mode,
		direction = options.direction || "left",
		ref = ( direction === "up" || direction === "down" ) ? "top" : "left",
		positiveMotion = ( direction === "up" || direction === "left" ),
		distance = options.distance ||
			element[ ref === "top" ? "outerHeight" : "outerWidth" ]( true ),
		animation = {};
	$.effects.createPlaceholder( element );
	startClip = element.cssClip();
	startRef = element.position()[ ref ];
	// Define hide animation
	animation[ ref ] = ( positiveMotion ? -1 : 1 ) * distance + startRef;
	animation.clip = element.cssClip();
	animation.clip[ map[ direction ][ 1 ] ] = animation.clip[ map[ direction ][ 0 ] ];
	// Reverse the animation if we're showing
	if ( mode === "show" ) {
		element.cssClip( animation.clip );
		element.css( ref, animation[ ref ] );
		animation.clip = startClip;
		animation[ ref ] = startRef;
	}
	// Actually animate
	element.animate( animation, {
		queue: false,
		duration: options.duration,
		easing: options.easing,
		complete: done
	} );
} );
/*!
 * jQuery UI Effects Transfer 1.12.1
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */
//>>label: Transfer Effect
//>>group: Effects
//>>description: Displays a transfer effect from one element to another.
//>>docs: http://api.jqueryui.com/transfer-effect/
//>>demos: http://jqueryui.com/effect/
var effect;
if ( $.uiBackCompat !== false ) {
	effect = $.effects.define( "transfer", function( options, done ) {
		$( this ).transfer( options, done );
	} );
}
var effectsEffectTransfer = effect;
}));/* == jquery mousewheel plugin == Version: 3.1.13, License: MIT License (MIT) */
!function(a){"function"==typeof define&&define.amd?define(["jquery"],a):"object"==typeof exports?module.exports=a:a(jQuery)}(function(a){function b(b){var g=b||window.event,h=i.call(arguments,1),j=0,l=0,m=0,n=0,o=0,p=0;if(b=a.event.fix(g),b.type="mousewheel","detail"in g&&(m=-1*g.detail),"wheelDelta"in g&&(m=g.wheelDelta),"wheelDeltaY"in g&&(m=g.wheelDeltaY),"wheelDeltaX"in g&&(l=-1*g.wheelDeltaX),"axis"in g&&g.axis===g.HORIZONTAL_AXIS&&(l=-1*m,m=0),j=0===m?l:m,"deltaY"in g&&(m=-1*g.deltaY,j=m),"deltaX"in g&&(l=g.deltaX,0===m&&(j=-1*l)),0!==m||0!==l){if(1===g.deltaMode){var q=a.data(this,"mousewheel-line-height");j*=q,m*=q,l*=q}else if(2===g.deltaMode){var r=a.data(this,"mousewheel-page-height");j*=r,m*=r,l*=r}if(n=Math.max(Math.abs(m),Math.abs(l)),(!f||f>n)&&(f=n,d(g,n)&&(f/=40)),d(g,n)&&(j/=40,l/=40,m/=40),j=Math[j>=1?"floor":"ceil"](j/f),l=Math[l>=1?"floor":"ceil"](l/f),m=Math[m>=1?"floor":"ceil"](m/f),k.settings.normalizeOffset&&this.getBoundingClientRect){var s=this.getBoundingClientRect();o=b.clientX-s.left,p=b.clientY-s.top}return b.deltaX=l,b.deltaY=m,b.deltaFactor=f,b.offsetX=o,b.offsetY=p,b.deltaMode=0,h.unshift(b,j,l,m),e&&clearTimeout(e),e=setTimeout(c,200),(a.event.dispatch||a.event.handle).apply(this,h)}}function c(){f=null}function d(a,b){return k.settings.adjustOldDeltas&&"mousewheel"===a.type&&b%120===0}var e,f,g=["wheel","mousewheel","DOMMouseScroll","MozMousePixelScroll"],h="onwheel"in document||document.documentMode>=9?["wheel"]:["mousewheel","DomMouseScroll","MozMousePixelScroll"],i=Array.prototype.slice;if(a.event.fixHooks)for(var j=g.length;j;)a.event.fixHooks[g[--j]]=a.event.mouseHooks;var k=a.event.special.mousewheel={version:"3.1.12",setup:function(){if(this.addEventListener)for(var c=h.length;c;)this.addEventListener(h[--c],b,!1);else this.onmousewheel=b;a.data(this,"mousewheel-line-height",k.getLineHeight(this)),a.data(this,"mousewheel-page-height",k.getPageHeight(this))},teardown:function(){if(this.removeEventListener)for(var c=h.length;c;)this.removeEventListener(h[--c],b,!1);else this.onmousewheel=null;a.removeData(this,"mousewheel-line-height"),a.removeData(this,"mousewheel-page-height")},getLineHeight:function(b){var c=a(b),d=c["offsetParent"in a.fn?"offsetParent":"parent"]();return d.length||(d=a("body")),parseInt(d.css("fontSize"),10)||parseInt(c.css("fontSize"),10)||16},getPageHeight:function(b){return a(b).height()},settings:{adjustOldDeltas:!0,normalizeOffset:!0}};a.fn.extend({mousewheel:function(a){return a?this.bind("mousewheel",a):this.trigger("mousewheel")},unmousewheel:function(a){return this.unbind("mousewheel",a)}})});!function(a){"function"==typeof define&&define.amd?define(["jquery"],a):"object"==typeof exports?module.exports=a:a(jQuery)}(function(a){function b(b){var g=b||window.event,h=i.call(arguments,1),j=0,l=0,m=0,n=0,o=0,p=0;if(b=a.event.fix(g),b.type="mousewheel","detail"in g&&(m=-1*g.detail),"wheelDelta"in g&&(m=g.wheelDelta),"wheelDeltaY"in g&&(m=g.wheelDeltaY),"wheelDeltaX"in g&&(l=-1*g.wheelDeltaX),"axis"in g&&g.axis===g.HORIZONTAL_AXIS&&(l=-1*m,m=0),j=0===m?l:m,"deltaY"in g&&(m=-1*g.deltaY,j=m),"deltaX"in g&&(l=g.deltaX,0===m&&(j=-1*l)),0!==m||0!==l){if(1===g.deltaMode){var q=a.data(this,"mousewheel-line-height");j*=q,m*=q,l*=q}else if(2===g.deltaMode){var r=a.data(this,"mousewheel-page-height");j*=r,m*=r,l*=r}if(n=Math.max(Math.abs(m),Math.abs(l)),(!f||f>n)&&(f=n,d(g,n)&&(f/=40)),d(g,n)&&(j/=40,l/=40,m/=40),j=Math[j>=1?"floor":"ceil"](j/f),l=Math[l>=1?"floor":"ceil"](l/f),m=Math[m>=1?"floor":"ceil"](m/f),k.settings.normalizeOffset&&this.getBoundingClientRect){var s=this.getBoundingClientRect();o=b.clientX-s.left,p=b.clientY-s.top}return b.deltaX=l,b.deltaY=m,b.deltaFactor=f,b.offsetX=o,b.offsetY=p,b.deltaMode=0,h.unshift(b,j,l,m),e&&clearTimeout(e),e=setTimeout(c,200),(a.event.dispatch||a.event.handle).apply(this,h)}}function c(){f=null}function d(a,b){return k.settings.adjustOldDeltas&&"mousewheel"===a.type&&b%120===0}var e,f,g=["wheel","mousewheel","DOMMouseScroll","MozMousePixelScroll"],h="onwheel"in document||document.documentMode>=9?["wheel"]:["mousewheel","DomMouseScroll","MozMousePixelScroll"],i=Array.prototype.slice;if(a.event.fixHooks)for(var j=g.length;j;)a.event.fixHooks[g[--j]]=a.event.mouseHooks;var k=a.event.special.mousewheel={version:"3.1.12",setup:function(){if(this.addEventListener)for(var c=h.length;c;)this.addEventListener(h[--c],b,!1);else this.onmousewheel=b;a.data(this,"mousewheel-line-height",k.getLineHeight(this)),a.data(this,"mousewheel-page-height",k.getPageHeight(this))},teardown:function(){if(this.removeEventListener)for(var c=h.length;c;)this.removeEventListener(h[--c],b,!1);else this.onmousewheel=null;a.removeData(this,"mousewheel-line-height"),a.removeData(this,"mousewheel-page-height")},getLineHeight:function(b){var c=a(b),d=c["offsetParent"in a.fn?"offsetParent":"parent"]();return d.length||(d=a("body")),parseInt(d.css("fontSize"),10)||parseInt(c.css("fontSize"),10)||16},getPageHeight:function(b){return a(b).height()},settings:{adjustOldDeltas:!0,normalizeOffset:!0}};a.fn.extend({mousewheel:function(a){return a?this.bind("mousewheel",a):this.trigger("mousewheel")},unmousewheel:function(a){return this.unbind("mousewheel",a)}})});
/* == malihu jquery custom scrollbar plugin == Version: 3.1.5, License: MIT License (MIT) */
!function(e){"function"==typeof define&&define.amd?define(["jquery"],e):"undefined"!=typeof module&&module.exports?module.exports=e:e(jQuery,window,document)}(function(e){!function(t){var o="function"==typeof define&&define.amd,a="undefined"!=typeof module&&module.exports,n="https:"==document.location.protocol?"https:":"http:",i="cdnjs.cloudflare.com/ajax/libs/jquery-mousewheel/3.1.13/jquery.mousewheel.min.js";o||(a?require("jquery-mousewheel")(e):e.event.special.mousewheel||e("head").append(decodeURI("%3Cscript src="+n+"//"+i+"%3E%3C/script%3E"))),t()}(function(){var t,o="mCustomScrollbar",a="mCS",n=".mCustomScrollbar",i={setTop:0,setLeft:0,axis:"y",scrollbarPosition:"inside",scrollInertia:950,autoDraggerLength:!0,alwaysShowScrollbar:0,snapOffset:0,mouseWheel:{enable:!0,scrollAmount:"auto",axis:"y",deltaFactor:"auto",disableOver:["select","option","keygen","datalist","textarea"]},scrollButtons:{scrollType:"stepless",scrollAmount:"auto"},keyboard:{enable:!0,scrollType:"stepless",scrollAmount:"auto"},contentTouchScroll:25,documentTouchScroll:!0,advanced:{autoScrollOnFocus:"input,textarea,select,button,datalist,keygen,a[tabindex],area,object,[contenteditable='true']",updateOnContentResize:!0,updateOnImageLoad:"auto",autoUpdateTimeout:60},theme:"light",callbacks:{onTotalScrollOffset:0,onTotalScrollBackOffset:0,alwaysTriggerOffsets:!0}},r=0,l={},s=window.attachEvent&&!window.addEventListener?1:0,c=!1,d=["mCSB_dragger_onDrag","mCSB_scrollTools_onDrag","mCS_img_loaded","mCS_disabled","mCS_destroyed","mCS_no_scrollbar","mCS-autoHide","mCS-dir-rtl","mCS_no_scrollbar_y","mCS_no_scrollbar_x","mCS_y_hidden","mCS_x_hidden","mCSB_draggerContainer","mCSB_buttonUp","mCSB_buttonDown","mCSB_buttonLeft","mCSB_buttonRight"],u={init:function(t){var t=e.extend(!0,{},i,t),o=f.call(this);if(t.live){var s=t.liveSelector||this.selector||n,c=e(s);if("off"===t.live)return void m(s);l[s]=setTimeout(function(){c.mCustomScrollbar(t),"once"===t.live&&c.length&&m(s)},500)}else m(s);return t.setWidth=t.set_width?t.set_width:t.setWidth,t.setHeight=t.set_height?t.set_height:t.setHeight,t.axis=t.horizontalScroll?"x":p(t.axis),t.scrollInertia=t.scrollInertia>0&&t.scrollInertia<17?17:t.scrollInertia,"object"!=typeof t.mouseWheel&&1==t.mouseWheel&&(t.mouseWheel={enable:!0,scrollAmount:"auto",axis:"y",preventDefault:!1,deltaFactor:"auto",normalizeDelta:!1,invert:!1}),t.mouseWheel.scrollAmount=t.mouseWheelPixels?t.mouseWheelPixels:t.mouseWheel.scrollAmount,t.mouseWheel.normalizeDelta=t.advanced.normalizeMouseWheelDelta?t.advanced.normalizeMouseWheelDelta:t.mouseWheel.normalizeDelta,t.scrollButtons.scrollType=g(t.scrollButtons.scrollType),h(t),e(o).each(function(){var o=e(this);if(!o.data(a)){o.data(a,{idx:++r,opt:t,scrollRatio:{y:null,x:null},overflowed:null,contentReset:{y:null,x:null},bindEvents:!1,tweenRunning:!1,sequential:{},langDir:o.css("direction"),cbOffsets:null,trigger:null,poll:{size:{o:0,n:0},img:{o:0,n:0},change:{o:0,n:0}}});var n=o.data(a),i=n.opt,l=o.data("mcs-axis"),s=o.data("mcs-scrollbar-position"),c=o.data("mcs-theme");l&&(i.axis=l),s&&(i.scrollbarPosition=s),c&&(i.theme=c,h(i)),v.call(this),n&&i.callbacks.onCreate&&"function"==typeof i.callbacks.onCreate&&i.callbacks.onCreate.call(this),e("#mCSB_"+n.idx+"_container img:not(."+d[2]+")").addClass(d[2]),u.update.call(null,o)}})},update:function(t,o){var n=t||f.call(this);return e(n).each(function(){var t=e(this);if(t.data(a)){var n=t.data(a),i=n.opt,r=e("#mCSB_"+n.idx+"_container"),l=e("#mCSB_"+n.idx),s=[e("#mCSB_"+n.idx+"_dragger_vertical"),e("#mCSB_"+n.idx+"_dragger_horizontal")];if(!r.length)return;n.tweenRunning&&Q(t),o&&n&&i.callbacks.onBeforeUpdate&&"function"==typeof i.callbacks.onBeforeUpdate&&i.callbacks.onBeforeUpdate.call(this),t.hasClass(d[3])&&t.removeClass(d[3]),t.hasClass(d[4])&&t.removeClass(d[4]),l.css("max-height","none"),l.height()!==t.height()&&l.css("max-height",t.height()),_.call(this),"y"===i.axis||i.advanced.autoExpandHorizontalScroll||r.css("width",x(r)),n.overflowed=y.call(this),M.call(this),i.autoDraggerLength&&S.call(this),b.call(this),T.call(this);var c=[Math.abs(r[0].offsetTop),Math.abs(r[0].offsetLeft)];"x"!==i.axis&&(n.overflowed[0]?s[0].height()>s[0].parent().height()?B.call(this):(G(t,c[0].toString(),{dir:"y",dur:0,overwrite:"none"}),n.contentReset.y=null):(B.call(this),"y"===i.axis?k.call(this):"yx"===i.axis&&n.overflowed[1]&&G(t,c[1].toString(),{dir:"x",dur:0,overwrite:"none"}))),"y"!==i.axis&&(n.overflowed[1]?s[1].width()>s[1].parent().width()?B.call(this):(G(t,c[1].toString(),{dir:"x",dur:0,overwrite:"none"}),n.contentReset.x=null):(B.call(this),"x"===i.axis?k.call(this):"yx"===i.axis&&n.overflowed[0]&&G(t,c[0].toString(),{dir:"y",dur:0,overwrite:"none"}))),o&&n&&(2===o&&i.callbacks.onImageLoad&&"function"==typeof i.callbacks.onImageLoad?i.callbacks.onImageLoad.call(this):3===o&&i.callbacks.onSelectorChange&&"function"==typeof i.callbacks.onSelectorChange?i.callbacks.onSelectorChange.call(this):i.callbacks.onUpdate&&"function"==typeof i.callbacks.onUpdate&&i.callbacks.onUpdate.call(this)),N.call(this)}})},scrollTo:function(t,o){if("undefined"!=typeof t&&null!=t){var n=f.call(this);return e(n).each(function(){var n=e(this);if(n.data(a)){var i=n.data(a),r=i.opt,l={trigger:"external",scrollInertia:r.scrollInertia,scrollEasing:"mcsEaseInOut",moveDragger:!1,timeout:60,callbacks:!0,onStart:!0,onUpdate:!0,onComplete:!0},s=e.extend(!0,{},l,o),c=Y.call(this,t),d=s.scrollInertia>0&&s.scrollInertia<17?17:s.scrollInertia;c[0]=X.call(this,c[0],"y"),c[1]=X.call(this,c[1],"x"),s.moveDragger&&(c[0]*=i.scrollRatio.y,c[1]*=i.scrollRatio.x),s.dur=ne()?0:d,setTimeout(function(){null!==c[0]&&"undefined"!=typeof c[0]&&"x"!==r.axis&&i.overflowed[0]&&(s.dir="y",s.overwrite="all",G(n,c[0].toString(),s)),null!==c[1]&&"undefined"!=typeof c[1]&&"y"!==r.axis&&i.overflowed[1]&&(s.dir="x",s.overwrite="none",G(n,c[1].toString(),s))},s.timeout)}})}},stop:function(){var t=f.call(this);return e(t).each(function(){var t=e(this);t.data(a)&&Q(t)})},disable:function(t){var o=f.call(this);return e(o).each(function(){var o=e(this);if(o.data(a)){o.data(a);N.call(this,"remove"),k.call(this),t&&B.call(this),M.call(this,!0),o.addClass(d[3])}})},destroy:function(){var t=f.call(this);return e(t).each(function(){var n=e(this);if(n.data(a)){var i=n.data(a),r=i.opt,l=e("#mCSB_"+i.idx),s=e("#mCSB_"+i.idx+"_container"),c=e(".mCSB_"+i.idx+"_scrollbar");r.live&&m(r.liveSelector||e(t).selector),N.call(this,"remove"),k.call(this),B.call(this),n.removeData(a),$(this,"mcs"),c.remove(),s.find("img."+d[2]).removeClass(d[2]),l.replaceWith(s.contents()),n.removeClass(o+" _"+a+"_"+i.idx+" "+d[6]+" "+d[7]+" "+d[5]+" "+d[3]).addClass(d[4])}})}},f=function(){return"object"!=typeof e(this)||e(this).length<1?n:this},h=function(t){var o=["rounded","rounded-dark","rounded-dots","rounded-dots-dark"],a=["rounded-dots","rounded-dots-dark","3d","3d-dark","3d-thick","3d-thick-dark","inset","inset-dark","inset-2","inset-2-dark","inset-3","inset-3-dark"],n=["minimal","minimal-dark"],i=["minimal","minimal-dark"],r=["minimal","minimal-dark"];t.autoDraggerLength=e.inArray(t.theme,o)>-1?!1:t.autoDraggerLength,t.autoExpandScrollbar=e.inArray(t.theme,a)>-1?!1:t.autoExpandScrollbar,t.scrollButtons.enable=e.inArray(t.theme,n)>-1?!1:t.scrollButtons.enable,t.autoHideScrollbar=e.inArray(t.theme,i)>-1?!0:t.autoHideScrollbar,t.scrollbarPosition=e.inArray(t.theme,r)>-1?"outside":t.scrollbarPosition},m=function(e){l[e]&&(clearTimeout(l[e]),$(l,e))},p=function(e){return"yx"===e||"xy"===e||"auto"===e?"yx":"x"===e||"horizontal"===e?"x":"y"},g=function(e){return"stepped"===e||"pixels"===e||"step"===e||"click"===e?"stepped":"stepless"},v=function(){var t=e(this),n=t.data(a),i=n.opt,r=i.autoExpandScrollbar?" "+d[1]+"_expand":"",l=["<div id='mCSB_"+n.idx+"_scrollbar_vertical' class='mCSB_scrollTools mCSB_"+n.idx+"_scrollbar mCS-"+i.theme+" mCSB_scrollTools_vertical"+r+"'><div class='"+d[12]+"'><div id='mCSB_"+n.idx+"_dragger_vertical' class='mCSB_dragger' style='position:absolute;'><div class='mCSB_dragger_bar' /></div><div class='mCSB_draggerRail' /></div></div>","<div id='mCSB_"+n.idx+"_scrollbar_horizontal' class='mCSB_scrollTools mCSB_"+n.idx+"_scrollbar mCS-"+i.theme+" mCSB_scrollTools_horizontal"+r+"'><div class='"+d[12]+"'><div id='mCSB_"+n.idx+"_dragger_horizontal' class='mCSB_dragger' style='position:absolute;'><div class='mCSB_dragger_bar' /></div><div class='mCSB_draggerRail' /></div></div>"],s="yx"===i.axis?"mCSB_vertical_horizontal":"x"===i.axis?"mCSB_horizontal":"mCSB_vertical",c="yx"===i.axis?l[0]+l[1]:"x"===i.axis?l[1]:l[0],u="yx"===i.axis?"<div id='mCSB_"+n.idx+"_container_wrapper' class='mCSB_container_wrapper' />":"",f=i.autoHideScrollbar?" "+d[6]:"",h="x"!==i.axis&&"rtl"===n.langDir?" "+d[7]:"";i.setWidth&&t.css("width",i.setWidth),i.setHeight&&t.css("height",i.setHeight),i.setLeft="y"!==i.axis&&"rtl"===n.langDir?"989999px":i.setLeft,t.addClass(o+" _"+a+"_"+n.idx+f+h).wrapInner("<div id='mCSB_"+n.idx+"' class='mCustomScrollBox mCS-"+i.theme+" "+s+"'><div id='mCSB_"+n.idx+"_container' class='mCSB_container' style='position:relative; top:"+i.setTop+"; left:"+i.setLeft+";' dir='"+n.langDir+"' /></div>");var m=e("#mCSB_"+n.idx),p=e("#mCSB_"+n.idx+"_container");"y"===i.axis||i.advanced.autoExpandHorizontalScroll||p.css("width",x(p)),"outside"===i.scrollbarPosition?("static"===t.css("position")&&t.css("position","relative"),t.css("overflow","visible"),m.addClass("mCSB_outside").after(c)):(m.addClass("mCSB_inside").append(c),p.wrap(u)),w.call(this);var g=[e("#mCSB_"+n.idx+"_dragger_vertical"),e("#mCSB_"+n.idx+"_dragger_horizontal")];g[0].css("min-height",g[0].height()),g[1].css("min-width",g[1].width())},x=function(t){var o=[t[0].scrollWidth,Math.max.apply(Math,t.children().map(function(){return e(this).outerWidth(!0)}).get())],a=t.parent().width();return o[0]>a?o[0]:o[1]>a?o[1]:"100%"},_=function(){var t=e(this),o=t.data(a),n=o.opt,i=e("#mCSB_"+o.idx+"_container");if(n.advanced.autoExpandHorizontalScroll&&"y"!==n.axis){i.css({width:"auto","min-width":0,"overflow-x":"scroll"});var r=Math.ceil(i[0].scrollWidth);3===n.advanced.autoExpandHorizontalScroll||2!==n.advanced.autoExpandHorizontalScroll&&r>i.parent().width()?i.css({width:r,"min-width":"100%","overflow-x":"inherit"}):i.css({"overflow-x":"inherit",position:"absolute"}).wrap("<div class='mCSB_h_wrapper' style='position:relative; left:0; width:999999px;' />").css({width:Math.ceil(i[0].getBoundingClientRect().right+.4)-Math.floor(i[0].getBoundingClientRect().left),"min-width":"100%",position:"relative"}).unwrap()}},w=function(){var t=e(this),o=t.data(a),n=o.opt,i=e(".mCSB_"+o.idx+"_scrollbar:first"),r=oe(n.scrollButtons.tabindex)?"tabindex='"+n.scrollButtons.tabindex+"'":"",l=["<a href='#' class='"+d[13]+"' "+r+" />","<a href='#' class='"+d[14]+"' "+r+" />","<a href='#' class='"+d[15]+"' "+r+" />","<a href='#' class='"+d[16]+"' "+r+" />"],s=["x"===n.axis?l[2]:l[0],"x"===n.axis?l[3]:l[1],l[2],l[3]];n.scrollButtons.enable&&i.prepend(s[0]).append(s[1]).next(".mCSB_scrollTools").prepend(s[2]).append(s[3])},S=function(){var t=e(this),o=t.data(a),n=e("#mCSB_"+o.idx),i=e("#mCSB_"+o.idx+"_container"),r=[e("#mCSB_"+o.idx+"_dragger_vertical"),e("#mCSB_"+o.idx+"_dragger_horizontal")],l=[n.height()/i.outerHeight(!1),n.width()/i.outerWidth(!1)],c=[parseInt(r[0].css("min-height")),Math.round(l[0]*r[0].parent().height()),parseInt(r[1].css("min-width")),Math.round(l[1]*r[1].parent().width())],d=s&&c[1]<c[0]?c[0]:c[1],u=s&&c[3]<c[2]?c[2]:c[3];r[0].css({height:d,"max-height":r[0].parent().height()-10}).find(".mCSB_dragger_bar").css({"line-height":c[0]+"px"}),r[1].css({width:u,"max-width":r[1].parent().width()-10})},b=function(){var t=e(this),o=t.data(a),n=e("#mCSB_"+o.idx),i=e("#mCSB_"+o.idx+"_container"),r=[e("#mCSB_"+o.idx+"_dragger_vertical"),e("#mCSB_"+o.idx+"_dragger_horizontal")],l=[i.outerHeight(!1)-n.height(),i.outerWidth(!1)-n.width()],s=[l[0]/(r[0].parent().height()-r[0].height()),l[1]/(r[1].parent().width()-r[1].width())];o.scrollRatio={y:s[0],x:s[1]}},C=function(e,t,o){var a=o?d[0]+"_expanded":"",n=e.closest(".mCSB_scrollTools");"active"===t?(e.toggleClass(d[0]+" "+a),n.toggleClass(d[1]),e[0]._draggable=e[0]._draggable?0:1):e[0]._draggable||("hide"===t?(e.removeClass(d[0]),n.removeClass(d[1])):(e.addClass(d[0]),n.addClass(d[1])))},y=function(){var t=e(this),o=t.data(a),n=e("#mCSB_"+o.idx),i=e("#mCSB_"+o.idx+"_container"),r=null==o.overflowed?i.height():i.outerHeight(!1),l=null==o.overflowed?i.width():i.outerWidth(!1),s=i[0].scrollHeight,c=i[0].scrollWidth;return s>r&&(r=s),c>l&&(l=c),[r>n.height(),l>n.width()]},B=function(){var t=e(this),o=t.data(a),n=o.opt,i=e("#mCSB_"+o.idx),r=e("#mCSB_"+o.idx+"_container"),l=[e("#mCSB_"+o.idx+"_dragger_vertical"),e("#mCSB_"+o.idx+"_dragger_horizontal")];if(Q(t),("x"!==n.axis&&!o.overflowed[0]||"y"===n.axis&&o.overflowed[0])&&(l[0].add(r).css("top",0),G(t,"_resetY")),"y"!==n.axis&&!o.overflowed[1]||"x"===n.axis&&o.overflowed[1]){var s=dx=0;"rtl"===o.langDir&&(s=i.width()-r.outerWidth(!1),dx=Math.abs(s/o.scrollRatio.x)),r.css("left",s),l[1].css("left",dx),G(t,"_resetX")}},T=function(){function t(){r=setTimeout(function(){e.event.special.mousewheel?(clearTimeout(r),W.call(o[0])):t()},100)}var o=e(this),n=o.data(a),i=n.opt;if(!n.bindEvents){if(I.call(this),i.contentTouchScroll&&D.call(this),E.call(this),i.mouseWheel.enable){var r;t()}P.call(this),U.call(this),i.advanced.autoScrollOnFocus&&H.call(this),i.scrollButtons.enable&&F.call(this),i.keyboard.enable&&q.call(this),n.bindEvents=!0}},k=function(){var t=e(this),o=t.data(a),n=o.opt,i=a+"_"+o.idx,r=".mCSB_"+o.idx+"_scrollbar",l=e("#mCSB_"+o.idx+",#mCSB_"+o.idx+"_container,#mCSB_"+o.idx+"_container_wrapper,"+r+" ."+d[12]+",#mCSB_"+o.idx+"_dragger_vertical,#mCSB_"+o.idx+"_dragger_horizontal,"+r+">a"),s=e("#mCSB_"+o.idx+"_container");n.advanced.releaseDraggableSelectors&&l.add(e(n.advanced.releaseDraggableSelectors)),n.advanced.extraDraggableSelectors&&l.add(e(n.advanced.extraDraggableSelectors)),o.bindEvents&&(e(document).add(e(!A()||top.document)).unbind("."+i),l.each(function(){e(this).unbind("."+i)}),clearTimeout(t[0]._focusTimeout),$(t[0],"_focusTimeout"),clearTimeout(o.sequential.step),$(o.sequential,"step"),clearTimeout(s[0].onCompleteTimeout),$(s[0],"onCompleteTimeout"),o.bindEvents=!1)},M=function(t){var o=e(this),n=o.data(a),i=n.opt,r=e("#mCSB_"+n.idx+"_container_wrapper"),l=r.length?r:e("#mCSB_"+n.idx+"_container"),s=[e("#mCSB_"+n.idx+"_scrollbar_vertical"),e("#mCSB_"+n.idx+"_scrollbar_horizontal")],c=[s[0].find(".mCSB_dragger"),s[1].find(".mCSB_dragger")];"x"!==i.axis&&(n.overflowed[0]&&!t?(s[0].add(c[0]).add(s[0].children("a")).css("display","block"),l.removeClass(d[8]+" "+d[10])):(i.alwaysShowScrollbar?(2!==i.alwaysShowScrollbar&&c[0].css("display","none"),l.removeClass(d[10])):(s[0].css("display","none"),l.addClass(d[10])),l.addClass(d[8]))),"y"!==i.axis&&(n.overflowed[1]&&!t?(s[1].add(c[1]).add(s[1].children("a")).css("display","block"),l.removeClass(d[9]+" "+d[11])):(i.alwaysShowScrollbar?(2!==i.alwaysShowScrollbar&&c[1].css("display","none"),l.removeClass(d[11])):(s[1].css("display","none"),l.addClass(d[11])),l.addClass(d[9]))),n.overflowed[0]||n.overflowed[1]?o.removeClass(d[5]):o.addClass(d[5])},O=function(t){var o=t.type,a=t.target.ownerDocument!==document&&null!==frameElement?[e(frameElement).offset().top,e(frameElement).offset().left]:null,n=A()&&t.target.ownerDocument!==top.document&&null!==frameElement?[e(t.view.frameElement).offset().top,e(t.view.frameElement).offset().left]:[0,0];switch(o){case"pointerdown":case"MSPointerDown":case"pointermove":case"MSPointerMove":case"pointerup":case"MSPointerUp":return a?[t.originalEvent.pageY-a[0]+n[0],t.originalEvent.pageX-a[1]+n[1],!1]:[t.originalEvent.pageY,t.originalEvent.pageX,!1];case"touchstart":case"touchmove":case"touchend":var i=t.originalEvent.touches[0]||t.originalEvent.changedTouches[0],r=t.originalEvent.touches.length||t.originalEvent.changedTouches.length;return t.target.ownerDocument!==document?[i.screenY,i.screenX,r>1]:[i.pageY,i.pageX,r>1];default:return a?[t.pageY-a[0]+n[0],t.pageX-a[1]+n[1],!1]:[t.pageY,t.pageX,!1]}},I=function(){function t(e,t,a,n){if(h[0].idleTimer=d.scrollInertia<233?250:0,o.attr("id")===f[1])var i="x",s=(o[0].offsetLeft-t+n)*l.scrollRatio.x;else var i="y",s=(o[0].offsetTop-e+a)*l.scrollRatio.y;G(r,s.toString(),{dir:i,drag:!0})}var o,n,i,r=e(this),l=r.data(a),d=l.opt,u=a+"_"+l.idx,f=["mCSB_"+l.idx+"_dragger_vertical","mCSB_"+l.idx+"_dragger_horizontal"],h=e("#mCSB_"+l.idx+"_container"),m=e("#"+f[0]+",#"+f[1]),p=d.advanced.releaseDraggableSelectors?m.add(e(d.advanced.releaseDraggableSelectors)):m,g=d.advanced.extraDraggableSelectors?e(!A()||top.document).add(e(d.advanced.extraDraggableSelectors)):e(!A()||top.document);m.bind("contextmenu."+u,function(e){e.preventDefault()}).bind("mousedown."+u+" touchstart."+u+" pointerdown."+u+" MSPointerDown."+u,function(t){if(t.stopImmediatePropagation(),t.preventDefault(),ee(t)){c=!0,s&&(document.onselectstart=function(){return!1}),L.call(h,!1),Q(r),o=e(this);var a=o.offset(),l=O(t)[0]-a.top,u=O(t)[1]-a.left,f=o.height()+a.top,m=o.width()+a.left;f>l&&l>0&&m>u&&u>0&&(n=l,i=u),C(o,"active",d.autoExpandScrollbar)}}).bind("touchmove."+u,function(e){e.stopImmediatePropagation(),e.preventDefault();var a=o.offset(),r=O(e)[0]-a.top,l=O(e)[1]-a.left;t(n,i,r,l)}),e(document).add(g).bind("mousemove."+u+" pointermove."+u+" MSPointerMove."+u,function(e){if(o){var a=o.offset(),r=O(e)[0]-a.top,l=O(e)[1]-a.left;if(n===r&&i===l)return;t(n,i,r,l)}}).add(p).bind("mouseup."+u+" touchend."+u+" pointerup."+u+" MSPointerUp."+u,function(){o&&(C(o,"active",d.autoExpandScrollbar),o=null),c=!1,s&&(document.onselectstart=null),L.call(h,!0)})},D=function(){function o(e){if(!te(e)||c||O(e)[2])return void(t=0);t=1,b=0,C=0,d=1,y.removeClass("mCS_touch_action");var o=I.offset();u=O(e)[0]-o.top,f=O(e)[1]-o.left,z=[O(e)[0],O(e)[1]]}function n(e){if(te(e)&&!c&&!O(e)[2]&&(T.documentTouchScroll||e.preventDefault(),e.stopImmediatePropagation(),(!C||b)&&d)){g=K();var t=M.offset(),o=O(e)[0]-t.top,a=O(e)[1]-t.left,n="mcsLinearOut";if(E.push(o),W.push(a),z[2]=Math.abs(O(e)[0]-z[0]),z[3]=Math.abs(O(e)[1]-z[1]),B.overflowed[0])var i=D[0].parent().height()-D[0].height(),r=u-o>0&&o-u>-(i*B.scrollRatio.y)&&(2*z[3]<z[2]||"yx"===T.axis);if(B.overflowed[1])var l=D[1].parent().width()-D[1].width(),h=f-a>0&&a-f>-(l*B.scrollRatio.x)&&(2*z[2]<z[3]||"yx"===T.axis);r||h?(U||e.preventDefault(),b=1):(C=1,y.addClass("mCS_touch_action")),U&&e.preventDefault(),w="yx"===T.axis?[u-o,f-a]:"x"===T.axis?[null,f-a]:[u-o,null],I[0].idleTimer=250,B.overflowed[0]&&s(w[0],R,n,"y","all",!0),B.overflowed[1]&&s(w[1],R,n,"x",L,!0)}}function i(e){if(!te(e)||c||O(e)[2])return void(t=0);t=1,e.stopImmediatePropagation(),Q(y),p=K();var o=M.offset();h=O(e)[0]-o.top,m=O(e)[1]-o.left,E=[],W=[]}function r(e){if(te(e)&&!c&&!O(e)[2]){d=0,e.stopImmediatePropagation(),b=0,C=0,v=K();var t=M.offset(),o=O(e)[0]-t.top,a=O(e)[1]-t.left;if(!(v-g>30)){_=1e3/(v-p);var n="mcsEaseOut",i=2.5>_,r=i?[E[E.length-2],W[W.length-2]]:[0,0];x=i?[o-r[0],a-r[1]]:[o-h,a-m];var u=[Math.abs(x[0]),Math.abs(x[1])];_=i?[Math.abs(x[0]/4),Math.abs(x[1]/4)]:[_,_];var f=[Math.abs(I[0].offsetTop)-x[0]*l(u[0]/_[0],_[0]),Math.abs(I[0].offsetLeft)-x[1]*l(u[1]/_[1],_[1])];w="yx"===T.axis?[f[0],f[1]]:"x"===T.axis?[null,f[1]]:[f[0],null],S=[4*u[0]+T.scrollInertia,4*u[1]+T.scrollInertia];var y=parseInt(T.contentTouchScroll)||0;w[0]=u[0]>y?w[0]:0,w[1]=u[1]>y?w[1]:0,B.overflowed[0]&&s(w[0],S[0],n,"y",L,!1),B.overflowed[1]&&s(w[1],S[1],n,"x",L,!1)}}}function l(e,t){var o=[1.5*t,2*t,t/1.5,t/2];return e>90?t>4?o[0]:o[3]:e>60?t>3?o[3]:o[2]:e>30?t>8?o[1]:t>6?o[0]:t>4?t:o[2]:t>8?t:o[3]}function s(e,t,o,a,n,i){e&&G(y,e.toString(),{dur:t,scrollEasing:o,dir:a,overwrite:n,drag:i})}var d,u,f,h,m,p,g,v,x,_,w,S,b,C,y=e(this),B=y.data(a),T=B.opt,k=a+"_"+B.idx,M=e("#mCSB_"+B.idx),I=e("#mCSB_"+B.idx+"_container"),D=[e("#mCSB_"+B.idx+"_dragger_vertical"),e("#mCSB_"+B.idx+"_dragger_horizontal")],E=[],W=[],R=0,L="yx"===T.axis?"none":"all",z=[],P=I.find("iframe"),H=["touchstart."+k+" pointerdown."+k+" MSPointerDown."+k,"touchmove."+k+" pointermove."+k+" MSPointerMove."+k,"touchend."+k+" pointerup."+k+" MSPointerUp."+k],U=void 0!==document.body.style.touchAction&&""!==document.body.style.touchAction;I.bind(H[0],function(e){o(e)}).bind(H[1],function(e){n(e)}),M.bind(H[0],function(e){i(e)}).bind(H[2],function(e){r(e)}),P.length&&P.each(function(){e(this).bind("load",function(){A(this)&&e(this.contentDocument||this.contentWindow.document).bind(H[0],function(e){o(e),i(e)}).bind(H[1],function(e){n(e)}).bind(H[2],function(e){r(e)})})})},E=function(){function o(){return window.getSelection?window.getSelection().toString():document.selection&&"Control"!=document.selection.type?document.selection.createRange().text:0}function n(e,t,o){d.type=o&&i?"stepped":"stepless",d.scrollAmount=10,j(r,e,t,"mcsLinearOut",o?60:null)}var i,r=e(this),l=r.data(a),s=l.opt,d=l.sequential,u=a+"_"+l.idx,f=e("#mCSB_"+l.idx+"_container"),h=f.parent();f.bind("mousedown."+u,function(){t||i||(i=1,c=!0)}).add(document).bind("mousemove."+u,function(e){if(!t&&i&&o()){var a=f.offset(),r=O(e)[0]-a.top+f[0].offsetTop,c=O(e)[1]-a.left+f[0].offsetLeft;r>0&&r<h.height()&&c>0&&c<h.width()?d.step&&n("off",null,"stepped"):("x"!==s.axis&&l.overflowed[0]&&(0>r?n("on",38):r>h.height()&&n("on",40)),"y"!==s.axis&&l.overflowed[1]&&(0>c?n("on",37):c>h.width()&&n("on",39)))}}).bind("mouseup."+u+" dragend."+u,function(){t||(i&&(i=0,n("off",null)),c=!1)})},W=function(){function t(t,a){if(Q(o),!z(o,t.target)){var r="auto"!==i.mouseWheel.deltaFactor?parseInt(i.mouseWheel.deltaFactor):s&&t.deltaFactor<100?100:t.deltaFactor||100,d=i.scrollInertia;if("x"===i.axis||"x"===i.mouseWheel.axis)var u="x",f=[Math.round(r*n.scrollRatio.x),parseInt(i.mouseWheel.scrollAmount)],h="auto"!==i.mouseWheel.scrollAmount?f[1]:f[0]>=l.width()?.9*l.width():f[0],m=Math.abs(e("#mCSB_"+n.idx+"_container")[0].offsetLeft),p=c[1][0].offsetLeft,g=c[1].parent().width()-c[1].width(),v="y"===i.mouseWheel.axis?t.deltaY||a:t.deltaX;else var u="y",f=[Math.round(r*n.scrollRatio.y),parseInt(i.mouseWheel.scrollAmount)],h="auto"!==i.mouseWheel.scrollAmount?f[1]:f[0]>=l.height()?.9*l.height():f[0],m=Math.abs(e("#mCSB_"+n.idx+"_container")[0].offsetTop),p=c[0][0].offsetTop,g=c[0].parent().height()-c[0].height(),v=t.deltaY||a;"y"===u&&!n.overflowed[0]||"x"===u&&!n.overflowed[1]||((i.mouseWheel.invert||t.webkitDirectionInvertedFromDevice)&&(v=-v),i.mouseWheel.normalizeDelta&&(v=0>v?-1:1),(v>0&&0!==p||0>v&&p!==g||i.mouseWheel.preventDefault)&&(t.stopImmediatePropagation(),t.preventDefault()),t.deltaFactor<5&&!i.mouseWheel.normalizeDelta&&(h=t.deltaFactor,d=17),G(o,(m-v*h).toString(),{dir:u,dur:d}))}}if(e(this).data(a)){var o=e(this),n=o.data(a),i=n.opt,r=a+"_"+n.idx,l=e("#mCSB_"+n.idx),c=[e("#mCSB_"+n.idx+"_dragger_vertical"),e("#mCSB_"+n.idx+"_dragger_horizontal")],d=e("#mCSB_"+n.idx+"_container").find("iframe");d.length&&d.each(function(){e(this).bind("load",function(){A(this)&&e(this.contentDocument||this.contentWindow.document).bind("mousewheel."+r,function(e,o){t(e,o)})})}),l.bind("mousewheel."+r,function(e,o){t(e,o)})}},R=new Object,A=function(t){var o=!1,a=!1,n=null;if(void 0===t?a="#empty":void 0!==e(t).attr("id")&&(a=e(t).attr("id")),a!==!1&&void 0!==R[a])return R[a];if(t){try{var i=t.contentDocument||t.contentWindow.document;n=i.body.innerHTML}catch(r){}o=null!==n}else{try{var i=top.document;n=i.body.innerHTML}catch(r){}o=null!==n}return a!==!1&&(R[a]=o),o},L=function(e){var t=this.find("iframe");if(t.length){var o=e?"auto":"none";t.css("pointer-events",o)}},z=function(t,o){var n=o.nodeName.toLowerCase(),i=t.data(a).opt.mouseWheel.disableOver,r=["select","textarea"];return e.inArray(n,i)>-1&&!(e.inArray(n,r)>-1&&!e(o).is(":focus"))},P=function(){var t,o=e(this),n=o.data(a),i=a+"_"+n.idx,r=e("#mCSB_"+n.idx+"_container"),l=r.parent(),s=e(".mCSB_"+n.idx+"_scrollbar ."+d[12]);s.bind("mousedown."+i+" touchstart."+i+" pointerdown."+i+" MSPointerDown."+i,function(o){c=!0,e(o.target).hasClass("mCSB_dragger")||(t=1)}).bind("touchend."+i+" pointerup."+i+" MSPointerUp."+i,function(){c=!1}).bind("click."+i,function(a){if(t&&(t=0,e(a.target).hasClass(d[12])||e(a.target).hasClass("mCSB_draggerRail"))){Q(o);var i=e(this),s=i.find(".mCSB_dragger");if(i.parent(".mCSB_scrollTools_horizontal").length>0){if(!n.overflowed[1])return;var c="x",u=a.pageX>s.offset().left?-1:1,f=Math.abs(r[0].offsetLeft)-u*(.9*l.width())}else{if(!n.overflowed[0])return;var c="y",u=a.pageY>s.offset().top?-1:1,f=Math.abs(r[0].offsetTop)-u*(.9*l.height())}G(o,f.toString(),{dir:c,scrollEasing:"mcsEaseInOut"})}})},H=function(){var t=e(this),o=t.data(a),n=o.opt,i=a+"_"+o.idx,r=e("#mCSB_"+o.idx+"_container"),l=r.parent();r.bind("focusin."+i,function(){var o=e(document.activeElement),a=r.find(".mCustomScrollBox").length,i=0;o.is(n.advanced.autoScrollOnFocus)&&(Q(t),clearTimeout(t[0]._focusTimeout),t[0]._focusTimer=a?(i+17)*a:0,t[0]._focusTimeout=setTimeout(function(){var e=[ae(o)[0],ae(o)[1]],a=[r[0].offsetTop,r[0].offsetLeft],s=[a[0]+e[0]>=0&&a[0]+e[0]<l.height()-o.outerHeight(!1),a[1]+e[1]>=0&&a[0]+e[1]<l.width()-o.outerWidth(!1)],c="yx"!==n.axis||s[0]||s[1]?"all":"none";"x"===n.axis||s[0]||G(t,e[0].toString(),{dir:"y",scrollEasing:"mcsEaseInOut",overwrite:c,dur:i}),"y"===n.axis||s[1]||G(t,e[1].toString(),{dir:"x",scrollEasing:"mcsEaseInOut",overwrite:c,dur:i})},t[0]._focusTimer))})},U=function(){var t=e(this),o=t.data(a),n=a+"_"+o.idx,i=e("#mCSB_"+o.idx+"_container").parent();i.bind("scroll."+n,function(){0===i.scrollTop()&&0===i.scrollLeft()||e(".mCSB_"+o.idx+"_scrollbar").css("visibility","hidden")})},F=function(){var t=e(this),o=t.data(a),n=o.opt,i=o.sequential,r=a+"_"+o.idx,l=".mCSB_"+o.idx+"_scrollbar",s=e(l+">a");s.bind("contextmenu."+r,function(e){e.preventDefault()}).bind("mousedown."+r+" touchstart."+r+" pointerdown."+r+" MSPointerDown."+r+" mouseup."+r+" touchend."+r+" pointerup."+r+" MSPointerUp."+r+" mouseout."+r+" pointerout."+r+" MSPointerOut."+r+" click."+r,function(a){function r(e,o){i.scrollAmount=n.scrollButtons.scrollAmount,j(t,e,o)}if(a.preventDefault(),ee(a)){var l=e(this).attr("class");switch(i.type=n.scrollButtons.scrollType,a.type){case"mousedown":case"touchstart":case"pointerdown":case"MSPointerDown":if("stepped"===i.type)return;c=!0,o.tweenRunning=!1,r("on",l);break;case"mouseup":case"touchend":case"pointerup":case"MSPointerUp":case"mouseout":case"pointerout":case"MSPointerOut":if("stepped"===i.type)return;c=!1,i.dir&&r("off",l);break;case"click":if("stepped"!==i.type||o.tweenRunning)return;r("on",l)}}})},q=function(){function t(t){function a(e,t){r.type=i.keyboard.scrollType,r.scrollAmount=i.keyboard.scrollAmount,"stepped"===r.type&&n.tweenRunning||j(o,e,t)}switch(t.type){case"blur":n.tweenRunning&&r.dir&&a("off",null);break;case"keydown":case"keyup":var l=t.keyCode?t.keyCode:t.which,s="on";if("x"!==i.axis&&(38===l||40===l)||"y"!==i.axis&&(37===l||39===l)){if((38===l||40===l)&&!n.overflowed[0]||(37===l||39===l)&&!n.overflowed[1])return;"keyup"===t.type&&(s="off"),e(document.activeElement).is(u)||(t.preventDefault(),t.stopImmediatePropagation(),a(s,l))}else if(33===l||34===l){if((n.overflowed[0]||n.overflowed[1])&&(t.preventDefault(),t.stopImmediatePropagation()),"keyup"===t.type){Q(o);var f=34===l?-1:1;if("x"===i.axis||"yx"===i.axis&&n.overflowed[1]&&!n.overflowed[0])var h="x",m=Math.abs(c[0].offsetLeft)-f*(.9*d.width());else var h="y",m=Math.abs(c[0].offsetTop)-f*(.9*d.height());G(o,m.toString(),{dir:h,scrollEasing:"mcsEaseInOut"})}}else if((35===l||36===l)&&!e(document.activeElement).is(u)&&((n.overflowed[0]||n.overflowed[1])&&(t.preventDefault(),t.stopImmediatePropagation()),"keyup"===t.type)){if("x"===i.axis||"yx"===i.axis&&n.overflowed[1]&&!n.overflowed[0])var h="x",m=35===l?Math.abs(d.width()-c.outerWidth(!1)):0;else var h="y",m=35===l?Math.abs(d.height()-c.outerHeight(!1)):0;G(o,m.toString(),{dir:h,scrollEasing:"mcsEaseInOut"})}}}var o=e(this),n=o.data(a),i=n.opt,r=n.sequential,l=a+"_"+n.idx,s=e("#mCSB_"+n.idx),c=e("#mCSB_"+n.idx+"_container"),d=c.parent(),u="input,textarea,select,datalist,keygen,[contenteditable='true']",f=c.find("iframe"),h=["blur."+l+" keydown."+l+" keyup."+l];f.length&&f.each(function(){e(this).bind("load",function(){A(this)&&e(this.contentDocument||this.contentWindow.document).bind(h[0],function(e){t(e)})})}),s.attr("tabindex","0").bind(h[0],function(e){t(e)})},j=function(t,o,n,i,r){function l(e){u.snapAmount&&(f.scrollAmount=u.snapAmount instanceof Array?"x"===f.dir[0]?u.snapAmount[1]:u.snapAmount[0]:u.snapAmount);var o="stepped"!==f.type,a=r?r:e?o?p/1.5:g:1e3/60,n=e?o?7.5:40:2.5,s=[Math.abs(h[0].offsetTop),Math.abs(h[0].offsetLeft)],d=[c.scrollRatio.y>10?10:c.scrollRatio.y,c.scrollRatio.x>10?10:c.scrollRatio.x],m="x"===f.dir[0]?s[1]+f.dir[1]*(d[1]*n):s[0]+f.dir[1]*(d[0]*n),v="x"===f.dir[0]?s[1]+f.dir[1]*parseInt(f.scrollAmount):s[0]+f.dir[1]*parseInt(f.scrollAmount),x="auto"!==f.scrollAmount?v:m,_=i?i:e?o?"mcsLinearOut":"mcsEaseInOut":"mcsLinear",w=!!e;return e&&17>a&&(x="x"===f.dir[0]?s[1]:s[0]),G(t,x.toString(),{dir:f.dir[0],scrollEasing:_,dur:a,onComplete:w}),e?void(f.dir=!1):(clearTimeout(f.step),void(f.step=setTimeout(function(){l()},a)))}function s(){clearTimeout(f.step),$(f,"step"),Q(t)}var c=t.data(a),u=c.opt,f=c.sequential,h=e("#mCSB_"+c.idx+"_container"),m="stepped"===f.type,p=u.scrollInertia<26?26:u.scrollInertia,g=u.scrollInertia<1?17:u.scrollInertia;switch(o){case"on":if(f.dir=[n===d[16]||n===d[15]||39===n||37===n?"x":"y",n===d[13]||n===d[15]||38===n||37===n?-1:1],Q(t),oe(n)&&"stepped"===f.type)return;l(m);break;case"off":s(),(m||c.tweenRunning&&f.dir)&&l(!0)}},Y=function(t){var o=e(this).data(a).opt,n=[];return"function"==typeof t&&(t=t()),t instanceof Array?n=t.length>1?[t[0],t[1]]:"x"===o.axis?[null,t[0]]:[t[0],null]:(n[0]=t.y?t.y:t.x||"x"===o.axis?null:t,n[1]=t.x?t.x:t.y||"y"===o.axis?null:t),"function"==typeof n[0]&&(n[0]=n[0]()),"function"==typeof n[1]&&(n[1]=n[1]()),n},X=function(t,o){if(null!=t&&"undefined"!=typeof t){var n=e(this),i=n.data(a),r=i.opt,l=e("#mCSB_"+i.idx+"_container"),s=l.parent(),c=typeof t;o||(o="x"===r.axis?"x":"y");var d="x"===o?l.outerWidth(!1)-s.width():l.outerHeight(!1)-s.height(),f="x"===o?l[0].offsetLeft:l[0].offsetTop,h="x"===o?"left":"top";switch(c){case"function":return t();case"object":var m=t.jquery?t:e(t);if(!m.length)return;return"x"===o?ae(m)[1]:ae(m)[0];case"string":case"number":if(oe(t))return Math.abs(t);if(-1!==t.indexOf("%"))return Math.abs(d*parseInt(t)/100);if(-1!==t.indexOf("-="))return Math.abs(f-parseInt(t.split("-=")[1]));if(-1!==t.indexOf("+=")){var p=f+parseInt(t.split("+=")[1]);return p>=0?0:Math.abs(p)}if(-1!==t.indexOf("px")&&oe(t.split("px")[0]))return Math.abs(t.split("px")[0]);if("top"===t||"left"===t)return 0;if("bottom"===t)return Math.abs(s.height()-l.outerHeight(!1));if("right"===t)return Math.abs(s.width()-l.outerWidth(!1));if("first"===t||"last"===t){var m=l.find(":"+t);return"x"===o?ae(m)[1]:ae(m)[0]}return e(t).length?"x"===o?ae(e(t))[1]:ae(e(t))[0]:(l.css(h,t),void u.update.call(null,n[0]))}}},N=function(t){function o(){return clearTimeout(f[0].autoUpdate),0===l.parents("html").length?void(l=null):void(f[0].autoUpdate=setTimeout(function(){return c.advanced.updateOnSelectorChange&&(s.poll.change.n=i(),s.poll.change.n!==s.poll.change.o)?(s.poll.change.o=s.poll.change.n,void r(3)):c.advanced.updateOnContentResize&&(s.poll.size.n=l[0].scrollHeight+l[0].scrollWidth+f[0].offsetHeight+l[0].offsetHeight+l[0].offsetWidth,s.poll.size.n!==s.poll.size.o)?(s.poll.size.o=s.poll.size.n,void r(1)):!c.advanced.updateOnImageLoad||"auto"===c.advanced.updateOnImageLoad&&"y"===c.axis||(s.poll.img.n=f.find("img").length,s.poll.img.n===s.poll.img.o)?void((c.advanced.updateOnSelectorChange||c.advanced.updateOnContentResize||c.advanced.updateOnImageLoad)&&o()):(s.poll.img.o=s.poll.img.n,void f.find("img").each(function(){n(this)}))},c.advanced.autoUpdateTimeout))}function n(t){function o(e,t){return function(){
return t.apply(e,arguments)}}function a(){this.onload=null,e(t).addClass(d[2]),r(2)}if(e(t).hasClass(d[2]))return void r();var n=new Image;n.onload=o(n,a),n.src=t.src}function i(){c.advanced.updateOnSelectorChange===!0&&(c.advanced.updateOnSelectorChange="*");var e=0,t=f.find(c.advanced.updateOnSelectorChange);return c.advanced.updateOnSelectorChange&&t.length>0&&t.each(function(){e+=this.offsetHeight+this.offsetWidth}),e}function r(e){clearTimeout(f[0].autoUpdate),u.update.call(null,l[0],e)}var l=e(this),s=l.data(a),c=s.opt,f=e("#mCSB_"+s.idx+"_container");return t?(clearTimeout(f[0].autoUpdate),void $(f[0],"autoUpdate")):void o()},V=function(e,t,o){return Math.round(e/t)*t-o},Q=function(t){var o=t.data(a),n=e("#mCSB_"+o.idx+"_container,#mCSB_"+o.idx+"_container_wrapper,#mCSB_"+o.idx+"_dragger_vertical,#mCSB_"+o.idx+"_dragger_horizontal");n.each(function(){Z.call(this)})},G=function(t,o,n){function i(e){return s&&c.callbacks[e]&&"function"==typeof c.callbacks[e]}function r(){return[c.callbacks.alwaysTriggerOffsets||w>=S[0]+y,c.callbacks.alwaysTriggerOffsets||-B>=w]}function l(){var e=[h[0].offsetTop,h[0].offsetLeft],o=[x[0].offsetTop,x[0].offsetLeft],a=[h.outerHeight(!1),h.outerWidth(!1)],i=[f.height(),f.width()];t[0].mcs={content:h,top:e[0],left:e[1],draggerTop:o[0],draggerLeft:o[1],topPct:Math.round(100*Math.abs(e[0])/(Math.abs(a[0])-i[0])),leftPct:Math.round(100*Math.abs(e[1])/(Math.abs(a[1])-i[1])),direction:n.dir}}var s=t.data(a),c=s.opt,d={trigger:"internal",dir:"y",scrollEasing:"mcsEaseOut",drag:!1,dur:c.scrollInertia,overwrite:"all",callbacks:!0,onStart:!0,onUpdate:!0,onComplete:!0},n=e.extend(d,n),u=[n.dur,n.drag?0:n.dur],f=e("#mCSB_"+s.idx),h=e("#mCSB_"+s.idx+"_container"),m=h.parent(),p=c.callbacks.onTotalScrollOffset?Y.call(t,c.callbacks.onTotalScrollOffset):[0,0],g=c.callbacks.onTotalScrollBackOffset?Y.call(t,c.callbacks.onTotalScrollBackOffset):[0,0];if(s.trigger=n.trigger,0===m.scrollTop()&&0===m.scrollLeft()||(e(".mCSB_"+s.idx+"_scrollbar").css("visibility","visible"),m.scrollTop(0).scrollLeft(0)),"_resetY"!==o||s.contentReset.y||(i("onOverflowYNone")&&c.callbacks.onOverflowYNone.call(t[0]),s.contentReset.y=1),"_resetX"!==o||s.contentReset.x||(i("onOverflowXNone")&&c.callbacks.onOverflowXNone.call(t[0]),s.contentReset.x=1),"_resetY"!==o&&"_resetX"!==o){if(!s.contentReset.y&&t[0].mcs||!s.overflowed[0]||(i("onOverflowY")&&c.callbacks.onOverflowY.call(t[0]),s.contentReset.x=null),!s.contentReset.x&&t[0].mcs||!s.overflowed[1]||(i("onOverflowX")&&c.callbacks.onOverflowX.call(t[0]),s.contentReset.x=null),c.snapAmount){var v=c.snapAmount instanceof Array?"x"===n.dir?c.snapAmount[1]:c.snapAmount[0]:c.snapAmount;o=V(o,v,c.snapOffset)}switch(n.dir){case"x":var x=e("#mCSB_"+s.idx+"_dragger_horizontal"),_="left",w=h[0].offsetLeft,S=[f.width()-h.outerWidth(!1),x.parent().width()-x.width()],b=[o,0===o?0:o/s.scrollRatio.x],y=p[1],B=g[1],T=y>0?y/s.scrollRatio.x:0,k=B>0?B/s.scrollRatio.x:0;break;case"y":var x=e("#mCSB_"+s.idx+"_dragger_vertical"),_="top",w=h[0].offsetTop,S=[f.height()-h.outerHeight(!1),x.parent().height()-x.height()],b=[o,0===o?0:o/s.scrollRatio.y],y=p[0],B=g[0],T=y>0?y/s.scrollRatio.y:0,k=B>0?B/s.scrollRatio.y:0}b[1]<0||0===b[0]&&0===b[1]?b=[0,0]:b[1]>=S[1]?b=[S[0],S[1]]:b[0]=-b[0],t[0].mcs||(l(),i("onInit")&&c.callbacks.onInit.call(t[0])),clearTimeout(h[0].onCompleteTimeout),J(x[0],_,Math.round(b[1]),u[1],n.scrollEasing),!s.tweenRunning&&(0===w&&b[0]>=0||w===S[0]&&b[0]<=S[0])||J(h[0],_,Math.round(b[0]),u[0],n.scrollEasing,n.overwrite,{onStart:function(){n.callbacks&&n.onStart&&!s.tweenRunning&&(i("onScrollStart")&&(l(),c.callbacks.onScrollStart.call(t[0])),s.tweenRunning=!0,C(x),s.cbOffsets=r())},onUpdate:function(){n.callbacks&&n.onUpdate&&i("whileScrolling")&&(l(),c.callbacks.whileScrolling.call(t[0]))},onComplete:function(){if(n.callbacks&&n.onComplete){"yx"===c.axis&&clearTimeout(h[0].onCompleteTimeout);var e=h[0].idleTimer||0;h[0].onCompleteTimeout=setTimeout(function(){i("onScroll")&&(l(),c.callbacks.onScroll.call(t[0])),i("onTotalScroll")&&b[1]>=S[1]-T&&s.cbOffsets[0]&&(l(),c.callbacks.onTotalScroll.call(t[0])),i("onTotalScrollBack")&&b[1]<=k&&s.cbOffsets[1]&&(l(),c.callbacks.onTotalScrollBack.call(t[0])),s.tweenRunning=!1,h[0].idleTimer=0,C(x,"hide")},e)}}})}},J=function(e,t,o,a,n,i,r){function l(){S.stop||(x||m.call(),x=K()-v,s(),x>=S.time&&(S.time=x>S.time?x+f-(x-S.time):x+f-1,S.time<x+1&&(S.time=x+1)),S.time<a?S.id=h(l):g.call())}function s(){a>0?(S.currVal=u(S.time,_,b,a,n),w[t]=Math.round(S.currVal)+"px"):w[t]=o+"px",p.call()}function c(){f=1e3/60,S.time=x+f,h=window.requestAnimationFrame?window.requestAnimationFrame:function(e){return s(),setTimeout(e,.01)},S.id=h(l)}function d(){null!=S.id&&(window.requestAnimationFrame?window.cancelAnimationFrame(S.id):clearTimeout(S.id),S.id=null)}function u(e,t,o,a,n){switch(n){case"linear":case"mcsLinear":return o*e/a+t;case"mcsLinearOut":return e/=a,e--,o*Math.sqrt(1-e*e)+t;case"easeInOutSmooth":return e/=a/2,1>e?o/2*e*e+t:(e--,-o/2*(e*(e-2)-1)+t);case"easeInOutStrong":return e/=a/2,1>e?o/2*Math.pow(2,10*(e-1))+t:(e--,o/2*(-Math.pow(2,-10*e)+2)+t);case"easeInOut":case"mcsEaseInOut":return e/=a/2,1>e?o/2*e*e*e+t:(e-=2,o/2*(e*e*e+2)+t);case"easeOutSmooth":return e/=a,e--,-o*(e*e*e*e-1)+t;case"easeOutStrong":return o*(-Math.pow(2,-10*e/a)+1)+t;case"easeOut":case"mcsEaseOut":default:var i=(e/=a)*e,r=i*e;return t+o*(.499999999999997*r*i+-2.5*i*i+5.5*r+-6.5*i+4*e)}}e._mTween||(e._mTween={top:{},left:{}});var f,h,r=r||{},m=r.onStart||function(){},p=r.onUpdate||function(){},g=r.onComplete||function(){},v=K(),x=0,_=e.offsetTop,w=e.style,S=e._mTween[t];"left"===t&&(_=e.offsetLeft);var b=o-_;S.stop=0,"none"!==i&&d(),c()},K=function(){return window.performance&&window.performance.now?window.performance.now():window.performance&&window.performance.webkitNow?window.performance.webkitNow():Date.now?Date.now():(new Date).getTime()},Z=function(){var e=this;e._mTween||(e._mTween={top:{},left:{}});for(var t=["top","left"],o=0;o<t.length;o++){var a=t[o];e._mTween[a].id&&(window.requestAnimationFrame?window.cancelAnimationFrame(e._mTween[a].id):clearTimeout(e._mTween[a].id),e._mTween[a].id=null,e._mTween[a].stop=1)}},$=function(e,t){try{delete e[t]}catch(o){e[t]=null}},ee=function(e){return!(e.which&&1!==e.which)},te=function(e){var t=e.originalEvent.pointerType;return!(t&&"touch"!==t&&2!==t)},oe=function(e){return!isNaN(parseFloat(e))&&isFinite(e)},ae=function(e){var t=e.parents(".mCSB_container");return[e.offset().top-t.offset().top,e.offset().left-t.offset().left]},ne=function(){function e(){var e=["webkit","moz","ms","o"];if("hidden"in document)return"hidden";for(var t=0;t<e.length;t++)if(e[t]+"Hidden"in document)return e[t]+"Hidden";return null}var t=e();return t?document[t]:!1};e.fn[o]=function(t){return u[t]?u[t].apply(this,Array.prototype.slice.call(arguments,1)):"object"!=typeof t&&t?void e.error("Method "+t+" does not exist"):u.init.apply(this,arguments)},e[o]=function(t){return u[t]?u[t].apply(this,Array.prototype.slice.call(arguments,1)):"object"!=typeof t&&t?void e.error("Method "+t+" does not exist"):u.init.apply(this,arguments)},e[o].defaults=i,window[o]=!0,e(window).bind("load",function(){e(n)[o](),e.extend(e.expr[":"],{mcsInView:e.expr[":"].mcsInView||function(t){var o,a,n=e(t),i=n.parents(".mCSB_container");if(i.length)return o=i.parent(),a=[i[0].offsetTop,i[0].offsetLeft],a[0]+ae(n)[0]>=0&&a[0]+ae(n)[0]<o.height()-n.outerHeight(!1)&&a[1]+ae(n)[1]>=0&&a[1]+ae(n)[1]<o.width()-n.outerWidth(!1)},mcsInSight:e.expr[":"].mcsInSight||function(t,o,a){var n,i,r,l,s=e(t),c=s.parents(".mCSB_container"),d="exact"===a[3]?[[1,0],[1,0]]:[[.9,.1],[.6,.4]];if(c.length)return n=[s.outerHeight(!1),s.outerWidth(!1)],r=[c[0].offsetTop+ae(s)[0],c[0].offsetLeft+ae(s)[1]],i=[c.parent()[0].offsetHeight,c.parent()[0].offsetWidth],l=[n[0]<i[0]?d[0]:d[1],n[1]<i[1]?d[0]:d[1]],r[0]-i[0]*l[0][0]<0&&r[0]+n[0]-i[0]*l[0][1]>=0&&r[1]-i[1]*l[1][0]<0&&r[1]+n[1]-i[1]*l[1][1]>=0},mcsOverflow:e.expr[":"].mcsOverflow||function(t){var o=e(t).data(a);if(o)return o.overflowed[0]||o.overflowed[1]}})})})});